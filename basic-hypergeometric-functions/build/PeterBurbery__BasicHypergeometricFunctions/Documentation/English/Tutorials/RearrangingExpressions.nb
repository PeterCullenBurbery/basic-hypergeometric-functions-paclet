(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    427779,      11641]
NotebookOptionsPosition[    397946,      11001]
NotebookOutlinePosition[    401377,      11081]
CellTagsIndexPosition[    401179,      11074]
WindowTitle->Rearranging Expressions
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "PETER BURBERY/ BASIC HYPERGEOMETRIC FUNCTIONS TECH NOTE", 
           "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "a4adf1bf-ede9-49c1-9992-81ff491879bf"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "38055b9b-dff6-4b5b-9de2-9f15bf17b6cf"],
        Background->RGBColor[
         0.3843137254901961, 0.4627450980392157, 0.7019607843137254],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "80e8a570-2511-412d-bdfd-4f80fea8c19e"]
        }],ExpressionUUID->"c7c92c3d-ffab-484a-b147-4cd98eea9e3c"],
        StripOnInput->False],{
       "\"PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions\"" :> None, 
        "\"Copy Wolfram Documentation Center URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell["PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions"]}, Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
        "\"Copy web URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell[BoxData[
                MakeBoxes[
                 Hyperlink[
                  "http://reference.wolfram.com/language/PeterBurbery/\
BasicHypergeometricFunctions/tutorial/RearrangingExpressions.html"], 
                  StandardForm]], "Input", TextClipboardType -> "PlainText"]},
               Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        "\"Go to web URL\"" :> 
        FrontEndExecute[{
          NotebookLocate[{
            URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$115010], 
                "http://reference.wolfram.com/system-modeler/", 
                "http://reference.wolfram.com/language/"] <> 
              "PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions" <> ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "54ea4c89-c787-417c-9055-15f3122b2d59"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "4fdc6cac-106f-4e85-8436-e277d49df204"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"e7d32f16-7a49-4078-b232-10d933ffcecd"],

Cell[CellGroupData[{

Cell["Rearranging Expressions", "TechNoteTitle",
 CellID->555292541,ExpressionUUID->"4392a549-f5bc-4eed-86cd-bd4f56abb022"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Put Q in the front"], 
      "paclet:PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions#2591", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Examples"], 
      "paclet:PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions#194172257", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Rearranging"], 
      "paclet:PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions#237748664", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TechNoteJumpBox",ExpressionUUID->"6c0d23ba-fcc7-431e-a58a-\
400f82b219ed"],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["PeterBurbery`BasicHypergeometricFunctions`"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "33d3b121-2af1-420b-8d3c-d9ff2a4461b4"],
 " context provide support for placing the q in front."
}], "TechNoteText",
 CellID->34242218,ExpressionUUID->"da171d77-9ecf-45b9-aa05-d6d9041a939a"],

Cell["This loads the package:", "TechNoteMathCaption",
 CellID->513850824,ExpressionUUID->"7bada169-7c3d-4776-b7f7-9de2435b9070"],

Cell[BoxData[
 RowBox[{"<<", "PeterBurbery`BasicHypergeometricFunctions`"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->542855510,ExpressionUUID->"0dee9fdd-35d3-4720-adb9-0ac50b09f781"],

Cell[CellGroupData[{

Cell["Put Q in the front", "TechNoteSection",
 CellID->2591,ExpressionUUID->"e289c6af-e7f4-4b1c-818e-9eda6dd9cb82"],

Cell["\<\
The built-in function PositionQInFrontOfList puts q in front of a list. The \
function works by using UnsortedComplement.\
\>", "TechNoteText",
 CellID->590619292,ExpressionUUID->"b612293d-b26c-4a4f-9c16-0ee176d43931"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositionQInFrontOfList", "[", 
  RowBox[{"{", 
   RowBox[{"b", ",", "c", ",", "d", ",", "q", ",", "f", ",", "q"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->219423307,ExpressionUUID->"c005b7de-a8c7-45df-9f11-f64113601e19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"q", ",", "q", ",", "b", ",", "c", ",", "d", ",", "f"}], 
  "}"}]], "Output",
 CellLabel->"Out[10]=",
 CellID->272831206,ExpressionUUID->"9e37fe5e-f82a-4f84-a340-a0975f379d0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rearranging", "TechNoteSection",
 CellID->237748664,ExpressionUUID->"00036f6a-63fd-4f4f-a2de-66a749e3d47c"],

Cell["This is the expression tree of a a b s a s q s d \
s\[NonBreakingSpace]d:", "TechNoteMathCaption",
 CellID->30906755,ExpressionUUID->"e250cd9f-9b0e-4e7b-8c8b-dd8939ecf38b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleInput", "=", 
  RowBox[{
  "a", " ", "b", " ", "s", " ", "a", " ", "s", " ", "q", " ", "s", " ", "d", 
   " ", "s", " ", "d"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->501709717,ExpressionUUID->"1542516c-d21f-43bc-a96f-434c0b7c4782"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], " ", "b", " ", 
  SuperscriptBox["d", "2"], " ", "q", " ", 
  SuperscriptBox["s", "4"]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->187249567,ExpressionUUID->"488c71cf-7b69-4b59-85bc-82928f353118"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpressionTree", "[", "exampleInput", "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->45907700,ExpressionUUID->"afa7c4e4-7e9c-42d8-8885-a887ef7faee4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[Times, {
       Tree[Power, {
         Tree[$CellContext`a, None], 
         Tree[2, None]}], 
       Tree[$CellContext`b, None], 
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}], 
       Tree[$CellContext`q, None], 
       Tree[Power, {
         Tree[$CellContext`s, None], 
         Tree[4, None]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         0.3496029493900505, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         1.0488088481701514`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         1.7480147469502525`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         2.4472206457303534`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         3.1464265445104544`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3496029493900505, 0.7574021974529568}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3496029493900505, 0.7574021974529568}, {0.699205898780101,
          0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
         1.398411797560202, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
         2.097617696340303, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
         2.796823595120404, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
         3.496029493900505, 0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7480147469502525, 1.5148043949059136}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.3496029493900505, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["a",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.699205898780101, 0.}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.0488088481701514, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7480147469502525, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.398411797560202, 0.}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.097617696340303, 0.}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.4472206457303534, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.1464265445104544, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox["s",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.796823595120404, 0.}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox["4",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.496029493900505, 0.}],
        "DynamicName",
        BoxID -> "VertexID$12"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[4]=",
 CellID->895181536,ExpressionUUID->"8107efe8-ed22-4c56-87de-5eaa90656bb7"]
}, Open  ]],

Cell["\<\
We want to put q in the front. We need to verify q is in the expression first:\
\>", "TechNoteMathCaption",
 CellID->340949841,ExpressionUUID->"f8838af4-b20d-4ec5-a66f-f7d8b078f083"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"exampleInput", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->152984908,ExpressionUUID->"3ffb77c4-590c-4ead-a50c-cb1b18c855f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "4", "}"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->130135511,ExpressionUUID->"c93a09c0-c592-4a37-a1c9-a736cb2815d0"]
}, Open  ]],

Cell["An expression without q would have a different output.", \
"TechNoteMathCaption",
 CellID->579788294,ExpressionUUID->"2e56b696-7921-4dd2-bf7d-0c15be4b3e70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expressionWithNoQ", "=", 
  RowBox[{"b", " ", "d"}]}]], "Input",
 CellLabel->"In[6]:=",
 CellID->8585758,ExpressionUUID->"9e3189cf-1dac-4683-b068-aa39e4a347fe"],

Cell[BoxData[
 RowBox[{"b", " ", "d"}]], "Output",
 CellLabel->"Out[6]=",
 CellID->15928604,ExpressionUUID->"4705ed4c-77f3-4d52-93c1-3e4e4dd55fb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"expressionWithNoQ", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1001352657,ExpressionUUID->"8d2cec3f-4b54-43fc-ae0e-c64bd1ae354a"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->555168197,ExpressionUUID->"ed66c2d4-31f0-4bb5-ba5d-b990fa15b75b"]
}, Open  ]],

Cell["The q could be raised to a power:", "TechNoteMathCaption",
 CellID->210058381,ExpressionUUID->"8565d89a-3dc1-40ac-acd5-d801d217a040"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qraisedtothepower", "=", 
  RowBox[{"b", " ", "d", " ", 
   SuperscriptBox["q", "2"], " ", "d", " ", "b"}]}]], "Input",
 CellLabel->"In[8]:=",
 CellID->3618976,ExpressionUUID->"2de0fa28-d123-428b-b5e2-98d1c8625d06"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["b", "2"], " ", 
  SuperscriptBox["d", "2"], " ", 
  SuperscriptBox["q", "2"]}]], "Output",
 CellLabel->"Out[8]=",
 CellID->60384182,ExpressionUUID->"94746ca0-d6f1-48e7-8278-248ff52f0647"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"qraisedtothepower", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->158897045,ExpressionUUID->"660b225c-1422-4319-8e29-d30e3deb8688"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"3", ",", "1"}], "}"}], "}"}]], "Output",
 CellLabel->"Out[9]=",
 CellID->90949083,ExpressionUUID->"601fecce-349c-4039-8f5b-2f1b74399bd6"]
}, Open  ]],

Cell["\<\
Let's look at these three examples from the perspective of Cases:\
\>", "TechNoteMathCaption",
 CellID->45747336,ExpressionUUID->"2af08122-2b75-4880-a344-84d2102e1006"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"exampleInput", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->106947108,ExpressionUUID->"66b70e28-e77a-447e-a23b-1b9e9d0d56eb"],

Cell[BoxData[
 RowBox[{"{", "q", "}"}]], "Output",
 CellLabel->"Out[10]=",
 CellID->688234202,ExpressionUUID->"4c82f576-35b3-4c89-9dda-a2b8fadfdd98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"expressionWithNoQ", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->289386853,ExpressionUUID->"4468754d-b339-4a2a-9d0d-4595095e64b6"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[11]=",
 CellID->383066580,ExpressionUUID->"48a35c84-046a-4567-9766-96920108ee49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"qraisedtothepower", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->616336306,ExpressionUUID->"d79fbaf0-27e6-49a8-aa49-3068b2ea26df"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[12]=",
 CellID->287890430,ExpressionUUID->"f29a22a9-3747-4e8f-b627-7b11e218ce82"]
}, Open  ]],

Cell["\<\
The last example should have something, but q is on a higher level. Let's \
look at the expression tree.\
\>", "TechNoteMathCaption",
 CellID->657986846,ExpressionUUID->"58782be3-aee4-4688-9aa0-f67ced329f3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->3639185,ExpressionUUID->"53397038-fd0e-4d9a-9edd-b596769b620d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[Times, {
       Tree[Power, {
         Tree[$CellContext`b, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[$CellContext`q, None], 
         Tree[2, None]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
         0.34874291623145787`, 0.7555526554078994}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
         1.7437145811572892`, 0.7555526554078994}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
         3.1386862460831204`, 0.7555526554078994}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
         0.6974858324629157, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
         1.3949716649258315`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
         2.092457497388747, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
         2.789943329851663, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
         3.4874291623145783`, 0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.6974858324629157, 0.}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.3949716649258315, 0.}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.092457497388747, 0.}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.789943329851663, 0.}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.4874291623145783, 0.}],
        "DynamicName",
        BoxID -> "VertexID$10"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[13]=",
 CellID->781595662,ExpressionUUID->"84c8a925-7c7f-43d1-9477-0b21d4c74fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->106876852,ExpressionUUID->"b8a9ab4a-ca17-489b-a112-77b3eb665233"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`b, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`q, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[14]=",
 CellID->78099367,ExpressionUUID->"c1912582-c320-4a31-a835-d77a09a1b203"]
}, Open  ]],

Cell["q is on the second level:", "TechNoteMathCaption",
 CellID->201555096,ExpressionUUID->"ea217606-4fc7-4ae5-b860-1a9d9c0c9bb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", "2"}], 
  "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->76274047,ExpressionUUID->"7365682a-9352-4f44-8e92-8fa88547b46e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`b, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`q, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[15]=",
 CellID->268218734,ExpressionUUID->"d0cf1f2d-53e1-484a-9edc-173b312ec335"]
}, Open  ]],

Cell["\<\
We might want just level 2 and not the subtrees. We can specify this:\
\>", "TechNoteMathCaption",
 CellID->116384939,ExpressionUUID->"193fd985-a1c8-4cb4-8049-61c540b24416"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->11721902,ExpressionUUID->"1650bdc2-d3dd-44d2-935a-cb0166afa61e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[16]=",
 CellID->122696485,ExpressionUUID->"f3d6bc50-6c9c-40f3-bf12-4a151619f9cb"]
}, Open  ]],

Cell["q is in the leaves:", "TechNoteMathCaption",
 CellID->7379660,ExpressionUUID->"86b94b57-eaac-4303-81af-a7050b4a3f0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLeaves", "[", 
  RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], "]"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->57152497,ExpressionUUID->"fc483901-d97e-4372-9f6a-9813c3022a4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[17]=",
 CellID->99386605,ExpressionUUID->"c5e71275-b015-4f09-85eb-6a48969472f9"]
}, Open  ]],

Cell["We can also use -1 level specification:", "TechNoteMathCaption",
 CellID->600024437,ExpressionUUID->"124a6d2d-ea42-451a-94ee-c679eb1ebe95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->356384648,ExpressionUUID->"85f25a87-aaee-49ac-aec1-40dc56984d69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[18]=",
 CellID->51287920,ExpressionUUID->"44758134-dc52-4f6e-9723-314aab58a870"]
}, Open  ]],

Cell["Another way to get q is with TreeLeafQ:", "TechNoteMathCaption",
 CellID->32533157,ExpressionUUID->"ef013166-4ead-44c5-b462-ff65ddc99d01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
   "TreeLeafQ"}], "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->221488453,ExpressionUUID->"0416be1e-c919-43ec-aa1e-85469159a7b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[19]=",
 CellID->44145120,ExpressionUUID->"35e9dc97-64da-40ab-bf0d-b1170d95795f"]
}, Open  ]],

Cell["We can get the data with TreeData:", "TechNoteMathCaption",
 CellID->441304007,ExpressionUUID->"a2133ad2-2225-44aa-9f09-fb71192a71ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeData", "/@", 
  RowBox[{"TreeSelect", "[", 
   RowBox[{
    RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
    "TreeLeafQ"}], "]"}]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->784023909,ExpressionUUID->"a58c9ff8-287c-44c1-b668-5330c449eee6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "2", ",", "d", ",", "2", ",", "q", ",", "2"}], 
  "}"}]], "Output",
 CellLabel->"Out[20]=",
 CellID->565604538,ExpressionUUID->"81941b3a-1333-4d5a-a4ac-58c4a01cf9cd"]
}, Open  ]],

Cell["\<\
If q is in the expression, then q will be in this list. Otherwise it will not \
be.\
\>", "TechNoteMathCaption",
 CellID->48363548,ExpressionUUID->"5149010d-c608-4898-8767-cfd634db1877"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeData", "/@", 
  RowBox[{"TreeSelect", "[", 
   RowBox[{
    RowBox[{"ExpressionTree", "[", "expressionWithNoQ", "]"}], ",", 
    "TreeLeafQ"}], "]"}]}]], "Input",
 CellLabel->"In[21]:=",
 CellID->265849720,ExpressionUUID->"0994fd9e-af71-478d-908d-4500620df444"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "d"}], "}"}]], "Output",
 CellLabel->"Out[21]=",
 CellID->36210837,ExpressionUUID->"affd3fdf-d9ac-416c-862d-47ff1e8b97d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"TreeData", "/@", 
    RowBox[{"TreeSelect", "[", 
     RowBox[{
      RowBox[{"ExpressionTree", "[", "expressionWithNoQ", "]"}], ",", 
      "TreeLeafQ"}], "]"}]}], ",", "q"}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->10018807,ExpressionUUID->"fd7a6e53-b654-4cbc-b5ee-9f48f9ec5f56"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[22]=",
 CellID->90942833,ExpressionUUID->"e76d88ee-cf9e-4426-9e7b-7134e41378e3"]
}, Open  ]],

Cell["Make a function to test if q is in an expression:", \
"TechNoteMathCaption",
 CellID->222360495,ExpressionUUID->"7d92d8c6-2ea7-4ba0-8219-43584f030b73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myQWithinExpressionQ", "[", "input_", "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"TreeData", "/@", 
     RowBox[{"TreeSelect", "[", 
      RowBox[{
       RowBox[{"ExpressionTree", "[", "input", "]"}], ",", "TreeLeafQ"}], 
      "]"}]}], ",", "q"}], "]"}]}]], "Input",
 CellLabel->"In[23]:=",
 CellID->876159263,ExpressionUUID->"82beeeb9-2a8c-4463-af42-1005bc5440b5"],

Cell["Test the function:", "TechNoteMathCaption",
 CellID->140693972,ExpressionUUID->"bb3a1f82-6483-45e6-bf09-9be803a1b346"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myQWithinExpressionQ", "[", "expressionWithNoQ", "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->676058770,ExpressionUUID->"d8f63307-e67d-4fc8-a97d-402c45b59692"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[24]=",
 CellID->173651887,ExpressionUUID->"eea12d2b-f043-46fd-85dd-2cbf4f625467"]
}, Open  ]],

Cell["\<\
Test all the examples with the SameTest QInExpressionQ[#1] == #2.\
\>", "TechNoteMathCaption",
 CellID->362701572,ExpressionUUID->"9acb1795-a990-4a13-8873-c90e28be41a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestReport", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TestCreate", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        RowBox[{"TestID", "->", "Automatic"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "expressionWithNoQ", ",", "qraisedtothepower", ",", "exampleInput"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True", ",", "True"}], "}"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"SameTest", "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"myQWithinExpressionQ", "[", "#1", "]"}], "==", "#2"}], "&"}], 
     ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->569912814,ExpressionUUID->"19d0214e-62ae-45d5-aa1b-60302fc7b9e9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0006032`3.4538550759740443", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> Automatic, "Aborted" -> False, 
    "TestResults" -> <|
     4703637773967450255 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8949755148313847`*^9, 
         "SameTest" -> ($CellContext`myQWithinExpressionQ[#] == #2& ), 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "fb859b59-9cf7-4585-b8a0-262124d60501", "TestID" -> 
         "8597f48c-5968-4d71-b784-bd13651c719b", "TestFileName" -> "", 
         "EvaluationID" -> "59248cc9-f369-43da-978f-beb1c27e49c8", "Input" -> 
         HoldForm[$CellContext`b $CellContext`d], "ExpectedOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[$CellContext`b $CellContext`d], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 2152, "Outcome" -> "Success"|>], 7194249459347865311 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8949755148313847`*^9, 
         "SameTest" -> ($CellContext`myQWithinExpressionQ[#] == #2& ), 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "f8443332-ea6d-4078-8191-b0afea29f6b9", "TestID" -> 
         "469b6c47-bc5d-473d-9e92-f64edbf645b5", "TestFileName" -> "", 
         "EvaluationID" -> "3fdb3916-d1ad-4264-83ed-b017e565b2c7", "Input" -> 
         HoldForm[($CellContext`b^2 $CellContext`d^2) $CellContext`q^2], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[($CellContext`b^2 $CellContext`d^2) $CellContext`q^2], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0006032`3.9309763306937073, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         2544, "Outcome" -> "Success"|>], 503140813721197662 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8949755148325334`*^9, 
         "SameTest" -> ($CellContext`myQWithinExpressionQ[#] == #2& ), 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "d4ea5852-8e96-4918-8628-c69108596c20", "TestID" -> 
         "dd16a253-8190-453d-8b82-04ad766f3607", "TestFileName" -> "", 
         "EvaluationID" -> "824896fd-2d61-4813-a091-4f8ec63a2cd0", "Input" -> 
         HoldForm[((($CellContext`a^2 $CellContext`b) $CellContext`d^2) \
$CellContext`q) $CellContext`s^4], "ExpectedOutput" -> HoldForm[True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[((($CellContext`a^2 $CellContext`b) $CellContext`d^2) \
$CellContext`q) $CellContext`s^4], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0``7.1505149978319915, "CPUTimeUsed" -> 0., "MemoryUsed" -> 2184, 
         "Outcome" -> "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {4703637773967450255, 7194249459347865311, 
     503140813721197662}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[25]=",
 CellID->466247083,ExpressionUUID->"a2d3cb23-f362-4b5c-a1bc-da580aaa66bf"]
}, Open  ]],

Cell["There is now the function QWithinExpressionQ built in.", \
"TechNoteMathCaption",
 CellID->860484422,ExpressionUUID->"97132d86-e5d0-45e3-802f-58f9f0f39315"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QWithinExpressionQ", "/@", 
  RowBox[{"{", 
   RowBox[{
   "expressionWithNoQ", ",", "qraisedtothepower", ",", "exampleInput"}], 
   "}"}]}]], "Input",
 CellLabel->"In[27]:=",
 CellID->200160651,ExpressionUUID->"add0c371-31b9-4367-bc72-eb4c040e00e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True", ",", "True"}], "}"}]], "Output",
 CellLabel->"Out[27]=",
 CellID->5616810,ExpressionUUID->"167bdd41-fd93-47ac-ab49-db1c26338de0"]
}, Open  ]],

Cell["\<\
Let's look at two examples and try to find some similarities:\
\>", "TechNoteMathCaption",
 CellID->38347245,ExpressionUUID->"9c17d504-b7ec-49f5-aa76-01b975d8b4ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ExpressionTree", "[", "exampleInput", "]"}], ",", 
    RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}]}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->26282727,ExpressionUUID->"724adc3c-0673-4c79-83a0-9b35580656c0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["Trees",
       DynamicModuleBox[{Typeset`tree = HoldComplete[
         Tree[Times, {
           Tree[Power, {
             Tree[$CellContext`a, None], 
             Tree[2, None]}], 
           Tree[$CellContext`b, None], 
           Tree[Power, {
             Tree[$CellContext`d, None], 
             Tree[2, None]}], 
           Tree[$CellContext`q, None], 
           Tree[Power, {
             Tree[$CellContext`s, None], 
             Tree[4, None]}]}]]}, 
        NamespaceBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             0.3496029493900505, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             1.0488088481701514`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             1.7480147469502525`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             2.4472206457303534`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             3.1464265445104544`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.3496029493900505, 0.7574021974529568}, {0., 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.3496029493900505, 0.7574021974529568}, {
             0.699205898780101, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
             1.398411797560202, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
             2.097617696340303, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
             2.796823595120404, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
             3.496029493900505, 0.}}]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           TagBox[InsetBox[
             FrameBox["Times",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7480147469502525, 1.5148043949059136}],
            "DynamicName",
            BoxID -> "VertexID$1"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {0.3496029493900505, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$2"], 
           TagBox[InsetBox[
             FrameBox["a",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0., 0.}],
            "DynamicName",
            BoxID -> "VertexID$3"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0.699205898780101, 0.}],
            "DynamicName",
            BoxID -> "VertexID$4"], 
           TagBox[InsetBox[
             FrameBox["b",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {1.0488088481701514, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$5"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7480147469502525, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$6"], 
           TagBox[InsetBox[
             FrameBox["d",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {1.398411797560202, 0.}],
            "DynamicName",
            BoxID -> "VertexID$7"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.097617696340303, 0.}],
            "DynamicName",
            BoxID -> "VertexID$8"], 
           TagBox[InsetBox[
             FrameBox["q",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.4472206457303534, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$9"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {3.1464265445104544, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$10"], 
           TagBox[InsetBox[
             FrameBox["s",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.796823595120404, 0.}],
            "DynamicName",
            BoxID -> "VertexID$11"], 
           TagBox[InsetBox[
             FrameBox["4",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {3.496029493900505, 0.}],
            "DynamicName",
            BoxID -> "VertexID$12"]}}]]],
      AlignmentPoint->Center,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ContentSelectable->Automatic,
      DefaultBaseStyle->"TreeGraphics",
      Epilog->{},
      FormatType->StandardForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->None,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Automatic,
      LabelStyle->{},
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}], 
     GraphicsBox[
      NamespaceBox["Trees",
       DynamicModuleBox[{Typeset`tree = HoldComplete[
         Tree[Times, {
           Tree[Power, {
             Tree[$CellContext`b, None], 
             Tree[2, None]}], 
           Tree[Power, {
             Tree[$CellContext`d, None], 
             Tree[2, None]}], 
           Tree[Power, {
             Tree[$CellContext`q, None], 
             Tree[2, None]}]}]]}, 
        NamespaceBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
             0.34874291623145787`, 0.7555526554078994}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
             1.7437145811572892`, 0.7555526554078994}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
             3.1386862460831204`, 0.7555526554078994}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
             0.6974858324629157, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
             1.3949716649258315`, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
             2.092457497388747, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
             2.789943329851663, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
             3.4874291623145783`, 0.}}]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           TagBox[InsetBox[
             FrameBox["Times",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
            "DynamicName",
            BoxID -> "VertexID$1"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
            "DynamicName",
            BoxID -> "VertexID$2"], 
           TagBox[InsetBox[
             FrameBox["b",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0., 0.}],
            "DynamicName",
            BoxID -> "VertexID$3"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0.6974858324629157, 0.}],
            "DynamicName",
            BoxID -> "VertexID$4"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
            "DynamicName",
            BoxID -> "VertexID$5"], 
           TagBox[InsetBox[
             FrameBox["d",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {1.3949716649258315, 0.}],
            "DynamicName",
            BoxID -> "VertexID$6"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.092457497388747, 0.}],
            "DynamicName",
            BoxID -> "VertexID$7"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
            "DynamicName",
            BoxID -> "VertexID$8"], 
           TagBox[InsetBox[
             FrameBox["q",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.789943329851663, 0.}],
            "DynamicName",
            BoxID -> "VertexID$9"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {3.4874291623145783, 0.}],
            "DynamicName",
            BoxID -> "VertexID$10"]}}]]],
      AlignmentPoint->Center,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ContentSelectable->Automatic,
      DefaultBaseStyle->"TreeGraphics",
      Epilog->{},
      FormatType->StandardForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->None,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Automatic,
      LabelStyle->{},
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[31]=",
 CellID->434215884,ExpressionUUID->"cfcbbb5c-53db-400b-b113-44c26b8cecc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "exampleInput", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TreeData", "[", "#", "]"}], "==", "Times"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"TreeData", "/@", 
        RowBox[{"TreeLeaves", "[", "#", "]"}]}], ",", "q"}], "]"}]}], "&"}]}],
   "]"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->466437509,ExpressionUUID->"b4839ee4-2c41-4b36-94a0-7b8578dcef1d"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   NamespaceBox["Trees",
    DynamicModuleBox[{Typeset`tree = HoldComplete[
      Tree[Times, {
        Tree[Power, {
          Tree[$CellContext`a, None], 
          Tree[2, None]}], 
        Tree[$CellContext`b, None], 
        Tree[Power, {
          Tree[$CellContext`d, None], 
          Tree[2, None]}], 
        Tree[$CellContext`q, None], 
        Tree[Power, {
          Tree[$CellContext`s, None], 
          Tree[4, None]}]}]]}, 
     NamespaceBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          0.3496029493900505, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          1.0488088481701514`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          1.7480147469502525`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          2.4472206457303534`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          3.1464265445104544`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{0.3496029493900505, 0.7574021974529568}, {0., 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{0.3496029493900505, 0.7574021974529568}, {
          0.699205898780101, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
          1.398411797560202, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
          2.097617696340303, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
          2.796823595120404, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
          3.496029493900505, 0.}}]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[InsetBox[
          FrameBox["Times",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {1.7480147469502525, 1.5148043949059136}],
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[InsetBox[
          FrameBox["Power",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {0.3496029493900505, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[InsetBox[
          FrameBox["a",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {0., 0.}],
         "DynamicName",
         BoxID -> "VertexID$3"], 
        TagBox[InsetBox[
          FrameBox["2",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {0.699205898780101, 0.}],
         "DynamicName",
         BoxID -> "VertexID$4"], 
        TagBox[InsetBox[
          FrameBox["b",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {1.0488088481701514, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$5"], 
        TagBox[InsetBox[
          FrameBox["Power",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {1.7480147469502525, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$6"], 
        TagBox[InsetBox[
          FrameBox["d",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {1.398411797560202, 0.}],
         "DynamicName",
         BoxID -> "VertexID$7"], 
        TagBox[InsetBox[
          FrameBox["2",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {2.097617696340303, 0.}],
         "DynamicName",
         BoxID -> "VertexID$8"], 
        TagBox[InsetBox[
          FrameBox["q",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {2.4472206457303534, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$9"], 
        TagBox[InsetBox[
          FrameBox["Power",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {3.1464265445104544, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$10"], 
        TagBox[InsetBox[
          FrameBox["s",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {2.796823595120404, 0.}],
         "DynamicName",
         BoxID -> "VertexID$11"], 
        TagBox[InsetBox[
          FrameBox["4",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {3.496029493900505, 0.}],
         "DynamicName",
         BoxID -> "VertexID$12"]}}]]],
   AlignmentPoint->Center,
   Axes->False,
   AxesLabel->None,
   AxesOrigin->Automatic,
   AxesStyle->{},
   Background->None,
   BaseStyle->{},
   BaselinePosition->Automatic,
   ContentSelectable->Automatic,
   DefaultBaseStyle->"TreeGraphics",
   Epilog->{},
   FormatType->StandardForm,
   Frame->False,
   FrameLabel->None,
   FrameStyle->{},
   FrameTicks->None,
   FrameTicksStyle->{},
   GridLines->None,
   GridLinesStyle->{},
   ImageMargins->0.,
   ImagePadding->All,
   ImageSize->Automatic,
   LabelStyle->{},
   PlotLabel->None,
   PlotRange->All,
   PlotRangeClipping->False,
   PlotRangePadding->Automatic,
   PlotRegion->Automatic,
   Prolog->{},
   RotateLabel->True,
   Ticks->Automatic,
   TicksStyle->{}], "}"}]], "Output",
 CellLabel->"Out[34]=",
 CellID->581867833,ExpressionUUID->"5c162d0f-d327-443a-a8bc-5f4ac9e44d7f"]
}, Open  ]],

Cell["Let's add Times but without a q:", "TechNoteMathCaption",
 CellID->46456499,ExpressionUUID->"c3f2f89c-9482-4f53-98b1-6c9fc2a23c33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"complicatedexpression", "=", 
  FractionBox["exampleInput", 
   RowBox[{"expressionWithNoQ", "+", "qraisedtothepower"}]]}]], "Input",
 CellLabel->"In[39]:=",
 CellID->30529297,ExpressionUUID->"546a60cf-d081-49f5-aa14-fa702e72a761"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", "b", " ", 
   SuperscriptBox["d", "2"], " ", "q", " ", 
   SuperscriptBox["s", "4"]}], 
  RowBox[{
   RowBox[{"b", " ", "d"}], "+", 
   RowBox[{
    SuperscriptBox["b", "2"], " ", 
    SuperscriptBox["d", "2"], " ", 
    SuperscriptBox["q", "2"]}]}]]], "Output",
 CellLabel->"Out[39]=",
 CellID->315960114,ExpressionUUID->"9103b4bb-7813-45f2-a6d7-9a32cded2b51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpressionTree", "[", "complicatedexpression", "]"}]], "Input",
 CellLabel->"In[40]:=",
 CellID->562027770,ExpressionUUID->"ab190343-3149-4f6a-8623-4ccb8dedd90a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[Times, {
       Tree[Power, {
         Tree[$CellContext`a, None], 
         Tree[2, None]}], 
       Tree[$CellContext`b, None], 
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}], 
       Tree[$CellContext`q, None], 
       Tree[Power, {
         Tree[Plus, {
           Tree[Times, {
             Tree[$CellContext`b, None], 
             Tree[$CellContext`d, None]}], 
           Tree[Times, {
             Tree[Power, {
               Tree[$CellContext`b, None], 
               Tree[2, None]}], 
             Tree[Power, {
               Tree[$CellContext`d, None], 
               Tree[2, None]}], 
             Tree[Power, {
               Tree[$CellContext`q, None], 
               Tree[2, None]}]}]}], 
         Tree[-1, None]}], 
       Tree[Power, {
         Tree[$CellContext`s, None], 
         Tree[4, None]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021301775466617948`], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         0.3124886978064666, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         0.9374660934193997, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         1.5624434890323329`, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {2.187420884645266,
          2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         2.8123982802581993`, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {4.062353071484066,
          2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3124886978064666, 2.5844456921671464`}, {0., 
         1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3124886978064666, 2.5844456921671464`}, {
         0.6249773956129332, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
         1.2499547912258664`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
         1.8749321868387994`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
         2.499909582451733, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
         3.1248869780646658`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.499909582451733, 1.9383342691253593`}, {
         1.4061991401290996`, 1.2922228460835732`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.499909582451733, 1.9383342691253593`}, {
         3.5936200247743657`, 1.2922228460835732`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
         1.093710442322633, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
         1.7186878379355661`, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
         2.3436652335484993`, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
         3.5936200247743657`, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
         4.843574816000232, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
         2.031176535742033, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
         2.656153931354966, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
         3.281131326967899, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
         3.906108722580832, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.843574816000232, 0.6461114230417864}, {4.531086118193765, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.843574816000232, 0.6461114230417864}, {5.156063513806698, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.062353071484066, 2.5844456921671464`}, {
         3.7498643736775987`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.062353071484066, 2.5844456921671464`}, {4.374841769290532,
          1.9383342691253593`}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.187420884645266, 3.2305571152089323}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.3124886978064666, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["a",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.6249773956129332, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.9374660934193997, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.5624434890323329, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.2499547912258664, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.8749321868387994, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.187420884645266, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.8123982802581993, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox["Plus",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.499909582451733, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.4061991401290996, 1.2922228460835732}],
        "DynamicName",
        BoxID -> "VertexID$12"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.093710442322633, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$13"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.7186878379355661, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$14"], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.5936200247743657, 1.2922228460835732}],
        "DynamicName",
        BoxID -> "VertexID$15"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.3436652335484993, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$16"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.031176535742033, 0.}],
        "DynamicName",
        BoxID -> "VertexID$17"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.656153931354966, 0.}],
        "DynamicName",
        BoxID -> "VertexID$18"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.5936200247743657, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$19"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.281131326967899, 0.}],
        "DynamicName",
        BoxID -> "VertexID$20"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.906108722580832, 0.}],
        "DynamicName",
        BoxID -> "VertexID$21"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.843574816000232, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$22"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.531086118193765, 0.}],
        "DynamicName",
        BoxID -> "VertexID$23"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.156063513806698, 0.}],
        "DynamicName",
        BoxID -> "VertexID$24"], 
       TagBox[InsetBox[
         FrameBox[
          RowBox[{"-", "1"}],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.1248869780646658, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$25"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.062353071484066, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$26"], 
       TagBox[InsetBox[
         FrameBox["s",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.7498643736775987, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$27"], 
       TagBox[InsetBox[
         FrameBox["4",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.374841769290532, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$28"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[40]=",
 CellID->601819694,ExpressionUUID->"afcc092f-35b7-4fcc-b26b-92d5ac91f7b1"]
}, Open  ]],

Cell["Which Times contain a q?", "TechNoteMathCaption",
 CellID->194616050,ExpressionUUID->"77777825-f8e5-4ced-be9c-4cc1309fbd28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "complicatedexpression", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TreeData", "[", "#", "]"}], "==", "Times"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"TreeData", "/@", 
        RowBox[{"TreeLeaves", "[", "#", "]"}]}], ",", "q"}], "]"}]}], "&"}], 
   ",", "Infinity"}], "]"}]], "Input",
 CellLabel->"In[43]:=",
 CellID->233755330,ExpressionUUID->"72c77568-5553-4447-b7b6-5d1fe557a34e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`b, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`q, None], 
           Tree[2, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           0.34874291623145787`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           1.7437145811572892`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           3.1386862460831204`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
           0.6974858324629157, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           1.3949716649258315`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           2.092457497388747, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           2.789943329851663, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           3.4874291623145783`, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6974858324629157, 0.}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.3949716649258315, 0.}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.092457497388747, 0.}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.789943329851663, 0.}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.4874291623145783, 0.}],
          "DynamicName",
          BoxID -> "VertexID$10"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`a, None], 
           Tree[2, None]}], 
         Tree[$CellContext`b, None], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[$CellContext`q, None], 
         Tree[Power, {
           Tree[Plus, {
             Tree[Times, {
               Tree[$CellContext`b, None], 
               Tree[$CellContext`d, None]}], 
             Tree[Times, {
               Tree[Power, {
                 Tree[$CellContext`b, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`d, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`q, None], 
                 Tree[2, None]}]}]}], 
           Tree[-1, None]}], 
         Tree[Power, {
           Tree[$CellContext`s, None], 
           Tree[4, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021301775466617948`], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.3124886978064666, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.9374660934193997, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           1.5624434890323329`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.187420884645266, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.8123982802581993`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           4.062353071484066, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {0., 
           1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {
           0.6249773956129332, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.2499547912258664`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.8749321868387994`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           2.499909582451733, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           3.1248869780646658`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           1.4061991401290996`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           3.5936200247743657`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.093710442322633, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.7186878379355661`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           2.3436652335484993`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           3.5936200247743657`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           4.843574816000232, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.031176535742033, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.656153931354966, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.281131326967899, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.906108722580832, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           4.531086118193765, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           5.156063513806698, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           3.7498643736775987`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           4.374841769290532, 1.9383342691253593`}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.187420884645266, 3.2305571152089323}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.3124886978064666, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["a",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6249773956129332, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.9374660934193997, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.5624434890323329, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.2499547912258664, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.8749321868387994, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.187420884645266, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.8123982802581993, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["Plus",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.499909582451733, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.4061991401290996, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.093710442322633, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$13"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.7186878379355661, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$14"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$15"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.3436652335484993, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$16"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.031176535742033, 0.}],
          "DynamicName",
          BoxID -> "VertexID$17"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.656153931354966, 0.}],
          "DynamicName",
          BoxID -> "VertexID$18"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$19"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.281131326967899, 0.}],
          "DynamicName",
          BoxID -> "VertexID$20"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.906108722580832, 0.}],
          "DynamicName",
          BoxID -> "VertexID$21"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.843574816000232, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$22"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.531086118193765, 0.}],
          "DynamicName",
          BoxID -> "VertexID$23"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {5.156063513806698, 0.}],
          "DynamicName",
          BoxID -> "VertexID$24"], 
         TagBox[InsetBox[
           FrameBox[
            RowBox[{"-", "1"}],
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.1248869780646658, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$25"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.062353071484066, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$26"], 
         TagBox[InsetBox[
           FrameBox["s",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.7498643736775987, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$27"], 
         TagBox[InsetBox[
           FrameBox["4",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.374841769290532, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$28"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->{454.19999999999993`, Automatic},
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[43]=",
 CellID->147590346,ExpressionUUID->"dce34231-e31a-474d-8db2-47053a02cbd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "complicatedexpression", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"TreeData", "[", "#", "]"}], "==", "Times"}], "&"}], ",", 
   "Infinity"}], "]"}]], "Input",
 CellLabel->"In[44]:=",
 CellID->45569491,ExpressionUUID->"c67180dc-cad8-49b0-943d-64bf7b19934b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[$CellContext`b, None], 
         Tree[$CellContext`d, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`b, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`q, None], 
           Tree[2, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           0.34874291623145787`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           1.7437145811572892`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           3.1386862460831204`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
           0.6974858324629157, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           1.3949716649258315`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           2.092457497388747, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           2.789943329851663, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           3.4874291623145783`, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6974858324629157, 0.}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.3949716649258315, 0.}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.092457497388747, 0.}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.789943329851663, 0.}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.4874291623145783, 0.}],
          "DynamicName",
          BoxID -> "VertexID$10"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->{301.8, Automatic},
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`a, None], 
           Tree[2, None]}], 
         Tree[$CellContext`b, None], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[$CellContext`q, None], 
         Tree[Power, {
           Tree[Plus, {
             Tree[Times, {
               Tree[$CellContext`b, None], 
               Tree[$CellContext`d, None]}], 
             Tree[Times, {
               Tree[Power, {
                 Tree[$CellContext`b, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`d, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`q, None], 
                 Tree[2, None]}]}]}], 
           Tree[-1, None]}], 
         Tree[Power, {
           Tree[$CellContext`s, None], 
           Tree[4, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021301775466617948`], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.3124886978064666, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.9374660934193997, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           1.5624434890323329`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.187420884645266, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.8123982802581993`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           4.062353071484066, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {0., 
           1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {
           0.6249773956129332, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.2499547912258664`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.8749321868387994`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           2.499909582451733, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           3.1248869780646658`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           1.4061991401290996`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           3.5936200247743657`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.093710442322633, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.7186878379355661`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           2.3436652335484993`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           3.5936200247743657`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           4.843574816000232, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.031176535742033, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.656153931354966, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.281131326967899, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.906108722580832, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           4.531086118193765, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           5.156063513806698, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           3.7498643736775987`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           4.374841769290532, 1.9383342691253593`}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.187420884645266, 3.2305571152089323}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.3124886978064666, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["a",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6249773956129332, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.9374660934193997, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.5624434890323329, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.2499547912258664, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.8749321868387994, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.187420884645266, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.8123982802581993, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["Plus",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.499909582451733, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.4061991401290996, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.093710442322633, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$13"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.7186878379355661, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$14"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$15"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.3436652335484993, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$16"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.031176535742033, 0.}],
          "DynamicName",
          BoxID -> "VertexID$17"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.656153931354966, 0.}],
          "DynamicName",
          BoxID -> "VertexID$18"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$19"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.281131326967899, 0.}],
          "DynamicName",
          BoxID -> "VertexID$20"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.906108722580832, 0.}],
          "DynamicName",
          BoxID -> "VertexID$21"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.843574816000232, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$22"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.531086118193765, 0.}],
          "DynamicName",
          BoxID -> "VertexID$23"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {5.156063513806698, 0.}],
          "DynamicName",
          BoxID -> "VertexID$24"], 
         TagBox[InsetBox[
           FrameBox[
            RowBox[{"-", "1"}],
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.1248869780646658, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$25"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.062353071484066, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$26"], 
         TagBox[InsetBox[
           FrameBox["s",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.7498643736775987, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$27"], 
         TagBox[InsetBox[
           FrameBox["4",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.374841769290532, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$28"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->{280.80000000000007`, Automatic},
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[44]=",
 CellID->86851793,ExpressionUUID->"43022bc4-fb05-4799-b6aa-38362aa929e6"]
}, Open  ]],

Cell["XXXX.", "TechNoteCaption",
 CellID->56681674,ExpressionUUID->"f5f60007-c978-4515-b0ad-835ba5ae7d46"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "TechNoteSection",
 CellID->194172257,ExpressionUUID->"19945e51-54d3-43c9-aa1b-f6fdb8d3c43e"],

Cell[CellGroupData[{

Cell["Example 1", "Subsection",
 CellID->268449717,ExpressionUUID->"1e56a077-1c45-4290-8be6-0d02c8772dcc"],

Cell["\<\
Consider the input q. q is already in front. We can use AtomQ to just return \
the output.\
\>", "TechNoteText",
 CellID->38548766,ExpressionUUID->"f43cd62e-9a36-420a-b91e-3d128127be16"],

Cell["This", "TechNoteMathCaption",
 CellID->869928153,ExpressionUUID->"bcaa542b-05a8-40ae-8474-eb2c14e74d8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RearrangeFunction", "[", 
   RowBox[{"i_", "?", "AtomQ"}], "]"}], ":=", "i"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->332914739,ExpressionUUID->"2839130b-501f-465e-b1d6-f14121ff0e17"],

Cell["It works with q:", "TechNoteMathCaption",
 CellID->76608498,ExpressionUUID->"28ce1dcc-0757-40de-b210-523e1bf7b01e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction", "[", "q", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->96817370,ExpressionUUID->"cd69e59c-e6ea-4b50-9ff6-c1a65c608a37"],

Cell[BoxData["q"], "Output",
 CellLabel->"Out[2]=",
 CellID->333277154,ExpressionUUID->"5fe6d5fd-930d-450e-9f7a-9e42e562f7e7"]
}, Open  ]],

Cell["It works with other symbols:", "TechNoteMathCaption",
 CellID->132842737,ExpressionUUID->"28fe1505-656f-4577-8353-f3aa193cb1a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction", "[", "r", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->384650234,ExpressionUUID->"662735f4-c64c-4559-a8a8-6e8d8f29167c"],

Cell[BoxData["r"], "Output",
 CellLabel->"Out[3]=",
 CellID->202833461,ExpressionUUID->"62918c2d-efef-4281-85cf-fc5d34de8b89"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 2", "Subsection",
 CellID->194967963,ExpressionUUID->"6983f950-66f2-4847-b830-1bf59eecd009"],

Cell[TextData[{
 "The next example is ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "43c0c53d-245c-46a0-9ae4-49ab528c973c"],
 "."
}], "TechNoteText",
 CellID->185252635,ExpressionUUID->"90f00af2-676b-4b97-9811-3bd4dd7d6754"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"example2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->250393049,ExpressionUUID->"c5c33a0d-a7c3-4ba1-a946-fcaff628af6e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["b", "2"], " ", 
   SuperscriptBox["c", "2"], " ", 
   SuperscriptBox["d", "2"], " ", 
   SuperscriptBox["z", "2"]}], 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["q", "2"]}]]], "Output",
 CellLabel->"Out[5]=",
 CellID->878465958,ExpressionUUID->"c29aedee-2263-4374-8164-0dd77a1007a7"]
}, Open  ]],

Cell["We need", "TechNoteMathCaption",
 CellID->386931535,ExpressionUUID->"3f611023-c3c0-45d3-9bc3-0bc5cdf393a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"output2", "=", 
  RowBox[{"Inactivate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["b", "2"], 
      SuperscriptBox["c", "2"], 
      SuperscriptBox["d", "2"], 
      SuperscriptBox["z", "2"]}], 
     RowBox[{
      SuperscriptBox["q", "2"], 
      SuperscriptBox["a", "2"]}]], ",", "Times"}], "]"}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->170794992,ExpressionUUID->"056d53d0-94f6-4eb4-a3a9-30502ed40cd6"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["b", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["c", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["d", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["z", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["q", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["a", "2"]}]]}]], "Output",
 CellLabel->"Out[7]=",
 CellID->112160897,ExpressionUUID->"296619f3-3e80-4fd6-a0ec-c21a226deaea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "output2", "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->200307475,ExpressionUUID->"7768e08f-1efd-4577-83cf-0b81f428b9d9"],

Cell["\<\
Inactive[Times][b^2, c^2, d^2, z^2, Inactive[Times][q^2, a^2]^
  (-1)]\
\>", "Output",
 CellLabel->"Out[8]//InputForm=",
 CellID->1194021,ExpressionUUID->"3d93041f-01d3-42c1-924c-16ab8a04e539"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", "output2", "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->791122323,ExpressionUUID->"6355e096-68a8-40fa-b4cb-7f2526bf9496"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnd+LHtd5x7ftTS/7FxiK+kf0ytAr0duUXvkqoWnQTQpRzVJjjBAYs8QK
kqMkdpxEtUO87kYYkVQIIYSM5CROIuomriOqWIoxUV1hTFRhhLARk1M/6PDs
OfPOO++cc+b8mM+Hwaz2nZ155jtnnu+c78yu//IL//S5f/zTra2tw39u/vO5
z2//zVe+8vl/+bu/MP/4+y8fPvSlL3/xH/72y//8xS998St//YU/M9987E+2
tv7KrP//X3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADFcAQWSe5xBwDLInfPgzzkHncAsCwedp6bLAtZ8BoAmB+8ZmkLXgMA84PX
LG3BawBgfvCapS14DQDMD16ztAWvAYD5wWuWtuA1ADA/eM3SFrwGAOYHr1na
gtcAwPzgNUtb8BoAmB+8ZmkLXgMA84PXLG3BawBgfvCapS14DQDMD16ztAWv
AYD5wWuWtuA1ADA/9XrN7u6Jra2tgwcfzV6JXQ4ceMSUdOXKXvZKBha8BgDm
p2SvMa17wEp2drZNYzfrZK/TLlufYUwweyUDC14DAPMzxmvkdt1hhq447DWJ
FpkuGQ4desx+03ztK5B9ViVuazBfjP8pvAYA5mf8vObKlb2Zb9pzec1ACDa/
CGPOC14DAIUT6DUyC7hx43VjCr23+vJTFrOms1k9aZJP7cxi1STC3s87s4/u
sxSrtwBd9vDsbJrXrDpGORYrghVKl62P1zkcR5/ewvAaACifKF5jYxzTS3Wk
Y35Ed35ps/afsrJewem0a+c1ZgXnRyTs0t1evqP3aMtz6gnxGq2G7zXyUEkO
1uxdvFJW019LefqIHAV6H07hNQBQPlG8Rvc60xtXGYSzBbPa8JP9CV7TO4ux
6/i1+Q87UniN7MJUK8drVxNz0VvTW/A/XVUSXgMAhRPFa3RzHu81fp8P9xrn
p2SPtvn7e/R3kcJrZIO2Wruav76zfQnQhlXCawCgfFJ7jf8Gl2xhzE37NK/R
Ddx8qrew1Ud2r/HR27cPwnheAwD1ktRrxGjsp3oLzqOTiF4jniJ78fO0tW05
77xmYPFtCK8BgFpI6jWOWfgB0bCVDMRxw14j0xnZ3UYbnNlrRj6R0Xbj2wpe
AwDlk9Rr9Ite9r1fuwX5WedXJvXG5R2tgc6/ymtkX+aj3jcHhjvznF7T9b04
p/elndGXGq8BgFoI/LsBa5/XOD/iNGq5sbf4LVc/7nEsbOAZh63Z78zOHv11
JniN8ztEgn7lbMBruv2/LrS1/6/uOB+tsiS8BgAKp+S/h5ZlGfaaAhe8BgDK
B69xFrwGACA6eI2z9P7tzTIX/vYmANQCXrO0Ba8BgPnBa5a24DUAMD94zdIW
vAYA5gevWdqC1wDA/OA1S1vwGgCYH7xmaQteAwDzg9csbcFrAGB+8JqlLXgN
AMwPXrO0Ba8BgPnBa5a24DUAMD9HYJHkHncAsCxy9zzIQ+5xBwAwhfeuXz/7
yivHt7efPXzYLCeeeOLcq6++/+674Vv+r1/8wmzNbPPlY8f+8OGH4Ru0mzXb
NEXG2uD9e/fOnDolh3/57NkHDx4EbvDDDz54/cc//taRI7LNrz3++OkXX7z2
1luffvpplIIBAGrh/z766Cfnz79w9Kj0Q7P82ze/adr4J/fvh2/cbMR4gWz2
wunTcXtsdK8Rrl6+bEzBbHn35Mm7d+6Eb9B41o133vnRSy9ZH//6k09efO21
/33//fCNAwCUjHEB06uNrViL+fbTTxvTMdYTaxfmrv5fv/pVmSKZm/lYm7Uk
8hqDcQGjhtn4N5566nfXrsXa7L2PP/6PN974/vHjVnOjzy8vXfr47t1YuwAA
KIT3333X9GcJteJmZRqbm5l2+tHt23E3bneRyGu6z3zh9IsvRszTNMaFL505
Y4zMZmuvffe7//2rX5GtAUDtSFYmt+vRszKNzs3MF9G3b0nqNcLPL16Mm6dp
jH/99u23z5w6JbuQaRTZGgDUyAxZmUbnZma/KXZhmcFrDL+/eVMeZsXN0zRm
DnX18uWXjx0jWwOA6pgnK9Po3MyYTrod2d3N4DVd4jxNc/vWLbI1AKiC2bIy
zWy5mWY2rxGS5mkasjUAKJaZszLNnLmZZmav6WbJ0zRkawBQDvNnZZqZczNn
1zN7TTdjnqYhWwOAXGTJyjRZcjNNFq8RZsvTNGRrADAbflb2wtGjb5w7F/Fv
v4whV26myeg13ex5moZsDQDS4WRlx7e3z77yynvXr89fScbczCkjo9d0mfI0
DdkaAMTCz8p2T5789Ztvzp9ZGUwTO7+3lzE302T3GiFLnqYhWwOAyRSSlWnM
riW3yZibaQrxmi5rnqYhWwOA8ZSTlWmuvfVWCbmZphyv6QrI0zRkawCwirt3
7pSTlWlMg7pw+nQhuZmmKK8RsudpGrI1ALCYTv6bq1d/+Pzz5WRlmtJyM02B
XtMVk6dpyNYAloxpSuf39krLyjQF5maaMr2mU3mamVCYuWrePE1z+9YtM68h
WwNYAnfv3PnZhQvfeeaZ0rIyTbG5maZYrxFsnmYmrUXNIMzJNf5iXIZsDaA9
Cs/KNCXnZprCvaZTedq3jhwpasYqGAf85aVL8ju5ZGsAtVN+VqYpPDfTlO81
XcF5msbMaMjWACqliqxMU0VupqnCa4Ri8zQN2RpARVSUlWlqyc00FXlNV3ye
piFbAyiZurIyTUW5maYur+kqydM0vdnab99+u/zKoWqONAea+IRrgiwL0eT2
rVto4hA+TqBjYOxHsrLcRxAfhkovaOJjZjovHzt29fJlM19DEyF8nED3cGB0
3c0GlpCBobMyNGGoLFYTna2dOXVqQrbWnibh4wS6xQ8M/72yHzz33MI1Yags
WZPe99YunTkzPltrT5PwcQLdUgdG73tll8+e/ej27cVqwlBBE62J/97ayGyt
YU0ghKUNDP+9sn///vd/d+2aDgqWpglDBU0GNPHfWxvO1pagCUxgIQOjNyv7
z5/+9P69e4vVhKGCJuM1GZ+tLUcT2Ii2B4a5QK699Zb93105WdkyNWGoRJRl
gZqszdYWqAmModWB8T/vvXfh9OmvP/nkQFa2NE0YKtFlWbImq7K1JWsCA7Q3
MH5+8eL3dnbGZGXL0YShkkgWNLHRgc3W0AR6aW9gjM/KlqMJQyWRLGhiuXvn
jtzmoQn00t7AGJ+VLUcThkoiWdAETWAkDAw0QRY0QZOkmkDHwEATZEETNEms
CXQMDDRBFjRBk8SaQMfAQBNkQRM0SawJdAwMNEEWNEGTxJpAx8BAE2RBEzRJ
rAl04wbG7u6Jrf3s7GxnHwZ5L5YrV/YcTQ4deiy7AkkvljGyOJocOPBIdgWy
DxUjgiNL9sPPrsnBg486mty48Xp2BdJpAt0mXmMHg/zTjJbsIyHjxSJeY/6r
/1lga53fa/R9SLFtZGav0fchYj125JSzzOw1uoGI9ZjGkl2ERJpAN8lrzGKu
Hf0d5yZfvm/+2zt+TC/St3b6DkdfgGY1ad32tnCtu2X0Gntc9jty+P6h9c4K
HYVFXkELKKtp0da6W16vEZX0d/RNvv2+03m0gPbw9eRat25ZzexI9B/pbhm9
RgrW39GXgP2++aL35Grd9HXnCCjSadHWultGr5GC9Xf0JWC/77SOXoX1decI
aP5ptqBFW+tueE1EpnmN7qvyqT1rMkjko96+qi8i84UzkOwVYVuHbFmG0HB2
l9drtA5Oj5VjkY+czuNfREYQq4+jrW0ddstb67K7vF7j9FXdN0Qi+ai3r2qF
RR99D+P3FrtlLWAJQ8U/47pa86mtVo5FPurtq9p/ZTDoexjdq51mK1dlOZr4
XqN1EPPVxyIf+Y3IGXUyZuz1orfZqfucTl10w7cleE1Ewuc1fruzF5f9QsaA
rG++s+pq0iPQsZ5uvzFlv1iG5zV+qfbQ7Bf2hrxTk7heqVdZTzeir5Yzr/Hb
nR0AeiTIzaceM/4EWavkTxPm7CGB8xq/VHto+hjNWZb19ZjplXqV9TjGlF2T
gXmNX6o9NH2Mto10Dydxq6ReZT2OMaW+fGCC18g/dUNwxrBtj3ZE6Rt7e+H4
4023o1Xz5UIult7nNbohOGPYHo4VR8toLxz/Dl+3o1X3dfNcLBO8Rt9a+7f3
VkN7XPrG3gaG/lHrLrEqqi1nqPQ+r+lWtFx7OHqAWRmt//rXnTPxXxsC5NWk
93mNvRf1b5/kcPS5tjJa/+0dCfo+pDdSmO3ygfFeo3Ge1Phe4/RV8RcZXfbG
1X8XxZ/hFnux+O+hOU9qer3GfKRNx9Gn2x9T+4JX4TUa50lNr9fovmq+tlNm
Z67nU5HX6LKdJzW9XqP7qpFFZq/WlHuHnyP4VvFeo8t2ntT0eo3oZsWR6MAO
Hnuj4oPXFMK0DM1pF6vmNfYHzT9lJHRqwtv7RNguVXhNbygxPK+xl4ZVQ/Sx
E5yBTKwKr1nV4gbmNXZUmPEgrVVMR09wVh11FV6zqsUNzGu6h3dl5mdFDfO1
9d+B4bf2RJSgycC1PzCv6R7elYkUVpwtNcEZGAl4TV4CvaZ3VDuPaeRKkXGi
E6FhN6nXa3pHtfOYRvqqXFn+ixarpK7aa1bFg1YxHZqJXLKp4R5Stdf4g9x5
TCPmIqGZbEe/aDHgJvV6zarI1D6mkZsQG5qZw9QvWgy4CV6Tl3CvcR7i62cu
dlYrrcC+WqaviFVDrmqvcR7iO4+AddxhAyL7qfMEc/yJSH2xBHqN8xDfeTIr
oYq2Y/2p8469v9lKvabbfwk4z1zkqO1g0MOm63t5ZuSJKEGT4UzDuQT0sHF6
iOST9lP/5ZnxJyKpJtDF8Jpuf6Lu9Ek9MORS8l9631I4l1KxF8vaEMNJ1P1D
dqzHuRL1zzqXUqVeow9W0OpJX3Wsx3/Nzx9mtXuNcwnoA5FDdqzHfx+vd5hV
7TXOJaAPRA7ZsR7/fTyNvovDazIyZmDUssx5sdSyzOw1tSwMFTSZUxPoGBho
gixogiaJNYGOgYEmyIImaJJYE+gYGGiCLGiCJok1gY6BgSbIgiZoklgT6BgY
aIIsaIImiTWBjoGBJsiCJmiSWBPoGBhogixogiaJNYGOgYEmyIImaJJYE+gY
GGiCLGiCJok1gY6BgSbIgiZoklgT6BgYaIIsaIImiTWBjoGBJsiCJmiSWBPo
Hg6MlkATn3BNkAVN0ARCyH0a44MmPuGaIAuaoAmUxu7Jk88ePvybq1cjrlk7
5/f2zJH+7MKFiGvWztXLl82Rnn3llZFrnjl1Kn1RmXnv+nVzpN955pmIa9bO
3Tt3zJGeeOKJTz/9NNaa0AByuo9vb39y//7alRfSQx48ePCNp54yR/qHDz9c
u7L0kJePHZuhsLzIncZv33577ZobDaqqkTuNN86dW7umHVS3b92aobCMjL8n
6TYZVFA7G9nHQnrIRvaxkTHVy6a3oEuYAm9qH+ONqWo2so+NjAmqZtOesIQe
smkstoQYbdOesIQp8Kax2BJitE3vSYjRFsKEeUrzPWTCPGUJMdqmWccSpsCb
zlOWEKNNmKcQoy2BCcbRfA+ZYBzNx2jTbj7bngJPM47mY7QJxkGMtgSmdYO2
e8i0QKztGG1aN2h7CjwtEGs7Rpt2T0KM1jyTZygN95DJM5S2Y7RpKUfbU+Bp
M5S2Y7TJMxRitLaZbBkN95DJltFwjBZy29nqFDjEMhqO0SZbBjFa24T0gVZ7
SEgU1mqMFtIHWp0Ch0RhrcZoIfckxGgNEzg3abKHBM5NWo3RQvKNVqfAIXOT
VmO0wLkJMVqrBJpFkz0k0CyajNHCbzjbmwKHm0WTMVqgWRCjtUp4B2ivh4SH
YO3FaOEdoL0pcHgI1l6MFn5PQozWJFFmJdJDfvTSSxELy0iUWUl7MVp4stHe
FDh8VmIH24cffBCxsIxEmZUQo7VHlFvNxu5DxCa+t7MTspHGYrRYp7ilKXCs
py2NTYGj2MTPL14kRmuMWNd+S/chsSL0lnpIrAi9pRgtVvzV0hQ41j2JuUNr
6fYVImYazTzOi/hqUEs9JNa9REsxWqx7kpamwBH7gLlwmrl9hYg3mc3EaBGf
1TbTQ+Ke3DZitLivKzczBY6Ybxg12rh9hS72Vd9GjBb3HdQ2ekjcSWsbMVrc
98famALHvSchRmuG6GlGAzFa9N+ta6OHxL2LaCNGi3tP0sYUOHoHIEZrg+i3
lw3EaNF/2aGBHpLitNYeo6X4ff8GpsDRkw1itDZIcb3XHqOl+CXu2ntIiulq
7TFail/ArH0KnOKehBitARLlGFXHaIn+OFXtPSTF/UPtMVqKe5Lap8CJrn1i
tNpJdGNZdYyW6K+FVN1D0p3QemO0dH8ws+opcKJMgxitdtJd6fXGaOn+CmK9
PSTdRLXeGC3dXzCrdwqc7p6EGK1qkiYYlcZoSf+6e709JN2dQ70xWrp7knqn
wEmvemK0XBxJBpW0VElRxSyhEmieTQdb7ZSjJJWUXElRxSyhEmieTQdb7Tw8
6psRl2lKUknJlRRVTGOVpDicBS65ZJywX7wmtvhU0k4lRRXTWCV4TdQzWMF+
8ZrY4lNJO5UUVUxjleA1Uc9gBfvFa2KLTyXtVFJUMY1VgtdEPYMV7BeviS0+
lbRTSVHFNFYJXhP1DFawX7wmtvhU0k4lRRXTWCV4TdQzWMF+8ZrY4lNJO5UU
VUxjleA1Uc9gBfvFa2KLTyXtVFJUMY1VgtdEPYMV7BeviS0+lbRTSVHFNFYJ
XhP1DFawX7wmtvhU0k4lRRXTWCV4TdQzWMF+8ZrY4lNJO5UUVUxjleA1Uc9g
BfvFa2KLTyXtVFJUMY1VgtdEPYMV7BeviS0+lbRTSVHFNFYJXhP1DFawX7wm
tvhU0k4lRRXTWCV4TdQzWMF+8ZpVy+7uia2trStX9pIq2VgDaaySacUcOvTY
gQOPNCzLwr3mxo3Xtz4jeyUZZcRrRoLXUEm6YvCaTXYd83BiLeYMDliJ6Qni
NcZ0speK1xROdV5jh/eYG6rltDKtyfCZWo7XmF1bTcwYLnaojNmI9HyH8Zfk
5GXYaxItdrqkB490oV7Gy7jR3kfKK/s9ePDR8bvAa1Yt5XiNGI29iTLnd/hC
WIjX6F66s7M9fLIW4jVmv0YKPYCH7aZwr9Hn2qgad3AOn8EsXmPP3XgRopwL
M2xk5OA10dnIa6S3G4aFne2yFesZ6CEzVDJykjVnKxtuR6m9xrn/LCRDM2Xk
GrT2qlk1VAK9Ru7DjezSIXuHot61f73oSZN8au/tV1Wu4wXnFMvWnFTN0d/f
o3NEWbzGVCj7xWtSMN5r9I1iim422WsGhmXSSmTvWocSNJGzMzDyk3qNcxtc
zvMauV/NXon0cKeJRfEafdKdxq7PiN9FJWlcNYbXzmv8U+xflc49oanN/kjv
lDPjvGaVSmtHDl6zlvFeo0+unIu4Sk4YKlJGrnnN2lvlLJr4DhhrnK8tRnat
r9BCvEa6cQmTcVNDYJNc5TX66IYvT70FWXPgyf4Er+lWzGLka2kmeo/+FvCa
JhnvNVp5f8CEKzmtgeRqZTa4SDq6pt3AD3ePdF7jt7hCvEZSrBSvTGxUySoL
iOI1ujmP9xqjzHCTnOY1joXpSMRf3/c7vKZJQrxm1bmYp4FIbjD8smW6Svx7
+BSja1pTTfEQfEwxZXqNdMvh3jVDJQM3J6m9xn+Dy27BnJ3hNw2meY3UKSU5
7/P0vlA3m9c4b7FanNXwmhSEeE3GeY2MkLWDIbXXFDWvEaNJ1FTHFFOg10hn
G/PiVupKBmYQSb1GLlX9qeM1KeY18n3Zsv1i5JDomNc0yjSvGR4wqS/bkUaT
upKRTWweTUYaTcg4X1uMcweSN+TsNjGa1JWMuzcbNZA29RrfLPQW1lrJcBzX
rW4FdjpjPtW3ZMNS2CPCa9pjgtes/XWbpJft2ucRs1UiA1JfFLneQ5OOMXKS
lc5rOtUE7APrXF7jn52MQ2X47CT1GqdtOhmafz/gbHztq54Dt50S0PlWtfad
QLymScZfLKvC1VhKjm8gw2HvPJV06kpclfrOU8mqCHpVc0vqNfr3MqRjZPGa
Vb8ekuX1+N7fr9FnZ8xGBv5uwNrnNboA+S05p1EP/4EF53HPwJXobFbW6b0B
czTx3TOL1/Qe1FoTwWtGEvFmIFBJKim5kqKKaaySFIdT9bLWa4qSEa8ZSWOX
LZWkG+flFNNYJXiNs+A1TdLYZUsl6cZ5OcU0Vgle4yy9f3uzWBnxmpE0dtlS
SbpxXk4xjVWC10Q9gxXsF6+JLT6VtFNJUcU0VgleE/UMVrBfvCa2+FTSTiVF
FdNYJXhN1DNYwX7xmtjiU0k7lRRVTGOV4DVRz2AF+8VrYotPJe1UUlQxjVWC
10Q9gxXsF6+JLT6VtFNJUcU0VgleE/UMVrBfvCa2+FTSTiVFFdNYJXhN1DNY
wX7xmtjiU0k7lRRVTGOV4DVRz2AF+8VrYotPJe1UUlQxjVWC10Q9gxXsF6+J
LT6VtFNJUcU0VgleE/UMVrDfJXtNCqikpUqKKmYJlUDzbDrYaqccJamk5EqK
KmYJlUDzbDrYAABAePDgwcvHjj17+PDF116Lu9kfPPec2eyPXnop4mYBAKBG
fnL+vHGEbz/99Cf378fd8ke3bx/f3jYbv/HOO3G3DAAAFXH71q2vPf64sYP3
3303xfZ/eemS2fgLR4/ev3cvxfYBAKBwEqVnzi4kSTv36quJdgEAACWTLj3T
kKQBACyW1OmZhiQNAGCBzJCeObsjSQMAWBrzpGcakjQAgEUxZ3qmIUkDAFgI
M6dnzq5J0gAAlsD86ZmGJA0AoHlypWcakjQAgIbJmJ45ZZCkAQC0St70TEOS
BgDQJCWkZxqSNACAxigkPdOQpAEANEY56ZmGJA0AoBlKS880JGkAAA1QYHqm
IUkDAGiAMtMzDUkaAEDVlJyeaUjSAAAqpfD0TEOSBgBQKeWnZxqSNACA6qgl
PdOQpAEAVISNpMpPzzQkaQAAqzjSHGjiE64JAEAIubtgfNDEJ1wTAIAQHvai
mw0ssfoqmgAAxIW+iiYAAKmhr6IJAEBq6KtoAgCQGvoqmgAApIa+iiYAAKmh
r6IJAEBq6KtoAgCQGvoqmgAApIa+iiYAAKmhr6IJAEBq6KtoAgCQGvoqmgAA
pIa+iiYAAKmhr6IJAEBq6KtoAgCQmjF99cCBR7b2k72FZveaQ4ceczS5cmUv
uwJ4DQCUyUivMa3VsZ4CW+vMXmN0cKxnZ2c7uwh4DQAUyASvuXHjddNX9XcO
HnzU3t7b7zvd2C66JxvDsj9oNuKstrt7wizjJw4ZvUZU8t3HOTRz4L2zQq2w
yCv4uzBb0KIZffAaACifCV4jRmD7p+6x0iflo96+KitIhxQfsQ7i2I3TbKV1
l+w1Yrj+13IssrIcshFhlf+Kj1gHcfzLhpnaufyt4TUAUBqB8xq/3dl2qvuq
6b2yvvys+IsTOkmbXWU9jjEV6DXWF/xS7aHpYzRbsAdo/aVX6lXW4xgTXgMA
xTL5eY29gXeyL9sedV+1N/byTbOO4yz2B637THj8kf15jTURPzyUw9HeYWW0
/us4i/1BK74/wZxNEwCAECa8h+Y8qen1Gt1XTRc165iNmC/knr/b/6RGU5HX
6LId3+n1GtHNimPWMbJYUzbf0U9qegXHawCgUqY9r1nrNfbW3fRV87Pmn+a/
5muz6AnOQCZWvtf0vvkw4DVyOBInihRWHD3BGcjE8BoAqJRAr/FfAHAe04i5
SGgm27GbGnaTer3GfwHAeUwjT2psaGYOU79oMeAmeA0AVEqg13T7H+I7z1wk
aLI92UnJxKdWTW3q9ZrOe4ivczA5amvQkk/aT8WnVk1t8BoAqJRwr+n2P9DR
fVL6qmM9egX96zO6A9fuNd3+3znSByKH7FiP/z6exk6R8BoAqJQxfbWWZU6v
qWXBawCgBOiraAIAkBr6KpoAAKSGvoomAACpoa+iCQBAauiraAIAkBr6KpoA
AKSGvoomAACpoa+iCQBAauiraAIAkBr6KpoAAKSGvoomAACpoa+iCQBAao40
B5r4hGsCABBC7i4YHzTxCdcEAKAorl6+/Ozhw2dOnVq75r2PP/7a44+bxXyR
vq6cvHf9utHkO888M2blF44eNSv//ubN1FUBANTL7smTplX+5urVMSv/8Pnn
zcq/fvPN1FXl5fzenjnMN86dG7PypTNnzMrmv6mrAgColLt37pg+eXx7+5P7
98esb1zGrG8cJ3VhGXnw4ME3nnrKHObtW7fGrG9mNGZlM7tJXRgAQKWMD9CE
JcRoGwVoAjEaAMAAGwVoQvMx2kYBmkCMBgCwik0DNKHtGG3TAE0gRgMAWMWm
AZrQdow2IUATiNEAAHqZEKAJDcdoEwI0gRgNAMBnWoAmtBqjTQvQBGI0AACf
aQGa0GqMNjlAE4jRAAAcJgdoQpMx2uQATSBGAwDQhARoQnsxWkiAJhCjAQBo
QgI0ob0YLTBAE4jRAAAsgQGa0FiMFhigCRKjBW4EAKABwgM0oaUYLTxAEyRG
C5wcAQA0QHiAJrQUo0UJ0ASJ0QI9CwCgdqIEaEIzMVqUAE0gRgMAiBWgCW3E
aLECNIEYDQAgVoAmtBGjRQzQBGI0AFg4EQM0oYEYLWKAJhCjAcCSiRugCbXH
aHEDNIEYDQCWTNwATag9RoseoAnEaACwWKIHaELVMVr0AE0gRgOAZZIiQBPq
jdFSBGgCMRoALJMUAZpQb4yWKEATiNEAoDqOJINKWqoEACCEcroZlZRcCQBA
CA87z82IS0hfpZIyKwEACKGcbkYlJVcCABBCOd2MSkquBAAghHK6GZWUXAkA
QAjldDMqKbkSAIAQyulmVFJyJQAAIZTTzaik5EoAAEIop5tRScmVAACEUE43
o5KSKwEACKGcbkYlJVcCABBCOd2MSkquBAAghHK6GZWUXAkAQAjldDMqKbkS
AIAQyulmVFJyJQAAIZTTzaik5EoAAEIop5tRScmVAACEUE43G1nJoUOPbT3E
fN12hx9Zyc7OttXk4MFH8RoAKI26+qoxF9tLb9x4fa3dLMFrjNEcOPCI/eda
u8FrAGB+RvbVK1f2tvZjWn32Di9znFxe42gyIMicmsgcJ/rZAQAIYUw32909
YdqXaa36n+V4TZZKjBp6+mC+zuh6vtfYk4XXAEAJjOlmBw48oqOqcrzGFFZI
h5c5jlEmeyXiesxrAKAo1nYz6aL6PrkQr5EbePNfvMY5NSmeYQEAhFCp10gN
id65GlmJfiNOyOs1cqb0ewJ4DQAUQo1eIwWsbapJKxGjsbJkn9fYFxUSaQIA
EMLabiavFusuKk9JcnnNeKNJWokpQM+q8nrNeKPBawAgC2O6mWmqtrebLzJ6
jTTVtdHZDJXoF89sq8/iNXIzMNJ88RoAyMLIO2fxF3kWnzFDs2VoBqwn6WxC
1yD/zOI14noOA9aD1wDA/Ix/ImCX7M9rxi9UgtcAQAngNVQCAJAavIZKAABS
g9dQCQBAasrpZlRSciUAACGU082opORKAABCKKebUUnJlQAAhFBON6OSkisB
AAihnG5GJSVXAgAQQjndjEpKrgQAIIRyuhmVlFwJAEAI5XQzKim5EgCAEMrp
ZlRSciUAACEcSQaVtFQJAEAI5XQzKim5EgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyM4fAfPDT4o=
    "], {{0, 173.5}, {274., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{274., 173.5},
  PlotRange->{{0, 274.}, {0, 173.5}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[9]//TreeForm=",
 CellID->258689455,ExpressionUUID->"d0704778-93bf-4fe1-a259-61f784ffbcfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpressionTree", "[", "output2", "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->66563211,ExpressionUUID->"c13fba48-4a62-4503-a2bb-e39e9bd34fa8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[
      Tree[Inactive, {
        Tree[Times, None]}], {
       Tree[Power, {
         Tree[$CellContext`b, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[$CellContext`c, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[$CellContext`z, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[
          Tree[Inactive, {
            Tree[Times, None]}], {
           Tree[Power, {
             Tree[$CellContext`q, None], 
             Tree[2, None]}], 
           Tree[Power, {
             Tree[$CellContext`a, None], 
             Tree[2, None]}]}], 
         Tree[-1, None]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.02104973008516573], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.5287816912705736`, 2.4120315285839298`}, {
         0.2809757434745082, 1.8090236464379474`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.5287816912705736`, 2.4120315285839298`}, {
         1.404878717372541, 1.8090236464379474`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.5287816912705736`, 2.4120315285839298`}, {
         2.5287816912705736`, 1.8090236464379474`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.5287816912705736`, 2.4120315285839298`}, {
         3.6526846651686067`, 1.8090236464379474`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.5287816912705736`, 2.4120315285839298`}, {
         4.776587639066639, 1.8090236464379474`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.2809757434745082, 1.8090236464379474`}, {0., 
         1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.2809757434745082, 1.8090236464379474`}, {
         0.5619514869490164, 1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.404878717372541, 1.8090236464379474`}, {
         1.1239029738980328`, 1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.404878717372541, 1.8090236464379474`}, {
         1.6858544608470492`, 1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.5287816912705736`, 1.8090236464379474`}, {
         2.2478059477960657`, 1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.5287816912705736`, 1.8090236464379474`}, {
         2.809757434745082, 1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.6526846651686067`, 1.8090236464379474`}, {
         3.3717089216940983`, 1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.6526846651686067`, 1.8090236464379474`}, {
         3.9336604086431146`, 1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.776587639066639, 1.8090236464379474`}, {4.495611895592131,
          1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.776587639066639, 1.8090236464379474`}, {5.057563382541147,
          1.2060157642919649`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.495611895592131, 1.2060157642919649`}, {
         3.9336604086431146`, 0.6030078821459826}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.495611895592131, 1.2060157642919649`}, {5.057563382541147,
          0.6030078821459826}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.9336604086431146`, 0.6030078821459826}, {
         3.6526846651686067`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.9336604086431146`, 0.6030078821459826}, {
         4.214636152117623, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.057563382541147, 0.6030078821459826}, {4.776587639066639, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.057563382541147, 0.6030078821459826}, {5.338539126015656, 
         0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox[
          GraphicsBox[
           NamespaceBox["Trees",
            DynamicModuleBox[{Typeset`tree = HoldComplete[
              Tree[Inactive, {
                Tree[Times, None]}]]}, 
             NamespaceBox[{
               {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
                AbsoluteThickness[1], Opacity[0.7], Arrowheads[Medium], 
                LineBox[{{0., 1.}, {0., 0.}}]}, 
               {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[InsetBox[
                  FrameBox["Inactive",
                   Background->Directive[
                    RGBColor[
                    0.9607843137254902, 0.9882352941176471, 
                    0.9764705882352941]],
                   BaseStyle->GrayLevel[0],
                   FrameMargins->{{2, 2}, {1, 1}},
                   FrameStyle->Directive[
                    RGBColor[
                    0.4196078431372549, 0.6313725490196078, 
                    0.4196078431372549], 
                    AbsoluteThickness[1], 
                    Opacity[1]],
                   ImageSize->Automatic,
                   RoundingRadius->4,
                   StripOnInput->False], {0., 1.}],
                 "DynamicName",
                 BoxID -> "VertexID$1"], 
                TagBox[InsetBox[
                  FrameBox["Times",
                   Background->Directive[
                    RGBColor[
                    0.9607843137254902, 0.9882352941176471, 
                    0.9764705882352941]],
                   BaseStyle->GrayLevel[0],
                   FrameMargins->{{2, 2}, {1, 1}},
                   FrameStyle->Directive[
                    RGBColor[
                    0.4196078431372549, 0.6313725490196078, 
                    0.4196078431372549], 
                    AbsoluteThickness[1], 
                    Opacity[1]],
                   ImageSize->Automatic,
                   RoundingRadius->0,
                   StripOnInput->False], {0., 0.}],
                 "DynamicName",
                 BoxID -> "VertexID$2"]}}]]],
           AlignmentPoint->Center,
           Axes->False,
           AxesLabel->None,
           AxesOrigin->Automatic,
           AxesStyle->{},
           Background->None,
           BaseStyle->{},
           BaselinePosition->Automatic,
           ContentSelectable->Automatic,
           DefaultBaseStyle->"TreeGraphics",
           Epilog->{},
           FormatType->StandardForm,
           Frame->False,
           FrameLabel->None,
           FrameStyle->{},
           FrameTicks->None,
           FrameTicksStyle->{},
           GridLines->None,
           GridLinesStyle->{},
           ImageMargins->0.,
           ImagePadding->All,
           ImageSize->Automatic,
           LabelStyle->{},
           PlotLabel->None,
           PlotRange->All,
           PlotRangeClipping->False,
           PlotRangePadding->Automatic,
           PlotRegion->Automatic,
           Prolog->{},
           RotateLabel->True,
           Ticks->Automatic,
           TicksStyle->{}],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.5287816912705736, 2.4120315285839298}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.2809757434745082, 1.8090236464379474}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.5619514869490164, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.404878717372541, 1.8090236464379474}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["c",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.1239029738980328, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.6858544608470492, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.5287816912705736, 1.8090236464379474}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.2478059477960657, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.809757434745082, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.6526846651686067, 1.8090236464379474}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox["z",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.3717089216940983, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$12"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.9336604086431146, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$13"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.776587639066639, 1.8090236464379474}],
        "DynamicName",
        BoxID -> "VertexID$14"], 
       TagBox[InsetBox[
         FrameBox[
          GraphicsBox[
           NamespaceBox["Trees",
            DynamicModuleBox[{Typeset`tree = HoldComplete[
              Tree[Inactive, {
                Tree[Times, None]}]]}, 
             NamespaceBox[{
               {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
                AbsoluteThickness[1], Opacity[0.7], Arrowheads[Medium], 
                LineBox[{{0., 1.}, {0., 0.}}]}, 
               {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                TagBox[InsetBox[
                  FrameBox["Inactive",
                   Background->Directive[
                    RGBColor[
                    0.9607843137254902, 0.9882352941176471, 
                    0.9764705882352941]],
                   BaseStyle->GrayLevel[0],
                   FrameMargins->{{2, 2}, {1, 1}},
                   FrameStyle->Directive[
                    RGBColor[
                    0.4196078431372549, 0.6313725490196078, 
                    0.4196078431372549], 
                    AbsoluteThickness[1], 
                    Opacity[1]],
                   ImageSize->Automatic,
                   RoundingRadius->4,
                   StripOnInput->False], {0., 1.}],
                 "DynamicName",
                 BoxID -> "VertexID$1"], 
                TagBox[InsetBox[
                  FrameBox["Times",
                   Background->Directive[
                    RGBColor[
                    0.9607843137254902, 0.9882352941176471, 
                    0.9764705882352941]],
                   BaseStyle->GrayLevel[0],
                   FrameMargins->{{2, 2}, {1, 1}},
                   FrameStyle->Directive[
                    RGBColor[
                    0.4196078431372549, 0.6313725490196078, 
                    0.4196078431372549], 
                    AbsoluteThickness[1], 
                    Opacity[1]],
                   ImageSize->Automatic,
                   RoundingRadius->0,
                   StripOnInput->False], {0., 0.}],
                 "DynamicName",
                 BoxID -> "VertexID$2"]}}]]],
           AlignmentPoint->Center,
           Axes->False,
           AxesLabel->None,
           AxesOrigin->Automatic,
           AxesStyle->{},
           Background->None,
           BaseStyle->{},
           BaselinePosition->Automatic,
           ContentSelectable->Automatic,
           DefaultBaseStyle->"TreeGraphics",
           Epilog->{},
           FormatType->StandardForm,
           Frame->False,
           FrameLabel->None,
           FrameStyle->{},
           FrameTicks->None,
           FrameTicksStyle->{},
           GridLines->None,
           GridLinesStyle->{},
           ImageMargins->0.,
           ImagePadding->All,
           ImageSize->Automatic,
           LabelStyle->{},
           PlotLabel->None,
           PlotRange->All,
           PlotRangeClipping->False,
           PlotRangePadding->Automatic,
           PlotRegion->Automatic,
           Prolog->{},
           RotateLabel->True,
           Ticks->Automatic,
           TicksStyle->{}],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.495611895592131, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$15"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.9336604086431146, 0.6030078821459826}],
        "DynamicName",
        BoxID -> "VertexID$16"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.6526846651686067, 0.}],
        "DynamicName",
        BoxID -> "VertexID$17"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.214636152117623, 0.}],
        "DynamicName",
        BoxID -> "VertexID$18"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {5.057563382541147, 0.6030078821459826}],
        "DynamicName",
        BoxID -> "VertexID$19"], 
       TagBox[InsetBox[
         FrameBox["a",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.776587639066639, 0.}],
        "DynamicName",
        BoxID -> "VertexID$20"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.338539126015656, 0.}],
        "DynamicName",
        BoxID -> "VertexID$21"], 
       TagBox[InsetBox[
         FrameBox[
          RowBox[{"-", "1"}],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.057563382541147, 1.2060157642919649}],
        "DynamicName",
        BoxID -> "VertexID$22"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->{Automatic, 313.2062930384654},
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[10]=",
 CellID->162891395,ExpressionUUID->"03247c3a-8051-483e-9c28-96703063ee23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{
   SuperscriptBox["b", "2"], 
   TagBox["\[Times]",
    "InactiveToken",
    BaseStyle->"Inactive",
    SyntaxForm->"a*b"], 
   SuperscriptBox["c", "2"], 
   TagBox["\[Times]",
    "InactiveToken",
    BaseStyle->"Inactive",
    SyntaxForm->"a*b"], 
   SuperscriptBox["d", "2"], 
   TagBox["\[Times]",
    "InactiveToken",
    BaseStyle->"Inactive",
    SyntaxForm->"a*b"], 
   SuperscriptBox["z", "2"], 
   TagBox["\[Times]",
    "InactiveToken",
    BaseStyle->"Inactive",
    SyntaxForm->"a*b"], 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "2"], 
     TagBox["\[Times]",
      "InactiveToken",
      BaseStyle->"Inactive",
      SyntaxForm->"a*b"], 
     SuperscriptBox["a", "2"]}]]}], "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->172257243,ExpressionUUID->"ec6fb240-62f1-481b-aead-d76ba7d01e83"],

Cell[BoxData[
 RowBox[{"Inactive", "[", "Times", "]"}]], "Output",
 CellLabel->"Out[19]=",
 CellID->113973965,ExpressionUUID->"eaeea999-b9d6-434c-86bf-8808382d67df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["b", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["c", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["d", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["z", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["q", "2"], 
      TagBox["\[Times]",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"a*b"], 
      SuperscriptBox["a", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Inactive", "[", "Times", "]"}], "[", 
     RowBox[{"OrderlessPatternSequence", "[", 
      RowBox[{
       RowBox[{"numerator", ":", 
        RowBox[{"RepeatedNull", "[", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Head", "[", "x", "]"}], "!=", 
           RowBox[{"Inactive", "[", "Times", "]"}]}]}], "]"}]}], ",", "___"}],
       "]"}], "]"}], ":>", 
    RowBox[{"(", 
     RowBox[{"<|", 
      RowBox[{"\"\<numerator\>\"", "->", 
       RowBox[{"{", "numerator", "}"}]}], "|>"}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[20]:=",
 CellID->250063681,ExpressionUUID->"13eb6b9c-455c-4ad9-bd49-edd045309a4a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"numerator\"\>", "\[Rule]", 
   RowBox[{"{", "}"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[20]=",
 CellID->106697600,ExpressionUUID->"0e53fd9a-0db9-4847-b392-bf47cfc113ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Inactive", "[", "Times", "]"}], "[", 
    RowBox[{
     RowBox[{"b", "^", "2"}], ",", " ", 
     RowBox[{"c", "^", "2"}], ",", " ", 
     RowBox[{"d", "^", "2"}], ",", " ", 
     RowBox[{"z", "^", "2"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Times", "]"}], "[", 
       RowBox[{
        RowBox[{"q", "^", "2"}], ",", " ", 
        RowBox[{"a", "^", "2"}]}], "]"}], "^", "\n", "  ", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"Inactive", "[", "Times", "]"}], "[", "___", "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[21]:=",
 CellID->661990640,ExpressionUUID->"dbc6f9c3-035e-4def-a6e5-e35f54f2c047"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[21]=",
 CellID->179615253,ExpressionUUID->"1ea36e34-572f-497e-96d1-6ca644b69040"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Inactive", "[", "Times", "]"}], "[", 
    RowBox[{
     RowBox[{"b", "^", "2"}], ",", " ", 
     RowBox[{"c", "^", "2"}], ",", " ", 
     RowBox[{"d", "^", "2"}], ",", " ", 
     RowBox[{"z", "^", "2"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Times", "]"}], "[", 
       RowBox[{
        RowBox[{"q", "^", "2"}], ",", " ", 
        RowBox[{"a", "^", "2"}]}], "]"}], "^", "\n", "  ", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"Inactive", "[", "Times", "]"}], "[", 
    RowBox[{"___", ",", "___"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->60633593,ExpressionUUID->"3d6228a8-2208-4d35-95b0-a050cee534b1"],

Cell[BoxData[
 TemplateBox[{
  "Head", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Head\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\\\
\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 22, 3, 
   34135963325345372815, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[22]:=",
 CellID->170308327,ExpressionUUID->"5a4fabba-f2ec-4c83-b2a4-b38f3e0ece80"],

Cell[BoxData[
 TemplateBox[{
  "Head", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Head\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"3\\\
\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 22, 4, 
   34135963325345372815, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[22]:=",
 CellID->102137890,ExpressionUUID->"61a8d197-545b-44b1-83e3-71cbb7032891"],

Cell[BoxData[
 TemplateBox[{
  "Head", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Head\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"4\\\
\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 22, 5, 
   34135963325345372815, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[22]:=",
 CellID->394454359,ExpressionUUID->"0f8e44fb-fc80-4be1-910d-1125443ebcc8"],

Cell[BoxData[
 TemplateBox[{
  "Head", "argt", 
   "\"\\!\\(\\*RowBox[{\\\"Head\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"5\\\
\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"1\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 22, 6, 
   34135963325345372815, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[22]:=",
 CellID->76820452,ExpressionUUID->"70210467-e429-4c0c-a85a-959e7fe46990"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[22]=",
 CellID->491793677,ExpressionUUID->"e53fb0c0-7c9d-4a9a-a8ad-14927e217ac7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   SuperscriptBox["b", "2"], ",", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"Head", "[", "x", "]"}], "!=", 
     RowBox[{"Inactive", "[", "Times", "]"}]}]}]}], "]"}]], "Input",
 CellLabel->"In[23]:=",
 CellID->384495673,ExpressionUUID->"2de3f7cd-8cc2-44d0-97aa-27093d6cd1e0"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[23]=",
 CellID->186967771,ExpressionUUID->"ded23f71-8f0d-4855-950e-4a71093512d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   SuperscriptBox["b", "2"], ",", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"Head", "[", "x", "]"}], "=!=", 
     RowBox[{"Inactive", "[", "Times", "]"}]}]}]}], "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->322303961,ExpressionUUID->"4f18cbe3-aae0-43f9-903d-5b5f5e86408a"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[24]=",
 CellID->705383167,ExpressionUUID->"679fcfca-9b09-47d4-b027-626f35009e3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   SuperscriptBox["b", "2"], ",", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"Head", "[", "x", "]"}], "=!=", 
     RowBox[{"Inactive", "[", "Times", "]"}]}]}]}], "]"}]], "Input",
 CellLabel->"In[29]:=",
 CellID->352881982,ExpressionUUID->"8444b3cf-06af-42e3-8559-d3cc05066374"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[29]=",
 CellID->104515354,ExpressionUUID->"c9a85bc5-8306-4405-ab81-892c8d1a822c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "2"], 
     TagBox["\[Times]",
      "InactiveToken",
      BaseStyle->"Inactive",
      SyntaxForm->"a*b"], 
     SuperscriptBox["a", "2"]}]], ",", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"Head", "[", "x", "]"}], "=!=", 
     RowBox[{"Inactive", "[", "Times", "]"}]}]}]}], "]"}]], "Input",
 CellLabel->"In[30]:=",
 CellID->319128574,ExpressionUUID->"1198c22f-8820-476d-882a-5d43b3337bb9"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[30]=",
 CellID->32208754,ExpressionUUID->"d1ee4449-7485-4155-93c9-252412f233f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["q", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["a", "2"]}]], "]"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->632903510,ExpressionUUID->"00f1cd4a-9fe8-42f1-985b-3fce886b359c"],

Cell[BoxData["Power"], "Output",
 CellLabel->"Out[31]=",
 CellID->65152455,ExpressionUUID->"1674cfe9-585a-4193-b5db-2c822c9e8c64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "2"], 
     TagBox["\[Times]",
      "InactiveToken",
      BaseStyle->"Inactive",
      SyntaxForm->"a*b"], 
     SuperscriptBox["a", "2"]}]], ",", 
   RowBox[{"Inactive", "[", "Times", "]"}], ",", "All", ",", 
   RowBox[{"Heads", "->", "True"}]}], "]"}]], "Input",
 CellLabel->"In[36]:=",
 CellID->588694242,ExpressionUUID->"7a83c442-d251-47b5-b5a1-d3bb25d22f13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Inactive", "[", "Times", "]"}], "}"}]], "Output",
 CellLabel->"Out[36]=",
 CellID->328151388,ExpressionUUID->"efbd91c7-c11c-4ea0-b7d3-33a30effc388"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["q", "2"], 
       TagBox["\[Times]",
        "InactiveToken",
        BaseStyle->"Inactive",
        SyntaxForm->"a*b"], 
       SuperscriptBox["a", "2"]}]], ",", 
     RowBox[{"Inactive", "[", "Times", "]"}], ",", "All", ",", 
     RowBox[{"Heads", "->", "True"}]}], "]"}], ",", 
   RowBox[{"Inactive", "[", "Times", "]"}]}], "]"}]], "Input",
 CellLabel->"In[38]:=",
 CellID->148597441,ExpressionUUID->"cd28b2b7-65ae-400a-a093-7dad2334a9f4"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[38]=",
 CellID->250828651,ExpressionUUID->"909173d8-b455-4248-a8c9-71120bd7a5b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   SuperscriptBox["b", "2"], ",", 
   RowBox[{"Inactive", "[", "Times", "]"}], ",", "All", ",", 
   RowBox[{"Heads", "->", "True"}]}], "]"}]], "Input",
 CellLabel->"In[37]:=",
 CellID->328691234,ExpressionUUID->"a0a51258-c844-46c5-9e06-1d9327ee7bf8"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[37]=",
 CellID->230939523,ExpressionUUID->"1b4accef-4fc1-4457-a47b-ee1df3cf1600"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{
     SuperscriptBox["b", "2"], ",", 
     RowBox[{"Inactive", "[", "Times", "]"}], ",", "All", ",", 
     RowBox[{"Heads", "->", "True"}]}], "]"}], ",", 
   RowBox[{"Inactive", "[", "Times", "]"}]}], "]"}]], "Input",
 CellLabel->"In[39]:=",
 CellID->236727458,ExpressionUUID->"9f2a93c1-fd83-4e4d-8b48-a9fed68f6d1c"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[39]=",
 CellID->592692198,ExpressionUUID->"d34ec792-8a1c-4bb7-9762-433b0f04f7be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["q", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["a", "2"]}]], "]"}]], "Input",
 CellLabel->"In[33]:=",
 CellID->2559059,ExpressionUUID->"c510437a-bcf3-4366-bd8b-1a3c2e50f76b"],

Cell["Inactive[Times][q^2, a^2]^(-1)", "Output",
 CellLabel->"Out[33]//InputForm=",
 CellID->280959356,ExpressionUUID->"2f2751b3-7d72-4276-9597-60b735135929"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["b", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["c", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["d", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["z", "2"]}], ",", 
   RowBox[{
    RowBox[{"Inactive", "[", "Times", "]"}], "[", 
    RowBox[{"numerator", ":", 
     RowBox[{"Repeated", "[", 
      RowBox[{"x_", "/;", 
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"x", ",", 
            RowBox[{"Inactive", "[", "Times", "]"}], ",", "All", ",", 
            RowBox[{"Heads", "->", "True"}]}], "]"}], ",", 
          RowBox[{"Inactive", "[", "Times", "]"}]}], "]"}]}]}], "]"}]}], 
    "]"}]}], "]"}]], "Input",
 CellLabel->"In[45]:=",
 CellID->322886675,ExpressionUUID->"431fe04e-2754-4e57-90db-d8383a7d7144"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[45]=",
 CellID->215218184,ExpressionUUID->"135ec8d8-f0d6-4014-97fd-0186555bf35f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["b", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["c", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["d", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["z", "2"]}], ",", 
   RowBox[{
    RowBox[{"Inactive", "[", "Times", "]"}], "[", 
    RowBox[{"numerator", ":", 
     RowBox[{"Repeated", "[", "x_", "]"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[46]:=",
 CellID->284468844,ExpressionUUID->"059dd3a9-ee61-4444-b26a-07a3cc3e54fc"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[46]=",
 CellID->300512079,ExpressionUUID->"0835eedc-ced7-4500-a32b-1b1d5d30b0d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["b", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["c", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["d", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["z", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["q", "2"], 
      TagBox["\[Times]",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"a*b"], 
      SuperscriptBox["a", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Inactive", "[", "Times", "]"}], "[", 
     RowBox[{"OrderlessPatternSequence", "[", 
      RowBox[{
       RowBox[{"numerator", ":", 
        RowBox[{"Repeated", "[", 
         RowBox[{"x_", "/;", 
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"x", ",", 
               RowBox[{"Inactive", "[", "Times", "]"}], ",", "All", ",", 
               RowBox[{"Heads", "->", "True"}]}], "]"}], ",", 
             RowBox[{"Inactive", "[", "Times", "]"}]}], "]"}]}]}], "]"}]}], 
       ",", 
       RowBox[{"denominator", ":", 
        RowBox[{"Repeated", "[", 
         RowBox[{"x_", "/;", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"x", ",", 
              RowBox[{"Inactive", "[", "Times", "]"}], ",", "All", ",", 
              RowBox[{"Heads", "->", "True"}]}], "]"}], ",", 
            RowBox[{"Inactive", "[", "Times", "]"}]}], "]"}]}], "]"}]}]}], 
      "]"}], "]"}], ":>", 
    RowBox[{"(", 
     RowBox[{"<|", 
      RowBox[{"\"\<denominator\>\"", "->", 
       RowBox[{"{", "denominator", "}"}]}], "|>"}], ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[43]:=",
 CellID->20379994,ExpressionUUID->"4f5311fe-d663-4bf8-b6fb-f51d10a2b9b5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["b", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["c", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["d", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["z", "2"], 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["q", "2"], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    SuperscriptBox["a", "2"]}]]}]], "Output",
 CellLabel->"Out[43]=",
 CellID->647092413,ExpressionUUID->"2d9327b2-4dae-4956-a98e-58a4c8fac1d5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"RearrangeFunction2", ",", 
   RowBox[{"{", 
    RowBox[{"HoldFirst", ",", "Listable"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"RearrangeFunction2", "[", "input_", "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "firstoutput", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"firstoutput", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Inactivate", "[", 
         RowBox[{"input", ",", "Times"}], "]"}], "//.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Inactive", "[", "Times", "]"}], "[", 
            RowBox[{"i", ":", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], "\n", ":>", 
           RowBox[{"NonCommutativeMultiply", "@@", 
            RowBox[{"PositionQInFrontOfList", "[", 
             RowBox[{"{", "i", "}"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Inactive", "[", "Times", "]"}], "[", 
            RowBox[{"OrderlessPatternSequence", "[", "\n", 
             RowBox[{
              RowBox[{"n", ":", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "^", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]}], "|", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Denominator", "[", "#1", "]"}], "===", "1"}], 
                    "&"}], ")"}]}]}], ")"}], ".."}], ")"}]}], ",", 
              RowBox[{"d", ":", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "^", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]}], "|", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Denominator", "[", "#1", "]"}], "=!=", "1"}], 
                    "&"}], ")"}]}]}], ")"}], ".."}], ")"}]}]}], "]"}], "]"}], 
           ":>", "\n", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "@@", 
               RowBox[{"PositionQInFrontOfList", "[", 
                RowBox[{"{", "n", "}"}], "]"}]}], "/.", "\n", " ", 
              RowBox[{
               RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], ":>", 
               "x"}]}], ")"}], "/", "\n", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "@@", 
               RowBox[{"PositionQInFrontOfList", "[", 
                RowBox[{"Denominator", "/@", 
                 RowBox[{"{", "d", "}"}]}], "]"}]}], "/.", " ", 
              RowBox[{
               RowBox[{"NonCommutativeMultiply", "[", "y_", "]"}], ":>", 
               "y"}]}], ")"}]}]}], ",", "\n", " ", "\n", 
          RowBox[{
           RowBox[{"NonCommutativeMultiply", "[", 
            RowBox[{"i", ":", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], ":>", 
           RowBox[{"Times", "[", "i", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"u", ":", 
             RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], "/;", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"u", ",", 
               RowBox[{"q", "|", 
                RowBox[{"q", "^", "_"}]}]}], "]"}], "!=", 
             RowBox[{"{", "}"}]}]}], ":>", "\n", 
           RowBox[{"NonCommutativeMultiply", "@@", 
            RowBox[{"PositionQInFrontOfList", "[", 
             RowBox[{"List", "@@", "u"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Inactive", "[", "Times", "]"}], "[", "y__", "]"}], ":>", 
           RowBox[{"NonCommutativeMultiply", "[", "y", "]"}]}]}], "}"}]}], "/.",
        " ", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Times", "]"}], "[", 
         RowBox[{"i", ":", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], ":>", 
        RowBox[{"Times", "[", "i", "]"}]}]}]}], ";", 
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"firstoutput", "/.", " ", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"OrderlessPatternSequence", "[", 
               RowBox[{
                RowBox[{"numbers", ":", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], ",", 
                RowBox[{"symbols", ":", 
                 RowBox[{"(", 
                  RowBox[{"_Symbol", "..."}], ")"}]}], ",", 
                RowBox[{"powers", ":", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "^", "_."}], ".."}], ")"}]}]}], "]"}], "\n", "**", 
              RowBox[{"(", 
               RowBox[{"plus", ":", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"+", "__"}], ")"}], "..."}], ")"}]}], ")"}]}], ":>", 
             RowBox[{
              RowBox[{"Times", "@@", "numbers"}], " ", 
              RowBox[{"NonCommutativeMultiply", "@@", 
               RowBox[{"PositionQInFrontOfList", "[", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", "symbols", "}"}], ",", 
                  RowBox[{"{", "powers", "}"}], ",", 
                  RowBox[{"{", "plus", "}"}]}], "]"}], "]"}]}]}]}]}], ",", 
           "\n", 
           RowBox[{"NonCommutativeMultiply", "[", "]"}], ",", "All"}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], ":>", "x"}], 
         ",", "All"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "[", 
          RowBox[{
           RowBox[{"nonqs", ":", 
            RowBox[{"Repeated", "[", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", "#", "]"}], "==", "\n", "Symbol"}], "&&", 
                 RowBox[{"#", "=!=", "q"}]}], "&"}], ")"}]}], "]"}]}], ",", 
           RowBox[{"qs", ":", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "[", 
               RowBox[{"q", ",", "_"}], "]"}], ",", "_"}], "]"}]}]}], "]"}], ":>", 
         RowBox[{"NonCommutativeMultiply", "[", 
          RowBox[{"qs", ",", "nonqs"}], "]"}]}], "}"}], ",", "All"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellLabel->"In[50]:=",
 CellID->471136429,ExpressionUUID->"21ee101e-a3a8-4f14-a5b7-72a1d6253748"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction2", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], "]"}]], "Input",
 CellLabel->"In[52]:=",
 CellID->396067602,ExpressionUUID->"37b1258b-5ebb-46fb-a9bc-7e6f8da57a70"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"b", "**", "c", "**", "d", "**", "z"}], ")"}], "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"q", "**", "a"}], ")"}], "2"]]], "Output",
 CellLabel->"Out[52]=",
 CellID->91876342,ExpressionUUID->"d5063990-1c42-4265-a57c-7669168239c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inactivate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", "Times"}], 
  "]"}]], "Input",
 CellLabel->"In[53]:=",
 CellID->737919,ExpressionUUID->"7cbfbbf7-3317-4633-995f-59bcb763a0e8"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", 
      TagBox["\[Times]",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"a*b"], "c", 
      TagBox["\[Times]",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"a*b"], "d", 
      TagBox["\[Times]",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"a*b"], "z"}], ")"}], 
    TagBox["\[Times]",
     "InactiveToken",
     BaseStyle->"Inactive",
     SyntaxForm->"a*b"], 
    FractionBox["1", 
     RowBox[{"q", 
      TagBox["\[Times]",
       "InactiveToken",
       BaseStyle->"Inactive",
       SyntaxForm->"a*b"], "a"}]]}], ")"}], "2"]], "Output",
 CellLabel->"Out[53]=",
 CellID->65017555,ExpressionUUID->"e7c93c68-1f93-4eac-9af1-a05a192c747f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Inactivate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", "Times"}],
      "]"}], "//.", 
    RowBox[{"{", 
     RowBox[{"EchoEvaluation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Inactive", "[", "Times", "]"}], "[", 
        RowBox[{"i", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], "\n", ":>", 
       RowBox[{
        RowBox[{"Inactive", "[", "Times", "]"}], "@@", 
        RowBox[{"PositionQInFrontOfList", "[", 
         RowBox[{"{", "i", "}"}], "]"}]}]}], "]"}], "}"}]}], ")"}], ",", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Inactive", "[", "Times", "]"}], "[", 
      RowBox[{"OrderlessPatternSequence", "[", "\n", 
       RowBox[{
        RowBox[{"n", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"_", "^", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]}], "|", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Denominator", "[", "#1", "]"}], "===", "1"}], "&"}],
                ")"}]}]}], ")"}], ".."}], ")"}]}], ",", 
        RowBox[{"d", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"_", "^", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]}], "|", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Denominator", "[", "#1", "]"}], "=!=", "1"}], "&"}],
                ")"}]}]}], ")"}], ".."}], ")"}]}]}], "]"}], "]"}], ":>", "\n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NonCommutativeMultiply", "@@", 
         RowBox[{"PositionQInFrontOfList", "[", 
          RowBox[{"{", "n", "}"}], "]"}]}], "/.", "\n", " ", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], ":>", "x"}]}], 
       ")"}], "/", "\n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NonCommutativeMultiply", "@@", 
         RowBox[{"PositionQInFrontOfList", "[", 
          RowBox[{"Denominator", "/@", 
           RowBox[{"{", "d", "}"}]}], "]"}]}], "/.", " ", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "[", "y_", "]"}], ":>", "y"}]}], 
       ")"}]}]}], ",", "\n", " ", "\n", 
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"i", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], ":>", 
     RowBox[{"Times", "[", "i", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"u", ":", 
       RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], "/;", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"u", ",", 
         RowBox[{"q", "|", 
          RowBox[{"q", "^", "_"}]}]}], "]"}], "!=", 
       RowBox[{"{", "}"}]}]}], ":>", "\n", 
     RowBox[{"NonCommutativeMultiply", "@@", 
      RowBox[{"PositionQInFrontOfList", "[", 
       RowBox[{"List", "@@", "u"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Inactive", "[", "Times", "]"}], "[", "y__", "]"}], ":>", 
     RowBox[{"NonCommutativeMultiply", "[", "y", "]"}]}]}], "}"}]}]], "Input",
 CellLabel->"In[56]:=",
 CellID->7081445,ExpressionUUID->"358492fd-be8e-4c62-b9ed-fab0068babb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Inactive", "[", "Times", "]"}], "[", 
   RowBox[{"i", ":", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], "\[RuleDelayed]", 
  RowBox[{
   RowBox[{"Inactive", "[", "Times", "]"}], "@@", 
   RowBox[{"PositionQInFrontOfList", "[", 
    RowBox[{"{", "i", "}"}], "]"}]}]}]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "1e264c9a-d32f-444c-996b-0bb1b507d08a"},
       None}, "HyperlinkDefault"]]],
 CellTags->"407df68d-e655-417b-9ff2-0449c81d58ef",
 CellID->585255656,ExpressionUUID->"104d456c-ed20-4f85-a700-42712bc8cd17"],

Cell[BoxData[
 TagBox[
  TooltipBox[
   RowBox[{
    RowBox[{
     RowBox[{"Inactive", "[", "Times", "]"}], "[", 
     RowBox[{"i", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], "\[RuleDelayed]", 
    RowBox[{
     RowBox[{"Inactive", "[", "Times", "]"}], "@@", 
     RowBox[{"PositionQInFrontOfList", "[", 
      RowBox[{"{", "i", "}"}], "]"}]}]}],
   RowBox[{
     RowBox[{
       RowBox[{"Inactive", "[", "Times", "]"}], "[", 
       RowBox[{"i", ":", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{
       RowBox[{"Inactive", "[", "Times", "]"}], "@@", 
       RowBox[{"PositionQInFrontOfList", "[", 
         RowBox[{"{", "i", "}"}], "]"}]}]}]],
  Annotation[#, Inactive[Times][
     Pattern[$CellContext`i, 
      Repeated[
       PatternTest[
        Blank[], AtomQ]]]] :> Apply[
     Inactive[Times], 
     PeterBurbery`BasicHypergeometricFunctions`PositionQInFrontOfList[{$\
CellContext`i}]], "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "407df68d-e655-417b-9ff2-0449c81d58ef"},
       None}, "HyperlinkDefault"]]],
 CellTags->"1e264c9a-d32f-444c-996b-0bb1b507d08a",
 CellID->257068581,ExpressionUUID->"db7c6fb7-bb00-4871-a8a4-db62aeb14ff1"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"b", 
     TagBox["\[Times]",
      "InactiveToken",
      BaseStyle->"Inactive",
      SyntaxForm->"a*b"], "c", 
     TagBox["\[Times]",
      "InactiveToken",
      BaseStyle->"Inactive",
      SyntaxForm->"a*b"], "d", 
     TagBox["\[Times]",
      "InactiveToken",
      BaseStyle->"Inactive",
      SyntaxForm->"a*b"], "z"}], ")"}], "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"q", 
     TagBox["\[Times]",
      "InactiveToken",
      BaseStyle->"Inactive",
      SyntaxForm->"a*b"], "a"}], ")"}], "2"]]], "Output",
 CellLabel->"Out[56]=",
 CellID->362255658,ExpressionUUID->"0b6a67ed-4aa9-4130-9665-a1d90348d6c8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"RearrangeFunction2", ",", 
   RowBox[{"{", 
    RowBox[{"HoldFirst", ",", "Listable"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"RearrangeFunction2", "[", "input_", "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "firstoutput", "}"}], ",", 
    RowBox[{
     RowBox[{"firstoutput", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Inactivate", "[", 
         RowBox[{"input", ",", "Times"}], "]"}], "//.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Inactive", "[", "Times", "]"}], "[", 
            RowBox[{"i", ":", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], ":>", 
           RowBox[{"NonCommutativeMultiply", "@@", 
            RowBox[{"PositionQInFrontOfList", "[", 
             RowBox[{"{", "i", "}"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Inactive", "[", "Times", "]"}], "[", 
            RowBox[{"OrderlessPatternSequence", "[", 
             RowBox[{
              RowBox[{"n", ":", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "^", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]}], "|", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NumeratorTermQ", "[", "#1", "]"}], "&"}], 
                    ")"}]}]}], ")"}], ".."}], ")"}]}], ",", 
              RowBox[{"d", ":", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "^", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]}], "|", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DenominatorTermQ", "[", "#1", "]"}], "&"}], 
                    ")"}]}]}], ")"}], ".."}], ")"}]}]}], "]"}], "]"}], ":>", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "@@", 
               RowBox[{"PositionQInFrontOfList", "[", 
                RowBox[{"{", "n", "}"}], "]"}]}], "/.", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], ":>", 
               "x"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "@@", 
               RowBox[{"PositionQInFrontOfList", "[", 
                RowBox[{"Denominator", "/@", 
                 RowBox[{"{", "d", "}"}]}], "]"}]}], "/.", " ", 
              RowBox[{
               RowBox[{"NonCommutativeMultiply", "[", "y_", "]"}], ":>", 
               "y"}]}], ")"}]}]}], ",", 
          RowBox[{
           RowBox[{"NonCommutativeMultiply", "[", 
            RowBox[{"i", ":", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], ":>", 
           RowBox[{"Times", "[", "i", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"u", ":", 
             RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], "/;", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"u", ",", 
               RowBox[{"q", "|", 
                RowBox[{"q", "^", "_"}]}]}], "]"}], "!=", 
             RowBox[{"{", "}"}]}]}], ":>", 
           RowBox[{"NonCommutativeMultiply", "@@", 
            RowBox[{"PositionQInFrontOfList", "[", 
             RowBox[{"List", "@@", "u"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Inactive", "[", "Times", "]"}], "[", "y__", "]"}], ":>", 
           RowBox[{"NonCommutativeMultiply", "[", "y", "]"}]}]}], "}"}]}], "/.",
        " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Times", "]"}], "[", 
         RowBox[{"i", ":", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], ":>", 
        RowBox[{"Times", "[", "i", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"firstoutput", "/.", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"OrderlessPatternSequence", "[", 
               RowBox[{
                RowBox[{"numbers", ":", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], ",", 
                RowBox[{"symbols", ":", 
                 RowBox[{"(", 
                  RowBox[{"_Symbol", "..."}], ")"}]}], ",", 
                RowBox[{"powers", ":", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"_", "^", "_."}], ".."}], ")"}]}]}], "]"}], "**", 
              RowBox[{"(", 
               RowBox[{"plus", ":", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"+", "__"}], ")"}], "..."}], ")"}]}], ")"}]}], ":>", 
             RowBox[{
              RowBox[{"Times", "@@", "numbers"}], " ", 
              RowBox[{"NonCommutativeMultiply", "@@", 
               RowBox[{"PositionQInFrontOfList", "[", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", "symbols", "}"}], ",", 
                  RowBox[{"{", "powers", "}"}], ",", 
                  RowBox[{"{", "plus", "}"}]}], "]"}], "]"}]}]}]}]}], ",", 
           RowBox[{"NonCommutativeMultiply", "[", "]"}], ",", "All"}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], ":>", "x"}], 
         ",", "All"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "[", 
          RowBox[{
           RowBox[{"nonqs", ":", 
            RowBox[{"Repeated", "[", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", "#", "]"}], "==", "Symbol"}], "&&", 
                 RowBox[{"#", "=!=", "q"}]}], "&"}], ")"}]}], "]"}]}], ",", 
           RowBox[{"qs", ":", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "[", 
               RowBox[{"q", ",", "_"}], "]"}], ",", "_"}], "]"}]}]}], "]"}], ":>", 
         RowBox[{"NonCommutativeMultiply", "[", 
          RowBox[{"qs", ",", "nonqs"}], "]"}]}], "}"}], ",", "All"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellLabel->"In[14]:=",
 CellID->368103848,ExpressionUUID->"e0555286-04b9-4743-b069-459394db6064"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction2", "[", 
  RowBox[{"a", " ", "b", " ", "c", " ", "d"}], " ", "]"}]], "Input",
 CellLabel->"In[85]:=",
 CellID->75949663,ExpressionUUID->"14f9af16-385d-483d-8c6a-4795bd0c3d99"],

Cell[BoxData[
 RowBox[{"a", "**", "b", "**", "c", "**", "d"}]], "Output",
 CellLabel->"Out[85]=",
 CellID->16251515,ExpressionUUID->"f2987302-9878-42ac-aed3-b5ec0289f8ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction2", "[", 
  RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", "q"}], "]"}]], "Input",
 CellLabel->"In[86]:=",
 CellID->53162270,ExpressionUUID->"1d6a75e6-46bb-40b7-ab58-6305ec9610be"],

Cell[BoxData[
 RowBox[{"q", "**", "a", "**", "b", "**", "c", "**", "d"}]], "Output",
 CellLabel->"Out[86]=",
 CellID->402951547,ExpressionUUID->"85dfb224-7cb4-4590-b054-3c2835e0e985"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction2", "[", 
  RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
   SuperscriptBox["q", "n"]}], "]"}]], "Input",
 CellLabel->"In[87]:=",
 CellID->229526090,ExpressionUUID->"1bcc0602-d555-4b18-8140-385588c0ea13"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["q", "n"], "**", "a", "**", "b", "**", "c", "**", 
  "d"}]], "Output",
 CellLabel->"Out[87]=",
 CellID->798424520,ExpressionUUID->"efc4a112-1768-49ea-bbb2-559ccad3daa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction2", "[", 
  RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
   SuperscriptBox["q", 
    RowBox[{"n", "-", "1"}]]}], "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->224954957,ExpressionUUID->"33ecf1d7-c60b-45ff-911d-6dd7a188cedd"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "**", "a", "**", "b", "**", "c", "**", 
  "d"}]], "Output",
 CellLabel->"Out[16]=",
 CellID->454449641,ExpressionUUID->"fe9312a2-e4e7-41f6-8ed2-7c8d81964d9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Inactivate", "[", 
    RowBox[{
     RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
      SuperscriptBox["q", 
       RowBox[{"n", "-", "1"}]]}], ",", "Times"}], "]"}], "//.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Times", "]"}], "[", 
       RowBox[{"i", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], ":>", 
      RowBox[{"NonCommutativeMultiply", "@@", 
       RowBox[{"PositionQInFrontOfList", "[", 
        RowBox[{"{", "i", "}"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Times", "]"}], "[", 
       RowBox[{"OrderlessPatternSequence", "[", 
        RowBox[{
         RowBox[{"n", ":", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "^", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]}], "|", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Denominator", "[", "#1", "]"}], "===", "1"}], 
                 "&"}], ")"}]}]}], ")"}], ".."}], ")"}]}], ",", 
         RowBox[{"d", ":", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "^", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]}], "|", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Denominator", "[", "#1", "]"}], "=!=", "1"}], 
                 "&"}], ")"}]}]}], ")"}], ".."}], ")"}]}]}], "]"}], "]"}], ":>", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "@@", 
          RowBox[{"PositionQInFrontOfList", "[", 
           RowBox[{"{", "n", "}"}], "]"}]}], "/.", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], ":>", "x"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "@@", 
          RowBox[{"PositionQInFrontOfList", "[", 
           RowBox[{"Denominator", "/@", 
            RowBox[{"{", "d", "}"}]}], "]"}]}], "/.", " ", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", "y_", "]"}], ":>", "y"}]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"NonCommutativeMultiply", "[", 
       RowBox[{"i", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], ":>", 
      RowBox[{"Times", "[", "i", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u", ":", 
        RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], "/;", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{"u", ",", 
          RowBox[{"q", "|", 
           RowBox[{"q", "^", "_"}]}]}], "]"}], "!=", 
        RowBox[{"{", "}"}]}]}], ":>", 
      RowBox[{"NonCommutativeMultiply", "@@", 
       RowBox[{"PositionQInFrontOfList", "[", 
        RowBox[{"List", "@@", "u"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Times", "]"}], "[", "y__", "]"}], ":>", 
      RowBox[{"NonCommutativeMultiply", "[", "y", "]"}]}]}], "}"}]}], "/.", 
  " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Inactive", "[", "Times", "]"}], "[", 
    RowBox[{"i", ":", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], ":>", 
   RowBox[{"Times", "[", "i", "]"}]}]}]], "Input",
 CellLabel->"In[89]:=",
 CellID->28050259,ExpressionUUID->"8b4b56df-a3e5-452b-9c70-d582d59e68a0"],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", "**", "b", "**", "c", "**", "d"}], "q"]], "Output",
 CellLabel->"Out[89]=",
 CellID->490810363,ExpressionUUID->"b38e704b-4a3d-4a98-989c-34f881114252"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactivate", "[", 
   RowBox[{
    RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
     SuperscriptBox["q", 
      RowBox[{"n", "-", "1"}]]}], ",", "Times"}], "]"}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Inactive", "[", "Times", "]"}], "[", 
     RowBox[{"OrderlessPatternSequence", "[", 
      RowBox[{
       RowBox[{"n", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"_", "^", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]}], "|", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Denominator", "[", "#1", "]"}], "===", "1"}], "&"}], 
              ")"}]}]}], ")"}], ".."}], ")"}]}], ",", 
       RowBox[{"d", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"_", "^", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]}], "|", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Denominator", "[", "#1", "]"}], "=!=", "1"}], "&"}], 
              ")"}]}]}], ")"}], ".."}], ")"}]}]}], "]"}], "]"}], ":>", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{"{", "d", "}"}]}], "}"}]}], "}"}]}]], "Input",
 CellLabel->"In[94]:=",
 CellID->404350346,ExpressionUUID->"1c2c1275-4f5d-40e9-9de5-29cee35164df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    SuperscriptBox["q", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[94]=",
 CellID->218827964,ExpressionUUID->"bc3b8eb4-7545-438c-be39-5d5cfedf1c26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inactivate", "[", 
  RowBox[{
   RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
    SuperscriptBox["q", 
     RowBox[{"n", "-", "1"}]]}], ",", "Times"}], "]"}]], "Input",
 CellLabel->"In[95]:=",
 CellID->690671388,ExpressionUUID->"4dc2b004-a66c-4281-8531-fc6dc77cd526"],

Cell[BoxData[
 RowBox[{"a", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], "b", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], "c", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], "d", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellLabel->"Out[95]=",
 CellID->763570026,ExpressionUUID->"8505fd7b-8ce9-492d-ad4e-cfa1b68fe834"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   SuperscriptBox["q", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], ",", 
   RowBox[{"TrueQ", "[", 
    SuperscriptBox["_", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]], "]"}]}], "]"}]], "Input",
 CellLabel->"In[96]:=",
 CellID->149289639,ExpressionUUID->"a4066e0c-2ad9-4a8c-a1e7-957557721db1"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[96]=",
 CellID->626446846,ExpressionUUID->"b6fadd1e-d000-40c0-9050-4f2474ee9411"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   SuperscriptBox["q", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], ",", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Denominator", "[", "#1", "]"}], "=!=", "1"}], "&"}], 
     ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[97]:=",
 CellID->477936917,ExpressionUUID->"f77d5609-f0a5-4741-8c06-8efaf139c695"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[97]=",
 CellID->125609227,ExpressionUUID->"8e229b96-3fc3-4686-b26f-657acd239245"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CloudGet", "[", 
  "\"\<https://www.wolframcloud.com/obj/burbery1/cloudfunctions/\
NumeratorTermQ\>\"", "]"}]], "Input",
 CellLabel->"In[98]:=",
 CellID->29177797,ExpressionUUID->"ed79a72d-971f-4f8c-9804-866fc7fa8f61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumeratorTermQ", "[", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "]"}]], "Input",
 CellLabel->"In[99]:=",
 CellID->669767948,ExpressionUUID->"250be2f2-8ad0-4efd-b606-8b2c0b0d9947"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[99]=",
 CellID->304190463,ExpressionUUID->"1762b7de-92c2-42f2-b83b-c70628067150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactivate", "[", 
   RowBox[{
    RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
     SuperscriptBox["q", 
      RowBox[{"n", "-", "1"}]]}], ",", "Times"}], "]"}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Inactive", "[", "Times", "]"}], "[", 
     RowBox[{"OrderlessPatternSequence", "[", 
      RowBox[{
       RowBox[{"n", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"_", "^", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]}], "|", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"NumeratorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}], 
           ")"}], ".."}], ")"}]}], ",", 
       RowBox[{"d", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"_", "^", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]}], "|", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"DenominatorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}],
            ")"}], ".."}], ")"}]}]}], "]"}], "]"}], ":>", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{"{", "d", "}"}]}], "}"}]}], "}"}]}]], "Input",
 CellLabel->"In[32]:=",
 CellID->171821158,ExpressionUUID->"712a2576-2ac3-4f68-9f65-6632b7939ae2"],

Cell[BoxData[
 RowBox[{"a", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], "b", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], "c", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], "d", 
  TagBox["\[Times]",
   "InactiveToken",
   BaseStyle->"Inactive",
   SyntaxForm->"a*b"], 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellLabel->"Out[32]=",
 CellID->31127353,ExpressionUUID->"7c77c2eb-162b-48ba-b3aa-03b5782f42d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeFunction2", "[", 
  RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
   SuperscriptBox["q", 
    RowBox[{"n", "-", "1"}]]}], "]"}]], "Input",
 CellLabel->"In[105]:=",
 CellID->56910265,ExpressionUUID->"67830dbc-942f-4041-83ca-5d832cbcf0e1"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "**", "a", "**", "b", "**", "c", "**", 
  "d"}]], "Output",
 CellLabel->"Out[105]=",
 CellID->1010161959,ExpressionUUID->"16f5ba4c-50d5-424a-9a51-d30e9dbdfebe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RearrangeExpression", "[", 
  RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
   SuperscriptBox["q", 
    RowBox[{"n", "-", "1"}]]}], "]"}]], "Input",
 CellLabel->"In[35]:=",
 CellID->93964102,ExpressionUUID->"61f47128-ddcd-4934-a0d0-7bcb36a78241"],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", "**", "b", "**", "c", "**", "d"}], "q"]], "Output",
 CellLabel->"Out[35]=",
 CellID->122682045,ExpressionUUID->"46e501f7-ae1b-4401-a27f-e97d35282ccc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "firstoutput", "}"}], ",", " ", "\n", " ", 
   RowBox[{
    RowBox[{"firstoutput", " ", "=", " ", "\n", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactivate", "[", 
        RowBox[{
         RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
          SuperscriptBox["q", 
           RowBox[{"n", "-", "1"}]]}], ",", " ", "\n", "     ", "Times"}], 
        "]"}], " ", "//.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", 
           RowBox[{"i", " ", ":", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "?", "AtomQ"}], " ", ".."}], ")"}]}], "]"}], " ", ":>",
           " ", "\n", "      ", 
          RowBox[{"NonCommutativeMultiply", " ", "@@", " ", 
           RowBox[{"PositionQInFrontOfList", "[", 
            RowBox[{"{", "i", "}"}], "]"}]}]}], ",", " ", "\n", "     ", 
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", "\n", "       ", 
           RowBox[{"OrderlessPatternSequence", "[", "\n", "        ", 
            RowBox[{
             RowBox[{"n", " ", ":", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"_", "^", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", " ", ">", " ", "0"}], " ", "&"}], ")"}]}]}],
                   " ", "|", " ", 
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NumeratorTermQ", "[", "#1", "]"}], " ", "&"}], 
                    ")"}]}]}], ")"}], " ", ".."}], ")"}]}], ",", " ", "\n", 
             "        ", 
             RowBox[{"d", " ", ":", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"_", "^", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#1", " ", "<", " ", "\n", "                  ", "0"}], 
                    " ", "&"}], ")"}]}]}], " ", "|", " ", 
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DenominatorTermQ", "[", "#1", "]"}], " ", "&"}], 
                    ")"}]}]}], ")"}], " ", ".."}], ")"}]}]}], "]"}], "]"}], 
          " ", ":>", " ", 
          RowBox[{
           RowBox[{"\\\n", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", " ", "@@", " ", 
               RowBox[{"PositionQInFrontOfList", "[", 
                RowBox[{"{", "n", "}"}], "]"}]}], " ", "/.", "\n", 
              "         ", "\n", "         ", 
              RowBox[{
               RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], " ", ":>", 
               " ", "x"}]}], ")"}]}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "NonCommutativeMultiply", " ", "@@", " ", "\n", "          ", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{"Denominator", " ", "/@", " ", 
                RowBox[{"{", "d", "}"}]}], "]"}]}], " ", "/.", " ", "\n", 
             "         ", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "[", "y_", "]"}], " ", ":>", 
              " ", "y"}]}], ")"}]}]}], ",", " ", "\n", "     ", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", 
           RowBox[{"i", " ", ":", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "?", "NumericQ"}], " ", ".."}], ")"}]}], "]"}], 
          " ", ":>", " ", 
          RowBox[{"Times", "[", "i", "]"}]}], ",", " ", "\n", "     ", 
         RowBox[{
          RowBox[{
           RowBox[{"u", " ", ":", " ", 
            RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], " ", "/;", 
           " ", 
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"u", ",", " ", 
              RowBox[{"q", " ", "|", " ", 
               RowBox[{"q", "^", "_"}]}]}], "]"}], " ", "!=", " ", 
            RowBox[{"{", "}"}]}]}], " ", ":>", " ", "\n", "      ", 
          RowBox[{"NonCommutativeMultiply", " ", "@@", " ", 
           RowBox[{"PositionQInFrontOfList", "[", 
            RowBox[{"List", " ", "@@", " ", "u"}], "]"}]}]}], ",", " ", "\n", 
         "     ", 
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", "y__", "]"}], " ", ":>",
           " ", 
          RowBox[{"NonCommutativeMultiply", "[", "y", "]"}]}]}], "}"}]}], " ",
       "/.", " ", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"Inactive", "[", "Times", "]"}], "[", 
        RowBox[{"i", " ", ":", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "NumericQ"}], " ", ".."}], ")"}]}], "]"}], " ", ":>",
        " ", 
       RowBox[{"Times", "[", "i", "]"}]}]}]}], ";", "\n", " ", 
    RowBox[{"Replace", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"firstoutput", " ", "/.", " ", "\n", "     ", 
           RowBox[{
            RowBox[{
             RowBox[{"OrderlessPatternSequence", "[", 
              RowBox[{
               RowBox[{"numbers", " ", ":", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"_", "?", "NumericQ"}], " ", ".."}], ")"}]}], ",", 
               " ", "\n", "        ", 
               RowBox[{"symbols", " ", ":", " ", 
                RowBox[{"(", 
                 RowBox[{"_Symbol", " ", "..."}], ")"}]}], ",", " ", "\n", 
               "        ", 
               RowBox[{"powers", " ", ":", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"_", "^", "_."}], " ", ".."}], ")"}]}]}], "]"}], 
             " ", "**", " ", 
             RowBox[{"(", 
              RowBox[{"plus", " ", ":", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"+", "__"}], ")"}], " ", "..."}], ")"}]}], ")"}]}], 
            " ", ":>", " ", "\n", "      ", 
            RowBox[{
             RowBox[{"Times", " ", "@@", " ", "numbers"}], " ", 
             RowBox[{
             "NonCommutativeMultiply", " ", "@@", " ", "\n", "        ", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "symbols", "}"}], ",", " ", 
                 RowBox[{"{", "powers", "}"}], ",", " ", 
                 RowBox[{"{", "plus", "}"}]}], "]"}], "]"}]}]}]}]}], ",", " ",
           "\n", "    ", 
          RowBox[{"NonCommutativeMultiply", "[", "]"}], ",", " ", "All"}], 
         "]"}], ",", " ", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], " ", ":>", " ", 
         "x"}], ",", " ", "\n", "   ", "All"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NonCommutativeMultiply", "[", "\n", "     ", 
         RowBox[{
          RowBox[{"nonqs", " ", ":", " ", 
           RowBox[{"Repeated", "[", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Head", "[", "#", "]"}], " ", "==", " ", "Symbol"}], 
                " ", "&&", " ", 
                RowBox[{"#", " ", "=!=", " ", "q"}]}], " ", "&"}], ")"}]}], 
            "]"}]}], ",", " ", "\n", "     ", 
          RowBox[{"qs", " ", ":", " ", 
           RowBox[{"Power", "[", 
            RowBox[{
             RowBox[{"NonCommutativeMultiply", "[", 
              RowBox[{"q", ",", " ", "_"}], "]"}], ",", " ", "_"}], "]"}]}]}],
          "]"}], " ", ":>", " ", "\n", "    ", 
        RowBox[{"NonCommutativeMultiply", "[", 
         RowBox[{"qs", ",", " ", "nonqs"}], "]"}]}], "}"}], ",", " ", "All"}],
      "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->21969815,ExpressionUUID->"0cacd8f5-23dc-4ea0-ac55-a8d2c46faef8"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "**", "a", "**", "b", "**", "c", "**", 
  "d"}]], "Output",
 CellLabel->"Out[6]=",
 CellID->157418928,ExpressionUUID->"e67930fe-c619-44f7-89b3-a87489619bf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{
   "{", "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", 
    "}"}], ",", 
   RowBox[{
    RowBox[{
    "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactivate", "[", 
        RowBox[{
         RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
          SuperscriptBox["q", 
           RowBox[{"n", "-", "1"}]]}], ",", "Times"}], "]"}], "//.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", 
           RowBox[{"PeterBurbery`BasicHypergeometricFunctions`Private`i", ":", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"NonCommutativeMultiply", "@@", 
           RowBox[{"PositionQInFrontOfList", "[", 
            RowBox[{
            "{", "PeterBurbery`BasicHypergeometricFunctions`Private`i", "}"}],
             "]"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", 
           RowBox[{"OrderlessPatternSequence", "[", 
            RowBox[{
             RowBox[{
             "PeterBurbery`BasicHypergeometricFunctions`Private`n", ":", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["_", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]], "|", 
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "PeterBurbery`BasicHypergeometricFunctions`Private`\
NumeratorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}], ")"}], ".."}], ")"}]}], 
             ",", 
             RowBox[{
             "PeterBurbery`BasicHypergeometricFunctions`Private`d", ":", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["_", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]], "|", 
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "PeterBurbery`BasicHypergeometricFunctions`Private`\
DenominatorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}], ")"}], ".."}], 
               ")"}]}]}], "]"}], "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NonCommutativeMultiply", "@@", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{
               "{", "PeterBurbery`BasicHypergeometricFunctions`Private`n", 
                "}"}], "]"}]}], "/.", "\[VeryThinSpace]", 
             RowBox[{
              RowBox[{
              "NonCommutativeMultiply", "[", 
               "PeterBurbery`BasicHypergeometricFunctions`Private`x_", "]"}], 
              "\[RuleDelayed]", 
              "PeterBurbery`BasicHypergeometricFunctions`Private`x"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NonCommutativeMultiply", "@@", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{"Denominator", "/@", 
                RowBox[{
                "{", "PeterBurbery`BasicHypergeometricFunctions`Private`d", 
                 "}"}]}], "]"}]}], "/.", "\[VeryThinSpace]", 
             RowBox[{
              RowBox[{
              "NonCommutativeMultiply", "[", 
               "PeterBurbery`BasicHypergeometricFunctions`Private`y_", "]"}], 
              "\[RuleDelayed]", 
              "PeterBurbery`BasicHypergeometricFunctions`Private`y"}]}], 
            ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", 
           RowBox[{"PeterBurbery`BasicHypergeometricFunctions`Private`i", ":", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{
          "Times", "[", "PeterBurbery`BasicHypergeometricFunctions`Private`i",
            "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"PeterBurbery`BasicHypergeometricFunctions`Private`u", ":", 
            RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], "/;", 
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{
             "PeterBurbery`BasicHypergeometricFunctions`Private`u", ",", 
              RowBox[{
              "PeterBurbery`BasicHypergeometricFunctions`Private`q", "|", 
               
               SuperscriptBox[
                "PeterBurbery`BasicHypergeometricFunctions`Private`q", 
                "_"]}]}], "]"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}]}], "\[RuleDelayed]", 
          RowBox[{"NonCommutativeMultiply", "@@", 
           RowBox[{"PositionQInFrontOfList", "[", 
            RowBox[{
            "List", "@@", 
             "PeterBurbery`BasicHypergeometricFunctions`Private`u"}], 
            "]"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", 
           "PeterBurbery`BasicHypergeometricFunctions`Private`y__", "]"}], 
          "\[RuleDelayed]", 
          RowBox[{
          "NonCommutativeMultiply", "[", 
           "PeterBurbery`BasicHypergeometricFunctions`Private`y", "]"}]}]}], 
        "}"}]}], "/.", "\[VeryThinSpace]", 
      RowBox[{
       RowBox[{
        RowBox[{"Inactive", "[", "Times", "]"}], "[", 
        RowBox[{"PeterBurbery`BasicHypergeometricFunctions`Private`i", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
       "Times", "[", "PeterBurbery`BasicHypergeometricFunctions`Private`i", 
        "]"}]}]}]}], ";", 
    RowBox[{"Replace", "[", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{
          "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", "/.",
            "\[VeryThinSpace]", 
           RowBox[{
            RowBox[{
             RowBox[{"OrderlessPatternSequence", "[", 
              RowBox[{
               RowBox[{
               "PeterBurbery`BasicHypergeometricFunctions`Private`numbers", 
                ":", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], ",", 
               RowBox[{
               "PeterBurbery`BasicHypergeometricFunctions`Private`symbols", 
                ":", 
                RowBox[{"(", 
                 RowBox[{"_Symbol", "..."}], ")"}]}], ",", 
               RowBox[{
               "PeterBurbery`BasicHypergeometricFunctions`Private`powers", 
                ":", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["_", "_."], ".."}], ")"}]}]}], "]"}], "**", 
             RowBox[{"(", 
              RowBox[{
              "PeterBurbery`BasicHypergeometricFunctions`Private`plus", ":", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"+", "__"}], ")"}], "..."}], ")"}]}], ")"}]}], 
            "\[RuleDelayed]", 
            RowBox[{
             RowBox[{
             "Times", "@@", 
              "PeterBurbery`BasicHypergeometricFunctions`Private`numbers"}], 
             " ", 
             RowBox[{"NonCommutativeMultiply", "@@", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                 "{", "PeterBurbery`BasicHypergeometricFunctions`Private`\
symbols", "}"}], ",", 
                 RowBox[{
                 "{", "PeterBurbery`BasicHypergeometricFunctions`Private`\
powers", "}"}], ",", 
                 RowBox[{
                 "{", "PeterBurbery`BasicHypergeometricFunctions`Private`\
plus", "}"}]}], "]"}], "]"}]}]}]}]}], ",", 
          RowBox[{"NonCommutativeMultiply", "[", "]"}], ",", "All"}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{
         "NonCommutativeMultiply", "[", 
          "PeterBurbery`BasicHypergeometricFunctions`Private`x_", "]"}], 
         "\[RuleDelayed]", 
         "PeterBurbery`BasicHypergeometricFunctions`Private`x"}], ",", 
        "All"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "PeterBurbery`BasicHypergeometricFunctions`Private`nonqs", ":", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", "#1", "]"}], "\[Equal]", "Symbol"}], "&&", 
                 RowBox[{
                 "#1", "=!=", 
                  "PeterBurbery`BasicHypergeometricFunctions`Private`q"}]}], 
                "&"}], ")"}]}], ".."}], ")"}]}], ")"}], "**", 
         RowBox[{"(", 
          RowBox[{"PeterBurbery`BasicHypergeometricFunctions`Private`qs", ":", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
             "PeterBurbery`BasicHypergeometricFunctions`Private`q", "**", 
              "_"}], ")"}], "_"]}], ")"}]}], "\[RuleDelayed]", 
        RowBox[{
        "PeterBurbery`BasicHypergeometricFunctions`Private`qs", "**", 
         "PeterBurbery`BasicHypergeometricFunctions`Private`nonqs"}]}], "}"}],
       ",", "All"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->173646475,ExpressionUUID->"8166455e-febd-4dac-b422-66f59e9787e0"],

Cell[BoxData[
 RowBox[{"a", "**", "b", "**", "c", "**", "d", "**", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellLabel->"Out[11]=",
 CellID->202299149,ExpressionUUID->"32ac0768-b6a0-47e9-beb7-94ec0c80417a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{
   "{", "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", 
    "}"}], ",", 
   RowBox[{
    RowBox[{
    "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactivate", "[", 
        RowBox[{
         RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
          SuperscriptBox["q", 
           RowBox[{"n", "-", "1"}]]}], ",", "Times"}], "]"}], "//.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", 
           RowBox[{"PeterBurbery`BasicHypergeometricFunctions`Private`i", ":", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"NonCommutativeMultiply", "@@", 
           RowBox[{"PositionQInFrontOfList", "[", 
            RowBox[{
            "{", "PeterBurbery`BasicHypergeometricFunctions`Private`i", "}"}],
             "]"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", 
           RowBox[{"OrderlessPatternSequence", "[", 
            RowBox[{
             RowBox[{"n", ":", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["_", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]], "|", 
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "PeterBurbery`BasicHypergeometricFunctions`Private`\
NumeratorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}], ")"}], ".."}], ")"}]}], 
             ",", 
             RowBox[{"d", ":", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["_", 
                   RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]], "|", 
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "PeterBurbery`BasicHypergeometricFunctions`Private`\
DenominatorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}], ")"}], ".."}], 
               ")"}]}]}], "]"}], "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NonCommutativeMultiply", "@@", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{"{", "n", "}"}], "]"}]}], "/.", "\[VeryThinSpace]", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], 
              "\[RuleDelayed]", "x"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NonCommutativeMultiply", "@@", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{"Denominator", "/@", 
                RowBox[{"{", "d", "}"}]}], "]"}]}], "/.", "\[VeryThinSpace]", 
             RowBox[{
              RowBox[{"NonCommutativeMultiply", "[", "y_", "]"}], 
              "\[RuleDelayed]", "y"}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"NonCommutativeMultiply", "[", 
           RowBox[{"i", ":", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"Times", "[", "i", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"u", ":", 
            RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], "/;", 
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"u", ",", 
              RowBox[{"q", "|", 
               SuperscriptBox["q", "_"]}]}], "]"}], "\[NotEqual]", 
            RowBox[{"{", "}"}]}]}], "\[RuleDelayed]", 
          RowBox[{"NonCommutativeMultiply", "@@", 
           RowBox[{"PositionQInFrontOfList", "[", 
            RowBox[{"List", "@@", "u"}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Inactive", "[", "Times", "]"}], "[", "y__", "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"NonCommutativeMultiply", "[", "y", "]"}]}]}], "}"}]}], "/.",
       "\[VeryThinSpace]", 
      RowBox[{
       RowBox[{
        RowBox[{"Inactive", "[", "Times", "]"}], "[", 
        RowBox[{"i", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{"Times", "[", "i", "]"}]}]}]}], ";", 
    RowBox[{"Replace", "[", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{
          "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", "/.",
            "\[VeryThinSpace]", 
           RowBox[{
            RowBox[{
             RowBox[{"OrderlessPatternSequence", "[", 
              RowBox[{
               RowBox[{"numbers", ":", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], ",", 
               RowBox[{"symbols", ":", 
                RowBox[{"(", 
                 RowBox[{"_Symbol", "..."}], ")"}]}], ",", 
               RowBox[{"powers", ":", 
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["_", "_."], ".."}], ")"}]}]}], "]"}], "**", 
             RowBox[{"(", 
              RowBox[{"plus", ":", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"+", "__"}], ")"}], "..."}], ")"}]}], ")"}]}], 
            "\[RuleDelayed]", 
            RowBox[{
             RowBox[{"Times", "@@", "numbers"}], " ", 
             RowBox[{"NonCommutativeMultiply", "@@", 
              RowBox[{"PositionQInFrontOfList", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", "symbols", "}"}], ",", 
                 RowBox[{"{", "powers", "}"}], ",", 
                 RowBox[{"{", "plus", "}"}]}], "]"}], "]"}]}]}]}]}], ",", 
          RowBox[{"NonCommutativeMultiply", "[", "]"}], ",", "All"}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{"NonCommutativeMultiply", "[", "x_", "]"}], "\[RuleDelayed]",
          "x"}], ",", "All"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"nonqs", ":", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", "#1", "]"}], "\[Equal]", "Symbol"}], "&&", 
                 RowBox[{"#1", "=!=", "q"}]}], "&"}], ")"}]}], ".."}], 
            ")"}]}], ")"}], "**", 
         RowBox[{"(", 
          RowBox[{"qs", ":", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"q", "**", "_"}], ")"}], "_"]}], ")"}]}], 
        "\[RuleDelayed]", 
        RowBox[{"qs", "**", "nonqs"}]}], "}"}], ",", "All"}], "]"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->30857652,ExpressionUUID->"de2936b4-acfa-49d3-b894-732c03afb353"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "**", "a", "**", "b", "**", "c", "**", 
  "d"}]], "Output",
 CellLabel->"Out[8]=",
 CellID->516730849,ExpressionUUID->"c7bf196a-8ddd-425c-b530-23f2eedd2aaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "n"}], "}"}], 
   ",", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{
     "{", "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", 
      "}"}], ",", 
     RowBox[{
      RowBox[{
      "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactivate", "[", 
          RowBox[{
           RowBox[{"a", " ", "b", " ", "c", " ", "d", " ", 
            SuperscriptBox["q", 
             RowBox[{"n", "-", "1"}]]}], ",", "Times"}], "]"}], "//.", 
         "\[VeryThinSpace]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Inactive", "[", "Times", "]"}], "[", 
             RowBox[{
             "PeterBurbery`BasicHypergeometricFunctions`Private`i", ":", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"_", "?", "AtomQ"}], ".."}], ")"}]}], "]"}], 
            "\[RuleDelayed]", 
            RowBox[{"NonCommutativeMultiply", "@@", 
             RowBox[{"PositionQInFrontOfList", "[", 
              RowBox[{
              "{", "PeterBurbery`BasicHypergeometricFunctions`Private`i", 
               "}"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Inactive", "[", "Times", "]"}], "[", 
             RowBox[{"OrderlessPatternSequence", "[", 
              RowBox[{
               RowBox[{
               "PeterBurbery`BasicHypergeometricFunctions`Private`n", ":", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["_", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]], "|", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "PeterBurbery`BasicHypergeometricFunctions`Private`\
NumeratorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}], ")"}], ".."}], ")"}]}], 
               ",", 
               RowBox[{
               "PeterBurbery`BasicHypergeometricFunctions`Private`d", ":", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["_", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "<", "0"}], "&"}], ")"}]}]], "|", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "PeterBurbery`BasicHypergeometricFunctions`Private`\
DenominatorTermQ", "[", "#1", "]"}], "&"}], ")"}]}]}], ")"}], ".."}], 
                 ")"}]}]}], "]"}], "]"}], "\[RuleDelayed]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"NonCommutativeMultiply", "@@", 
                RowBox[{"PositionQInFrontOfList", "[", 
                 RowBox[{
                 "{", "PeterBurbery`BasicHypergeometricFunctions`Private`n", 
                  "}"}], "]"}]}], "/.", "\[VeryThinSpace]", 
               RowBox[{
                RowBox[{
                "NonCommutativeMultiply", "[", 
                 "PeterBurbery`BasicHypergeometricFunctions`Private`x_", 
                 "]"}], "\[RuleDelayed]", 
                "PeterBurbery`BasicHypergeometricFunctions`Private`x"}]}], 
              ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"NonCommutativeMultiply", "@@", 
                RowBox[{"PositionQInFrontOfList", "[", 
                 RowBox[{"Denominator", "/@", 
                  RowBox[{
                  "{", "PeterBurbery`BasicHypergeometricFunctions`Private`d", 
                   "}"}]}], "]"}]}], "/.", "\[VeryThinSpace]", 
               RowBox[{
                RowBox[{
                "NonCommutativeMultiply", "[", 
                 "PeterBurbery`BasicHypergeometricFunctions`Private`y_", 
                 "]"}], "\[RuleDelayed]", 
                "PeterBurbery`BasicHypergeometricFunctions`Private`y"}]}], 
              ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"NonCommutativeMultiply", "[", 
             RowBox[{
             "PeterBurbery`BasicHypergeometricFunctions`Private`i", ":", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], 
            "\[RuleDelayed]", 
            RowBox[{
            "Times", "[", 
             "PeterBurbery`BasicHypergeometricFunctions`Private`i", "]"}]}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PeterBurbery`BasicHypergeometricFunctions`Private`u", ":", 
              RowBox[{"NonCommutativeMultiply", "[", "___", "]"}]}], "/;", 
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
               "PeterBurbery`BasicHypergeometricFunctions`Private`u", ",", 
                RowBox[{
                "PeterBurbery`BasicHypergeometricFunctions`Private`q", "|", 
                 
                 SuperscriptBox[
                  "PeterBurbery`BasicHypergeometricFunctions`Private`q", 
                  "_"]}]}], "]"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}]}], "\[RuleDelayed]", 
            RowBox[{"NonCommutativeMultiply", "@@", 
             RowBox[{"PositionQInFrontOfList", "[", 
              RowBox[{
              "List", "@@", 
               "PeterBurbery`BasicHypergeometricFunctions`Private`u"}], 
              "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Inactive", "[", "Times", "]"}], "[", 
             "PeterBurbery`BasicHypergeometricFunctions`Private`y__", "]"}], 
            "\[RuleDelayed]", 
            RowBox[{
            "NonCommutativeMultiply", "[", 
             "PeterBurbery`BasicHypergeometricFunctions`Private`y", "]"}]}]}],
           "}"}]}], "/.", "\[VeryThinSpace]", 
        RowBox[{
         RowBox[{
          RowBox[{"Inactive", "[", "Times", "]"}], "[", 
          RowBox[{"PeterBurbery`BasicHypergeometricFunctions`Private`i", ":", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], "]"}], 
         "\[RuleDelayed]", 
         RowBox[{
         "Times", "[", "PeterBurbery`BasicHypergeometricFunctions`Private`i", 
          "]"}]}]}]}], ";", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{
            "PeterBurbery`BasicHypergeometricFunctions`Private`firstoutput", "/.",
              "\[VeryThinSpace]", 
             RowBox[{
              RowBox[{
               RowBox[{"OrderlessPatternSequence", "[", 
                RowBox[{
                 RowBox[{
                 "PeterBurbery`BasicHypergeometricFunctions`Private`numbers", 
                  ":", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ".."}], ")"}]}], ",", 
                 RowBox[{
                 "PeterBurbery`BasicHypergeometricFunctions`Private`symbols", 
                  ":", 
                  RowBox[{"(", 
                   RowBox[{"_Symbol", "..."}], ")"}]}], ",", 
                 RowBox[{
                 "PeterBurbery`BasicHypergeometricFunctions`Private`powers", 
                  ":", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["_", "_."], ".."}], ")"}]}]}], "]"}], "**", 
               RowBox[{"(", 
                RowBox[{
                "PeterBurbery`BasicHypergeometricFunctions`Private`plus", ":", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"+", "__"}], ")"}], "..."}], ")"}]}], ")"}]}], 
              "\[RuleDelayed]", 
              RowBox[{
               RowBox[{
               "Times", "@@", 
                "PeterBurbery`BasicHypergeometricFunctions`Private`numbers"}],
                " ", 
               RowBox[{"NonCommutativeMultiply", "@@", 
                RowBox[{"PositionQInFrontOfList", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                   "{", "PeterBurbery`BasicHypergeometricFunctions`Private`\
symbols", "}"}], ",", 
                   RowBox[{
                   "{", "PeterBurbery`BasicHypergeometricFunctions`Private`\
powers", "}"}], ",", 
                   RowBox[{
                   "{", "PeterBurbery`BasicHypergeometricFunctions`Private`\
plus", "}"}]}], "]"}], "]"}]}]}]}]}], ",", 
            RowBox[{"NonCommutativeMultiply", "[", "]"}], ",", "All"}], "]"}],
           ",", 
          RowBox[{
           RowBox[{
           "NonCommutativeMultiply", "[", 
            "PeterBurbery`BasicHypergeometricFunctions`Private`x_", "]"}], 
           "\[RuleDelayed]", 
           "PeterBurbery`BasicHypergeometricFunctions`Private`x"}], ",", 
          "All"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "PeterBurbery`BasicHypergeometricFunctions`Private`nonqs", ":", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Head", "[", "#1", "]"}], "\[Equal]", "Symbol"}], 
                   "&&", 
                   RowBox[{
                   "#1", "=!=", 
                    "PeterBurbery`BasicHypergeometricFunctions`Private`q"}]}],
                   "&"}], ")"}]}], ".."}], ")"}]}], ")"}], "**", 
           RowBox[{"(", 
            RowBox[{
            "PeterBurbery`BasicHypergeometricFunctions`Private`qs", ":", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
               "PeterBurbery`BasicHypergeometricFunctions`Private`q", "**", 
                "_"}], ")"}], "_"]}], ")"}]}], "\[RuleDelayed]", 
          RowBox[{
          "PeterBurbery`BasicHypergeometricFunctions`Private`qs", "**", 
           "PeterBurbery`BasicHypergeometricFunctions`Private`nonqs"}]}], 
         "}"}], ",", "All"}], "]"}]}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->34212862,ExpressionUUID->"180f119f-213a-4120-ad9e-5dbda72e643d"],

Cell[BoxData[
 RowBox[{"a", "**", "b", "**", "c", "**", "d", "**", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellLabel->"Out[10]=",
 CellID->76091348,ExpressionUUID->"23847299-afed-4fcd-a99b-eafd7ab717a0"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"2023e1e6-8be3-4816-aee8-5334d3df4888"],

Cell[BoxData[""], "Input",ExpressionUUID->"c4d250de-afe1-4bdd-aac9-78cc9ddc7462"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"223be60e-b941-4ad3-b7ef-03b3664eaf07"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Rearranging Expressions",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> {$Failed, ""}, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2023, 6, 6, 12, 45, 55.1134820}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "PeterBurbery`BasicHypergeometricFunctions`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Peter Burbery/ Basic Hypergeometric Functions Tech Note", 
    "language" -> "en", "paclet" -> 
    "PeterBurbery/BasicHypergeometricFunctions", "status" -> "None", 
    "summary" -> 
    "The functions defined in the PeterBurbery`BasicHypergeometricFunctions` \
context provide support for placing the q in front. The built-in function \
PositionQInFrontOfList puts q in front of a list. The function works by using \
UnsortedComplement. Consider the input q. q is already in front. We can use \
AtomQ to just return the output.", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$114970, "title" -> 
    "Rearranging Expressions", "titlemodifier" -> "", "metadescription" -> "",
     "windowtitle" -> "Rearranging Expressions", "type" -> "Tech Note", "uri" -> 
    "PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions"}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Microsoft Windows (64-bit) (May 18, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"bfcb840a-f330-4d0f-b057-47dd138d60c3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[266412, 7417, 12458, 210, 206, "Output",ExpressionUUID->"d0704778-93bf-4fe1-a259-61f784ffbcfe",
   CellTags->"RasterizedOutput",
   CellID->258689455]},
 "407df68d-e655-417b-9ff2-0449c81d58ef"->{
  Cell[335958, 9294, 727, 19, 70, "EchoBefore",ExpressionUUID->"104d456c-ed20-4f85-a700-42712bc8cd17",
   CellTags->"407df68d-e655-417b-9ff2-0449c81d58ef",
   CellID->585255656]},
 "1e264c9a-d32f-444c-996b-0bb1b507d08a"->{
  Cell[336688, 9315, 1439, 41, 70, "EchoAfter",ExpressionUUID->"db7c6fb7-bb00-4871-a8a4-db62aeb14ff1",
   CellTags->"1e264c9a-d32f-444c-996b-0bb1b507d08a",
   CellID->257068581]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 400550, 11059},
 {"407df68d-e655-417b-9ff2-0449c81d58ef", 400753, 11063},
 {"1e264c9a-d32f-444c-996b-0bb1b507d08a", 400976, 11067}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[595, 21, 3665, 85, 56, "AnchorBarGrid",ExpressionUUID->"e7d32f16-7a49-4078-b232-10d933ffcecd",
 CellID->1],
Cell[CellGroupData[{
Cell[4285, 110, 123, 1, 68, "TechNoteTitle",ExpressionUUID->"4392a549-f5bc-4eed-86cd-bd4f56abb022",
 CellID->555292541],
Cell[4411, 113, 2772, 64, 89, "TechNoteJumpBox",ExpressionUUID->"6c0d23ba-fcc7-431e-a58a-400f82b219ed"],
Cell[7186, 179, 369, 7, 36, "TechNoteText",ExpressionUUID->"da171d77-9ecf-45b9-aa05-d6d9041a939a",
 CellID->34242218],
Cell[7558, 188, 129, 1, 36, "TechNoteMathCaption",ExpressionUUID->"7bada169-7c3d-4776-b7f7-9de2435b9070",
 CellID->513850824],
Cell[7690, 191, 184, 3, 26, "Input",ExpressionUUID->"0dee9fdd-35d3-4720-adb9-0ac50b09f781",
 CellID->542855510],
Cell[CellGroupData[{
Cell[7899, 198, 115, 1, 80, "TechNoteSection",ExpressionUUID->"e289c6af-e7f4-4b1c-818e-9eda6dd9cb82",
 CellID->2591],
Cell[8017, 201, 228, 4, 36, "TechNoteText",ExpressionUUID->"b612293d-b26c-4a4f-9c16-0ee176d43931",
 CellID->590619292],
Cell[CellGroupData[{
Cell[8270, 209, 264, 6, 26, "Input",ExpressionUUID->"c005b7de-a8c7-45df-9f11-f64113601e19",
 CellID->219423307],
Cell[8537, 217, 215, 5, 35, "Output",ExpressionUUID->"9e37fe5e-f82a-4f84-a340-a0975f379d0a",
 CellID->272831206]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8801, 228, 113, 1, 80, "TechNoteSection",ExpressionUUID->"00036f6a-63fd-4f4f-a2de-66a749e3d47c",
 CellID->237748664],
Cell[8917, 231, 178, 2, 36, "TechNoteMathCaption",ExpressionUUID->"e250cd9f-9b0e-4e7b-8c8b-dd8939ecf38b",
 CellID->30906755],
Cell[CellGroupData[{
Cell[9120, 237, 268, 6, 26, "Input",ExpressionUUID->"1542516c-d21f-43bc-a96f-434c0b7c4782",
 CellID->501709717],
Cell[9391, 245, 250, 6, 36, "Output",ExpressionUUID->"488c71cf-7b69-4b59-85bc-82928f353118",
 CellID->187249567]
}, Open  ]],
Cell[CellGroupData[{
Cell[9678, 256, 175, 3, 70, "Input",ExpressionUUID->"afa7c4e4-7e9c-42d8-8885-a887ef7faee4",
 CellID->45907700],
Cell[9856, 261, 11124, 299, 70, "Output",ExpressionUUID->"8107efe8-ed22-4c56-87de-5eaa90656bb7",
 CellID->895181536]
}, Open  ]],
Cell[20995, 563, 192, 3, 70, "TechNoteMathCaption",ExpressionUUID->"f8838af4-b20d-4ec5-a66f-f7d8b078f083",
 CellID->340949841],
Cell[CellGroupData[{
Cell[21212, 570, 193, 4, 70, "Input",ExpressionUUID->"3ffb77c4-590c-4ead-a50c-cb1b18c855f9",
 CellID->152984908],
Cell[21408, 576, 171, 4, 35, "Output",ExpressionUUID->"c93a09c0-c592-4a37-a1c9-a736cb2815d0",
 CellID->130135511]
}, Open  ]],
Cell[21594, 583, 162, 2, 70, "TechNoteMathCaption",ExpressionUUID->"2e56b696-7921-4dd2-bf7d-0c15be4b3e70",
 CellID->579788294],
Cell[CellGroupData[{
Cell[21781, 589, 184, 4, 70, "Input",ExpressionUUID->"9e3189cf-1dac-4683-b068-aa39e4a347fe",
 CellID->8585758],
Cell[21968, 595, 147, 3, 35, "Output",ExpressionUUID->"4705ed4c-77f3-4d52-93c1-3e4e4dd55fb2",
 CellID->15928604]
}, Open  ]],
Cell[CellGroupData[{
Cell[22152, 603, 199, 4, 70, "Input",ExpressionUUID->"8d2cec3f-4b54-43fc-ae0e-c64bd1ae354a",
 CellID->1001352657],
Cell[22354, 609, 143, 3, 35, "Output",ExpressionUUID->"ed66c2d4-31f0-4bb5-ba5d-b990fa15b75b",
 CellID->555168197]
}, Open  ]],
Cell[22512, 615, 139, 1, 70, "TechNoteMathCaption",ExpressionUUID->"8565d89a-3dc1-40ac-acd5-d801d217a040",
 CellID->210058381],
Cell[CellGroupData[{
Cell[22676, 620, 239, 5, 70, "Input",ExpressionUUID->"2de0fa28-d123-428b-b5e2-98d1c8625d06",
 CellID->3618976],
Cell[22918, 627, 229, 6, 36, "Output",ExpressionUUID->"94746ca0-d6f1-48e7-8278-248ff52f0647",
 CellID->60384182]
}, Open  ]],
Cell[CellGroupData[{
Cell[23184, 638, 198, 4, 70, "Input",ExpressionUUID->"660b225c-1422-4319-8e29-d30e3deb8688",
 CellID->158897045],
Cell[23385, 644, 194, 5, 35, "Output",ExpressionUUID->"601fecce-349c-4039-8f5b-2f1b74399bd6",
 CellID->90949083]
}, Open  ]],
Cell[23594, 652, 178, 3, 70, "TechNoteMathCaption",ExpressionUUID->"2af08122-2b75-4880-a344-84d2102e1006",
 CellID->45747336],
Cell[CellGroupData[{
Cell[23797, 659, 191, 4, 70, "Input",ExpressionUUID->"66b70e28-e77a-447e-a23b-1b9e9d0d56eb",
 CellID->106947108],
Cell[23991, 665, 149, 3, 35, "Output",ExpressionUUID->"4c82f576-35b3-4c89-9dda-a2b8fadfdd98",
 CellID->688234202]
}, Open  ]],
Cell[CellGroupData[{
Cell[24177, 673, 196, 4, 70, "Input",ExpressionUUID->"4468754d-b339-4a2a-9d0d-4595095e64b6",
 CellID->289386853],
Cell[24376, 679, 144, 3, 35, "Output",ExpressionUUID->"48a35c84-046a-4567-9766-96920108ee49",
 CellID->383066580]
}, Open  ]],
Cell[CellGroupData[{
Cell[24557, 687, 196, 4, 70, "Input",ExpressionUUID->"d79fbaf0-27e6-49a8-aa49-3068b2ea26df",
 CellID->616336306],
Cell[24756, 693, 144, 3, 35, "Output",ExpressionUUID->"f29a22a9-3747-4e8f-b627-7b11e218ce82",
 CellID->287890430]
}, Open  ]],
Cell[24915, 699, 218, 4, 70, "TechNoteMathCaption",ExpressionUUID->"58782be3-aee4-4688-9aa0-f67ced329f3f",
 CellID->657986846],
Cell[CellGroupData[{
Cell[25158, 707, 180, 3, 70, "Input",ExpressionUUID->"53397038-fd0e-4d9a-9edd-b596769b620d",
 CellID->3639185],
Cell[25341, 712, 9372, 255, 70, "Output",ExpressionUUID->"84c8a925-7c7f-43d1-9477-0b21d4c74fd7",
 CellID->781595662]
}, Open  ]],
Cell[CellGroupData[{
Cell[34750, 972, 245, 6, 70, "Input",ExpressionUUID->"b8a9ab4a-ca17-489b-a112-77b3eb665233",
 CellID->106876852],
Cell[34998, 980, 10483, 301, 70, "Output",ExpressionUUID->"c1912582-c320-4a31-a835-d77a09a1b203",
 CellID->78099367]
}, Open  ]],
Cell[45496, 1284, 131, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ea217606-4fc7-4ae5-b860-1a9d9c0c9bb4",
 CellID->201555096],
Cell[CellGroupData[{
Cell[45652, 1289, 244, 6, 70, "Input",ExpressionUUID->"7365682a-9352-4f44-8e92-8fa88547b46e",
 CellID->76274047],
Cell[45899, 1297, 20207, 631, 70, "Output",ExpressionUUID->"d0cf1f2d-53e1-484a-9edc-173b312ec335",
 CellID->268218734]
}, Open  ]],
Cell[66121, 1931, 183, 3, 70, "TechNoteMathCaption",ExpressionUUID->"193fd985-a1c8-4cb4-8049-61c540b24416",
 CellID->116384939],
Cell[CellGroupData[{
Cell[66329, 1938, 265, 6, 70, "Input",ExpressionUUID->"1650bdc2-d3dd-44d2-935a-cb0166afa61e",
 CellID->11721902],
Cell[66597, 1946, 9875, 334, 70, "Output",ExpressionUUID->"f3d6bc50-6c9c-40f3-bf12-4a151619f9cb",
 CellID->122696485]
}, Open  ]],
Cell[76487, 2283, 123, 1, 70, "TechNoteMathCaption",ExpressionUUID->"86b94b57-eaac-4303-81af-a7050b4a3f0d",
 CellID->7379660],
Cell[CellGroupData[{
Cell[76635, 2288, 218, 4, 70, "Input",ExpressionUUID->"fc483901-d97e-4372-9f6a-9813c3022a4b",
 CellID->57152497],
Cell[76856, 2294, 9874, 334, 70, "Output",ExpressionUUID->"c5e71275-b015-4f09-85eb-6a48969472f9",
 CellID->99386605]
}, Open  ]],
Cell[86745, 2631, 145, 1, 70, "TechNoteMathCaption",ExpressionUUID->"124a6d2d-ea42-451a-94ee-c679eb1ebe95",
 CellID->600024437],
Cell[CellGroupData[{
Cell[86915, 2636, 286, 7, 70, "Input",ExpressionUUID->"85f25a87-aaee-49ac-aec1-40dc56984d69",
 CellID->356384648],
Cell[87204, 2645, 9874, 334, 70, "Output",ExpressionUUID->"44758134-dc52-4f6e-9723-314aab58a870",
 CellID->51287920]
}, Open  ]],
Cell[97093, 2982, 144, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ef013166-4ead-44c5-b462-ff65ddc99d01",
 CellID->32533157],
Cell[CellGroupData[{
Cell[97262, 2987, 255, 6, 70, "Input",ExpressionUUID->"0416be1e-c919-43ec-aa1e-85469159a7b8",
 CellID->221488453],
Cell[97520, 2995, 9874, 334, 70, "Output",ExpressionUUID->"35e9dc97-64da-40ab-bf0d-b1170d95795f",
 CellID->44145120]
}, Open  ]],
Cell[107409, 3332, 140, 1, 70, "TechNoteMathCaption",ExpressionUUID->"a2133ad2-2225-44aa-9f09-fb71192a71ea",
 CellID->441304007],
Cell[CellGroupData[{
Cell[107574, 3337, 289, 7, 70, "Input",ExpressionUUID->"a58c9ff8-287c-44c1-b668-5330c449eee6",
 CellID->784023909],
Cell[107866, 3346, 215, 5, 35, "Output",ExpressionUUID->"81941b3a-1333-4d5a-a4ac-58c4a01cf9cd",
 CellID->565604538]
}, Open  ]],
Cell[108096, 3354, 196, 4, 70, "TechNoteMathCaption",ExpressionUUID->"5149010d-c608-4898-8767-cfd634db1877",
 CellID->48363548],
Cell[CellGroupData[{
Cell[108317, 3362, 289, 7, 70, "Input",ExpressionUUID->"0994fd9e-af71-478d-908d-4500620df444",
 CellID->265849720],
Cell[108609, 3371, 171, 4, 35, "Output",ExpressionUUID->"affd3fdf-d9ac-416c-862d-47ff1e8b97d6",
 CellID->36210837]
}, Open  ]],
Cell[CellGroupData[{
Cell[108817, 3380, 354, 9, 70, "Input",ExpressionUUID->"fd7a6e53-b654-4cbc-b5ee-9f48f9ec5f56",
 CellID->10018807],
Cell[109174, 3391, 130, 2, 35, "Output",ExpressionUUID->"e76d88ee-cf9e-4426-9e7b-7134e41378e3",
 CellID->90942833]
}, Open  ]],
Cell[109319, 3396, 157, 2, 70, "TechNoteMathCaption",ExpressionUUID->"7d92d8c6-2ea7-4ba0-8219-43584f030b73",
 CellID->222360495],
Cell[109479, 3400, 424, 11, 70, "Input",ExpressionUUID->"82beeeb9-2a8c-4463-af42-1005bc5440b5",
 CellID->876159263],
Cell[109906, 3413, 124, 1, 70, "TechNoteMathCaption",ExpressionUUID->"bb3a1f82-6483-45e6-bf09-9be803a1b346",
 CellID->140693972],
Cell[CellGroupData[{
Cell[110055, 3418, 188, 3, 70, "Input",ExpressionUUID->"d8f63307-e67d-4fc8-a97d-402c45b59692",
 CellID->676058770],
Cell[110246, 3423, 131, 2, 35, "Output",ExpressionUUID->"eea12d2b-f043-46fd-85dd-2cbf4f625467",
 CellID->173651887]
}, Open  ]],
Cell[110392, 3428, 179, 3, 70, "TechNoteMathCaption",ExpressionUUID->"9acb1795-a990-4a13-8873-c90e28be41a8",
 CellID->362701572],
Cell[CellGroupData[{
Cell[110596, 3435, 820, 25, 70, "Input",ExpressionUUID->"19d0214e-62ae-45d5-aa1b-60302fc7b9e9",
 CellID->569912814],
Cell[111419, 3462, 10076, 197, 70, "Output",ExpressionUUID->"a2d3cb23-f362-4b5c-a1bc-da580aaa66bf",
 CellID->466247083]
}, Open  ]],
Cell[121510, 3662, 162, 2, 70, "TechNoteMathCaption",ExpressionUUID->"97132d86-e5d0-45e3-802f-58f9f0f39315",
 CellID->860484422],
Cell[CellGroupData[{
Cell[121697, 3668, 274, 7, 70, "Input",ExpressionUUID->"add0c371-31b9-4367-bc72-eb4c040e00e9",
 CellID->200160651],
Cell[121974, 3677, 190, 4, 35, "Output",ExpressionUUID->"167bdd41-fd93-47ac-ab49-db1c26338de0",
 CellID->5616810]
}, Open  ]],
Cell[122179, 3684, 174, 3, 70, "TechNoteMathCaption",ExpressionUUID->"9c17d504-b7ec-49f5-aa76-01b975d8b4ff",
 CellID->38347245],
Cell[CellGroupData[{
Cell[122378, 3691, 325, 8, 70, "Input",ExpressionUUID->"724adc3c-0673-4c79-83a0-9b35580656c0",
 CellID->26282727],
Cell[122706, 3701, 22784, 559, 70, "Output",ExpressionUUID->"cfcbbb5c-53db-400b-b113-44c26b8cecc7",
 CellID->434215884]
}, Open  ]],
Cell[CellGroupData[{
Cell[145527, 4265, 499, 14, 70, "Input",ExpressionUUID->"b4839ee4-2c41-4b36-94a0-7b8578dcef1d",
 CellID->466437509],
Cell[146029, 4281, 11444, 300, 70, "Output",ExpressionUUID->"5c162d0f-d327-443a-a8bc-5f4ac9e44d7f",
 CellID->581867833]
}, Open  ]],
Cell[157488, 4584, 137, 1, 70, "TechNoteMathCaption",ExpressionUUID->"c3f2f89c-9482-4f53-98b1-6c9fc2a23c33",
 CellID->46456499],
Cell[CellGroupData[{
Cell[157650, 4589, 255, 5, 70, "Input",ExpressionUUID->"546a60cf-d081-49f5-aa14-fa702e72a761",
 CellID->30529297],
Cell[157908, 4596, 434, 13, 56, "Output",ExpressionUUID->"9103b4bb-7813-45f2-a6d7-9a32cded2b51",
 CellID->315960114]
}, Open  ]],
Cell[CellGroupData[{
Cell[158379, 4614, 186, 3, 70, "Input",ExpressionUUID->"ab190343-3149-4f6a-8623-4ccb8dedd90a",
 CellID->562027770],
Cell[158568, 4619, 25262, 653, 70, "Output",ExpressionUUID->"afcc092f-35b7-4fcc-b26b-92d5ac91f7b1",
 CellID->601819694]
}, Open  ]],
Cell[183845, 5275, 130, 1, 70, "TechNoteMathCaption",ExpressionUUID->"77777825-f8e5-4ced-be9c-4cc1309fbd28",
 CellID->194616050],
Cell[CellGroupData[{
Cell[184000, 5280, 526, 14, 70, "Input",ExpressionUUID->"72c77568-5553-4447-b7b6-5d1fe557a34e",
 CellID->233755330],
Cell[184529, 5296, 36383, 908, 70, "Output",ExpressionUUID->"dce34231-e31a-474d-8db2-47053a02cbd7",
 CellID->147590346]
}, Open  ]],
Cell[CellGroupData[{
Cell[220949, 6209, 354, 9, 70, "Input",ExpressionUUID->"c67180dc-cad8-49b0-943d-64bf7b19934b",
 CellID->45569491],
Cell[221306, 6220, 39848, 1007, 70, "Output",ExpressionUUID->"43022bc4-fb05-4799-b6aa-38362aa929e6",
 CellID->86851793]
}, Open  ]],
Cell[261169, 7230, 106, 1, 70, "TechNoteCaption",ExpressionUUID->"f5f60007-c978-4515-b0ad-835ba5ae7d46",
 CellID->56681674]
}, Open  ]],
Cell[CellGroupData[{
Cell[261312, 7236, 110, 1, 70, "TechNoteSection",ExpressionUUID->"19945e51-54d3-43c9-aa1b-f6fdb8d3c43e",
 CellID->194172257],
Cell[CellGroupData[{
Cell[261447, 7241, 106, 1, 70, "Subsection",ExpressionUUID->"1e56a077-1c45-4290-8be6-0d02c8772dcc",
 CellID->268449717],
Cell[261556, 7244, 196, 4, 70, "TechNoteText",ExpressionUUID->"f43cd62e-9a36-420a-b91e-3d128127be16",
 CellID->38548766],
Cell[261755, 7250, 110, 1, 70, "TechNoteMathCaption",ExpressionUUID->"bcaa542b-05a8-40ae-8474-eb2c14e74d8c",
 CellID->869928153],
Cell[261868, 7253, 221, 5, 70, "Input",ExpressionUUID->"2839130b-501f-465e-b1d6-f14121ff0e17",
 CellID->332914739],
Cell[262092, 7260, 121, 1, 70, "TechNoteMathCaption",ExpressionUUID->"28ce1dcc-0757-40de-b210-523e1bf7b01e",
 CellID->76608498],
Cell[CellGroupData[{
Cell[262238, 7265, 167, 3, 70, "Input",ExpressionUUID->"cd69e59c-e6ea-4b50-9ff6-c1a65c608a37",
 CellID->96817370],
Cell[262408, 7270, 126, 2, 35, "Output",ExpressionUUID->"5fe6d5fd-930d-450e-9f7a-9e42e562f7e7",
 CellID->333277154]
}, Open  ]],
Cell[262549, 7275, 134, 1, 70, "TechNoteMathCaption",ExpressionUUID->"28fe1505-656f-4577-8353-f3aa193cb1a4",
 CellID->132842737],
Cell[CellGroupData[{
Cell[262708, 7280, 168, 3, 70, "Input",ExpressionUUID->"662735f4-c64c-4559-a8a8-6e8d8f29167c",
 CellID->384650234],
Cell[262879, 7285, 126, 2, 35, "Output",ExpressionUUID->"62918c2d-efef-4281-85cf-fc5d34de8b89",
 CellID->202833461]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263054, 7293, 106, 1, 70, "Subsection",ExpressionUUID->"6983f950-66f2-4847-b830-1bf59eecd009",
 CellID->194967963],
Cell[263163, 7296, 467, 14, 70, "TechNoteText",ExpressionUUID->"90f00af2-676b-4b97-9811-3bd4dd7d6754",
 CellID->185252635],
Cell[CellGroupData[{
Cell[263655, 7314, 352, 10, 70, "Input",ExpressionUUID->"c5c33a0d-a7c3-4ba1-a946-fcaff628af6e",
 CellID->250393049],
Cell[264010, 7326, 362, 11, 56, "Output",ExpressionUUID->"c29aedee-2263-4374-8164-0dd77a1007a7",
 CellID->878465958]
}, Open  ]],
Cell[264387, 7340, 113, 1, 70, "TechNoteMathCaption",ExpressionUUID->"3f611023-c3c0-45d3-9bc3-0bc5cdf393a3",
 CellID->386931535],
Cell[CellGroupData[{
Cell[264525, 7345, 461, 14, 70, "Input",ExpressionUUID->"056d53d0-94f6-4eb4-a3a9-30502ed40cd6",
 CellID->170794992],
Cell[264989, 7361, 809, 31, 53, "Output",ExpressionUUID->"296619f3-3e80-4fd6-a0ec-c21a226deaea",
 CellID->112160897]
}, Open  ]],
Cell[CellGroupData[{
Cell[265835, 7397, 166, 3, 70, "Input",ExpressionUUID->"7768e08f-1efd-4577-83cf-0b81f428b9d9",
 CellID->200307475],
Cell[266004, 7402, 203, 5, 66, "Output",ExpressionUUID->"3d93041f-01d3-42c1-924c-16ab8a04e539",
 CellID->1194021]
}, Open  ]],
Cell[CellGroupData[{
Cell[266244, 7412, 165, 3, 70, "Input",ExpressionUUID->"6355e096-68a8-40fa-b4cb-7f2526bf9496",
 CellID->791122323],
Cell[266412, 7417, 12458, 210, 206, "Output",ExpressionUUID->"d0704778-93bf-4fe1-a259-61f784ffbcfe",
 CellTags->"RasterizedOutput",
 CellID->258689455]
}, Open  ]],
Cell[CellGroupData[{
Cell[278907, 7632, 171, 3, 70, "Input",ExpressionUUID->"c13fba48-4a62-4503-a2bb-e39e9bd34fa8",
 CellID->66563211],
Cell[279081, 7637, 26247, 685, 70, "Output",ExpressionUUID->"03247c3a-8051-483e-9c28-96703063ee23",
 CellID->162891395]
}, Open  ]],
Cell[CellGroupData[{
Cell[305365, 8327, 868, 32, 70, "Input",ExpressionUUID->"ec6fb240-62f1-481b-aead-d76ba7d01e83",
 CellID->172257243],
Cell[306236, 8361, 165, 3, 35, "Output",ExpressionUUID->"eaeea999-b9d6-434c-86bf-8808382d67df",
 CellID->113973965]
}, Open  ]],
Cell[CellGroupData[{
Cell[306438, 8369, 1476, 49, 70, "Input",ExpressionUUID->"13eb6b9c-455c-4ad9-bd49-edd045309a4a",
 CellID->250063681],
Cell[307917, 8420, 248, 5, 35, "Output",ExpressionUUID->"0e53fd9a-0db9-4847-b392-bf47cfc113ca",
 CellID->106697600]
}, Open  ]],
Cell[CellGroupData[{
Cell[308202, 8430, 760, 22, 70, "Input",ExpressionUUID->"dbc6f9c3-035e-4def-a6e5-e35f54f2c047",
 CellID->661990640],
Cell[308965, 8454, 130, 2, 35, "Output",ExpressionUUID->"1ea36e34-572f-497e-96d1-6ca644b69040",
 CellID->179615253]
}, Open  ]],
Cell[CellGroupData[{
Cell[309132, 8461, 783, 22, 70, "Input",ExpressionUUID->"3d6228a8-2208-4d35-95b0-a050cee534b1",
 CellID->60633593],
Cell[309918, 8485, 449, 9, 70, "Message",ExpressionUUID->"5a4fabba-f2ec-4c83-b2a4-b38f3e0ece80",
 CellID->170308327],
Cell[310370, 8496, 449, 9, 70, "Message",ExpressionUUID->"61a8d197-545b-44b1-83e3-71cbb7032891",
 CellID->102137890],
Cell[310822, 8507, 449, 9, 70, "Message",ExpressionUUID->"0f8e44fb-fc80-4be1-910d-1125443ebcc8",
 CellID->394454359],
Cell[311274, 8518, 448, 9, 70, "Message",ExpressionUUID->"70210467-e429-4c0c-a85a-959e7fe46990",
 CellID->76820452],
Cell[311725, 8529, 131, 2, 35, "Output",ExpressionUUID->"e53fb0c0-7c9d-4a9a-a8ad-14927e217ac7",
 CellID->491793677]
}, Open  ]],
Cell[CellGroupData[{
Cell[311893, 8536, 334, 9, 70, "Input",ExpressionUUID->"2de3f7cd-8cc2-44d0-97aa-27093d6cd1e0",
 CellID->384495673],
Cell[312230, 8547, 131, 2, 35, "Output",ExpressionUUID->"ded23f71-8f0d-4855-950e-4a71093512d1",
 CellID->186967771]
}, Open  ]],
Cell[CellGroupData[{
Cell[312398, 8554, 335, 9, 70, "Input",ExpressionUUID->"4f18cbe3-aae0-43f9-903d-5b5f5e86408a",
 CellID->322303961],
Cell[312736, 8565, 130, 2, 35, "Output",ExpressionUUID->"679fcfca-9b09-47d4-b027-626f35009e3e",
 CellID->705383167]
}, Open  ]],
Cell[CellGroupData[{
Cell[312903, 8572, 335, 9, 70, "Input",ExpressionUUID->"8444b3cf-06af-42e3-8559-d3cc05066374",
 CellID->352881982],
Cell[313241, 8583, 130, 2, 35, "Output",ExpressionUUID->"c9a85bc5-8306-4405-ab81-892c8d1a822c",
 CellID->104515354]
}, Open  ]],
Cell[CellGroupData[{
Cell[313408, 8590, 509, 16, 70, "Input",ExpressionUUID->"1198c22f-8820-476d-882a-5d43b3337bb9",
 CellID->319128574],
Cell[313920, 8608, 129, 2, 35, "Output",ExpressionUUID->"d1ee4449-7485-4155-93c9-252412f233f9",
 CellID->32208754]
}, Open  ]],
Cell[CellGroupData[{
Cell[314086, 8615, 347, 11, 70, "Input",ExpressionUUID->"00f1cd4a-9fe8-42f1-985b-3fce886b359c",
 CellID->632903510],
Cell[314436, 8628, 130, 2, 35, "Output",ExpressionUUID->"1674cfe9-585a-4193-b5db-2c822c9e8c64",
 CellID->65152455]
}, Open  ]],
Cell[CellGroupData[{
Cell[314603, 8635, 473, 14, 70, "Input",ExpressionUUID->"7a83c442-d251-47b5-b5a1-d3bb25d22f13",
 CellID->588694242],
Cell[315079, 8651, 188, 4, 35, "Output",ExpressionUUID->"efbd91c7-c11c-4ea0-b7d3-33a30effc388",
 CellID->328151388]
}, Open  ]],
Cell[CellGroupData[{
Cell[315304, 8660, 593, 17, 70, "Input",ExpressionUUID->"cd28b2b7-65ae-400a-a093-7dad2334a9f4",
 CellID->148597441],
Cell[315900, 8679, 130, 2, 35, "Output",ExpressionUUID->"909173d8-b455-4248-a8c9-71120bd7a5b5",
 CellID->250828651]
}, Open  ]],
Cell[CellGroupData[{
Cell[316067, 8686, 299, 7, 70, "Input",ExpressionUUID->"a0a51258-c844-46c5-9e06-1d9327ee7bf8",
 CellID->328691234],
Cell[316369, 8695, 144, 3, 35, "Output",ExpressionUUID->"1b4accef-4fc1-4457-a47b-ee1df3cf1600",
 CellID->230939523]
}, Open  ]],
Cell[CellGroupData[{
Cell[316550, 8703, 405, 10, 70, "Input",ExpressionUUID->"9f2a93c1-fd83-4e4d-8b48-a9fed68f6d1c",
 CellID->236727458],
Cell[316958, 8715, 131, 2, 35, "Output",ExpressionUUID->"d34ec792-8a1c-4bb7-9762-433b0f04f7be",
 CellID->592692198]
}, Open  ]],
Cell[CellGroupData[{
Cell[317126, 8722, 350, 11, 70, "Input",ExpressionUUID->"c510437a-bcf3-4366-bd8b-1a3c2e50f76b",
 CellID->2559059],
Cell[317479, 8735, 158, 2, 49, "Output",ExpressionUUID->"2f2751b3-7d72-4276-9597-60b735135929",
 CellID->280959356]
}, Open  ]],
Cell[CellGroupData[{
Cell[317674, 8742, 1110, 35, 70, "Input",ExpressionUUID->"431fe04e-2754-4e57-90db-d8383a7d7144",
 CellID->322886675],
Cell[318787, 8779, 131, 2, 35, "Output",ExpressionUUID->"135ec8d8-f0d6-4014-97fd-0186555bf35f",
 CellID->215218184]
}, Open  ]],
Cell[CellGroupData[{
Cell[318955, 8786, 753, 25, 70, "Input",ExpressionUUID->"059dd3a9-ee61-4444-b26a-07a3cc3e54fc",
 CellID->284468844],
Cell[319711, 8813, 131, 2, 35, "Output",ExpressionUUID->"0835eedc-ced7-4500-a32b-1b1d5d30b0d6",
 CellID->300512079]
}, Open  ]],
Cell[CellGroupData[{
Cell[319879, 8820, 2135, 65, 70, "Input",ExpressionUUID->"4f5311fe-d663-4bf8-b6fb-f51d10a2b9b5",
 CellID->20379994],
Cell[322017, 8887, 810, 31, 53, "Output",ExpressionUUID->"2d9327b2-4dae-4956-a98e-58a4c8fac1d5",
 CellID->647092413]
}, Open  ]],
Cell[322842, 8921, 7270, 182, 70, "Input",ExpressionUUID->"21ee101e-a3a8-4f14-a5b7-72a1d6253748",
 CellID->471136429],
Cell[CellGroupData[{
Cell[330137, 9107, 368, 10, 70, "Input",ExpressionUUID->"37b1258b-5ebb-46fb-a9bc-7e6f8da57a70",
 CellID->396067602],
Cell[330508, 9119, 316, 9, 56, "Output",ExpressionUUID->"d5063990-1c42-4265-a57c-7669168239c1",
 CellID->91876342]
}, Open  ]],
Cell[CellGroupData[{
Cell[330861, 9133, 394, 12, 70, "Input",ExpressionUUID->"7cbfbbf7-3317-4633-995f-59bcb763a0e8",
 CellID->737919],
Cell[331258, 9147, 818, 29, 53, "Output",ExpressionUUID->"e7c93c68-1f93-4eac-9af1-a05a192c747f",
 CellID->65017555]
}, Open  ]],
Cell[CellGroupData[{
Cell[332113, 9181, 3820, 109, 70, "Input",ExpressionUUID->"358492fd-be8e-4c62-b9ed-fab0068babb0",
 CellID->7081445],
Cell[CellGroupData[{
Cell[335958, 9294, 727, 19, 70, "EchoBefore",ExpressionUUID->"104d456c-ed20-4f85-a700-42712bc8cd17",
 CellTags->"407df68d-e655-417b-9ff2-0449c81d58ef",
 CellID->585255656],
Cell[336688, 9315, 1439, 41, 70, "EchoAfter",ExpressionUUID->"db7c6fb7-bb00-4871-a8a4-db62aeb14ff1",
 CellTags->"1e264c9a-d32f-444c-996b-0bb1b507d08a",
 CellID->257068581]
}, Open  ]],
Cell[338142, 9359, 705, 25, 56, "Output",ExpressionUUID->"0b6a67ed-4aa9-4130-9665-a1d90348d6c8",
 CellID->362255658]
}, Open  ]],
Cell[338862, 9387, 7110, 178, 70, "Input",ExpressionUUID->"e0555286-04b9-4743-b069-459394db6064",
 CellID->368103848],
Cell[CellGroupData[{
Cell[345997, 9569, 217, 4, 70, "Input",ExpressionUUID->"14f9af16-385d-483d-8c6a-4795bd0c3d99",
 CellID->75949663],
Cell[346217, 9575, 171, 3, 35, "Output",ExpressionUUID->"f2987302-9878-42ac-aed3-b5ec0289f8ab",
 CellID->16251515]
}, Open  ]],
Cell[CellGroupData[{
Cell[346425, 9583, 222, 4, 70, "Input",ExpressionUUID->"1d6a75e6-46bb-40b7-ab58-6305ec9610be",
 CellID->53162270],
Cell[346650, 9589, 183, 3, 35, "Output",ExpressionUUID->"85dfb224-7cb4-4590-b054-3c2835e0e985",
 CellID->402951547]
}, Open  ]],
Cell[CellGroupData[{
Cell[346870, 9597, 248, 5, 70, "Input",ExpressionUUID->"1bcc0602-d555-4b18-8140-385588c0ea13",
 CellID->229526090],
Cell[347121, 9604, 210, 5, 35, "Output",ExpressionUUID->"efc4a112-1768-49ea-bbb2-559ccad3daa5",
 CellID->798424520]
}, Open  ]],
Cell[CellGroupData[{
Cell[347368, 9614, 273, 6, 70, "Input",ExpressionUUID->"33ecf1d7-c60b-45ff-911d-6dd7a188cedd",
 CellID->224954957],
Cell[347644, 9622, 254, 7, 36, "Output",ExpressionUUID->"fe9312a2-e4e7-41f6-8ed2-7c8d81964d9d",
 CellID->454449641]
}, Open  ]],
Cell[CellGroupData[{
Cell[347935, 9634, 3870, 109, 70, "Input",ExpressionUUID->"8b4b56df-a3e5-452b-9c70-d582d59e68a0",
 CellID->28050259],
Cell[351808, 9745, 193, 4, 53, "Output",ExpressionUUID->"b38e704b-4a3d-4a98-989c-34f881114252",
 CellID->490810363]
}, Open  ]],
Cell[CellGroupData[{
Cell[352038, 9754, 1670, 50, 70, "Input",ExpressionUUID->"1c2c1275-4f5d-40e9-9de5-29cee35164df",
 CellID->404350346],
Cell[353711, 9806, 339, 10, 39, "Output",ExpressionUUID->"bc3b8eb4-7545-438c-be39-5d5cfedf1c26",
 CellID->218827964]
}, Open  ]],
Cell[CellGroupData[{
Cell[354087, 9821, 295, 7, 70, "Input",ExpressionUUID->"4dc2b004-a66c-4281-8531-fc6dc77cd526",
 CellID->690671388],
Cell[354385, 9830, 591, 22, 36, "Output",ExpressionUUID->"8505fd7b-8ce9-492d-ad4e-cfa1b68fe834",
 CellID->763570026]
}, Open  ]],
Cell[CellGroupData[{
Cell[355013, 9857, 417, 13, 70, "Input",ExpressionUUID->"a4066e0c-2ad9-4a8c-a1e7-957557721db1",
 CellID->149289639],
Cell[355433, 9872, 131, 2, 35, "Output",ExpressionUUID->"b6fadd1e-d000-40c0-9050-4f2474ee9411",
 CellID->626446846]
}, Open  ]],
Cell[CellGroupData[{
Cell[355601, 9879, 401, 13, 70, "Input",ExpressionUUID->"f77d5609-f0a5-4741-8c06-8efaf139c695",
 CellID->477936917],
Cell[356005, 9894, 130, 2, 35, "Output",ExpressionUUID->"8e229b96-3fc3-4686-b26f-657acd239245",
 CellID->125609227]
}, Open  ]],
Cell[356150, 9899, 242, 5, 70, "Input",ExpressionUUID->"ed79a72d-971f-4f8c-9804-866fc7fa8f61",
 CellID->29177797],
Cell[CellGroupData[{
Cell[356417, 9908, 234, 6, 70, "Input",ExpressionUUID->"250be2f2-8ad0-4efd-b606-8b2c0b0d9947",
 CellID->669767948],
Cell[356654, 9916, 130, 2, 35, "Output",ExpressionUUID->"1762b7de-92c2-42f2-b83b-c70628067150",
 CellID->304190463]
}, Open  ]],
Cell[CellGroupData[{
Cell[356821, 9923, 1594, 48, 70, "Input",ExpressionUUID->"712a2576-2ac3-4f68-9f65-6632b7939ae2",
 CellID->171821158],
Cell[358418, 9973, 590, 22, 36, "Output",ExpressionUUID->"7c77c2eb-162b-48ba-b3aa-03b5782f42d1",
 CellID->31127353]
}, Open  ]],
Cell[CellGroupData[{
Cell[359045, 10000, 273, 6, 70, "Input",ExpressionUUID->"67830dbc-942f-4041-83ca-5d832cbcf0e1",
 CellID->56910265],
Cell[359321, 10008, 256, 7, 36, "Output",ExpressionUUID->"16f5ba4c-50d5-424a-9a51-d30e9dbdfebe",
 CellID->1010161959]
}, Open  ]],
Cell[CellGroupData[{
Cell[359614, 10020, 273, 6, 70, "Input",ExpressionUUID->"61f47128-ddcd-4934-a0d0-7bcb36a78241",
 CellID->93964102],
Cell[359890, 10028, 193, 4, 53, "Output",ExpressionUUID->"46e501f7-ae1b-4401-a27f-e97d35282ccc",
 CellID->122682045]
}, Open  ]],
Cell[CellGroupData[{
Cell[360120, 10037, 8288, 200, 70, "Input",ExpressionUUID->"0cacd8f5-23dc-4ea0-ac55-a8d2c46faef8",
 CellID->21969815],
Cell[368411, 10239, 253, 7, 36, "Output",ExpressionUUID->"e67930fe-c619-44f7-89b3-a87489619bf5",
 CellID->157418928]
}, Open  ]],
Cell[CellGroupData[{
Cell[368701, 10251, 9976, 249, 70, "Input",ExpressionUUID->"8166455e-febd-4dac-b422-66f59e9787e0",
 CellID->173646475],
Cell[378680, 10502, 251, 6, 36, "Output",ExpressionUUID->"32ac0768-b6a0-47e9-beb7-94ec0c80417a",
 CellID->202299149]
}, Open  ]],
Cell[CellGroupData[{
Cell[378968, 10513, 7462, 194, 70, "Input",ExpressionUUID->"de2936b4-acfa-49d3-b894-732c03afb353",
 CellID->30857652],
Cell[386433, 10709, 253, 7, 36, "Output",ExpressionUUID->"c7bf196a-8ddd-425c-b530-23f2eedd2aaa",
 CellID->516730849]
}, Open  ]],
Cell[CellGroupData[{
Cell[386723, 10721, 10669, 260, 70, "Input",ExpressionUUID->"180f119f-213a-4120-ad9e-5dbda72e643d",
 CellID->34212862],
Cell[397395, 10983, 250, 6, 36, "Output",ExpressionUUID->"23847299-afed-4fcd-a99b-eafd7ab717a0",
 CellID->76091348]
}, Open  ]],
Cell[397660, 10992, 81, 0, 70, "Input",ExpressionUUID->"2023e1e6-8be3-4816-aee8-5334d3df4888"],
Cell[397744, 10994, 81, 0, 70, "Input",ExpressionUUID->"c4d250de-afe1-4bdd-aac9-78cc9ddc7462"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[397864, 10999, 78, 0, 70, "FooterCell",ExpressionUUID->"223be60e-b941-4ad3-b7ef-03b3664eaf07"]
}
]
*)

(* End of internal cache information *)

