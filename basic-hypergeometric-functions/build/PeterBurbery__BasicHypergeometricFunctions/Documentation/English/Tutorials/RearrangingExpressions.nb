(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    275840,       7546]
NotebookOptionsPosition[    260956,       7231]
NotebookOutlinePosition[    263509,       7293]
CellTagsIndexPosition[    263466,       7290]
WindowTitle->Rearranging Expressions
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "PETER BURBERY/ BASIC HYPERGEOMETRIC FUNCTIONS TECH NOTE", 
           "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "48310d9f-4914-4c0d-a176-1f43c0ce4865"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "5aba1258-229c-46f8-afa6-80d158f21a64"],
        Background->RGBColor[
         0.3843137254901961, 0.4627450980392157, 0.7019607843137254],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "c7d68dbd-0d6b-4905-b82d-3328bf8b178f"]
        }],ExpressionUUID->"ab96fb09-5b52-4179-9f98-1edb5fd3da23"],
        StripOnInput->False],{
       "\"PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions\"" :> None, 
        "\"Copy Wolfram Documentation Center URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell["PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions"]}, Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
        "\"Copy web URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell[BoxData[
                MakeBoxes[
                 Hyperlink[
                  "http://reference.wolfram.com/language/PeterBurbery/\
BasicHypergeometricFunctions/tutorial/RearrangingExpressions.html"], 
                  StandardForm]], "Input", TextClipboardType -> "PlainText"]},
               Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        "\"Go to web URL\"" :> 
        FrontEndExecute[{
          NotebookLocate[{
            URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$17306], 
                "http://reference.wolfram.com/system-modeler/", 
                "http://reference.wolfram.com/language/"] <> 
              "PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions" <> ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "7ac6722c-ab06-438b-b781-6aa0c317c2ac"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "264e98a1-cbcb-4a84-ae0e-36ab92f61013"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"54d746c5-b147-4f0f-af45-0324960c4475"],

Cell[CellGroupData[{

Cell["Rearranging Expressions", "TechNoteTitle",
 CellID->555292541,ExpressionUUID->"4392a549-f5bc-4eed-86cd-bd4f56abb022"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Put Q in the front"], 
      "paclet:PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions#2591", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Rearranging"], 
      "paclet:PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions#237748664", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TechNoteJumpBox",ExpressionUUID->"36202f1b-6f51-4ddb-b414-\
d719b00f53bb"],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["PeterBurbery`BasicHypergeometricFunctions`"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "33d3b121-2af1-420b-8d3c-d9ff2a4461b4"],
 " context provide support for placing the q in front."
}], "TechNoteText",
 CellID->34242218,ExpressionUUID->"da171d77-9ecf-45b9-aa05-d6d9041a939a"],

Cell["This loads the package:", "TechNoteMathCaption",
 CellID->513850824,ExpressionUUID->"7bada169-7c3d-4776-b7f7-9de2435b9070"],

Cell[BoxData[
 RowBox[{"<<", "PeterBurbery`BasicHypergeometricFunctions`"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->542855510,ExpressionUUID->"0dee9fdd-35d3-4720-adb9-0ac50b09f781"],

Cell[CellGroupData[{

Cell["Put Q in the front", "TechNoteSection",
 CellID->2591,ExpressionUUID->"e289c6af-e7f4-4b1c-818e-9eda6dd9cb82"],

Cell["\<\
The built-in function PositionQInFrontOfList puts q in front of a list. The \
function works by using UnsortedComplement.\
\>", "TechNoteText",
 CellID->590619292,ExpressionUUID->"b612293d-b26c-4a4f-9c16-0ee176d43931"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositionQInFrontOfList", "[", 
  RowBox[{"{", 
   RowBox[{"b", ",", "c", ",", "d", ",", "q", ",", "f", ",", "q"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->219423307,ExpressionUUID->"c005b7de-a8c7-45df-9f11-f64113601e19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"q", ",", "q", ",", "b", ",", "c", ",", "d", ",", "f"}], 
  "}"}]], "Output",
 CellLabel->"Out[10]=",
 CellID->272831206,ExpressionUUID->"9e37fe5e-f82a-4f84-a340-a0975f379d0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rearranging", "TechNoteSection",
 CellID->237748664,ExpressionUUID->"00036f6a-63fd-4f4f-a2de-66a749e3d47c"],

Cell["This is the expression tree of a a b s a s q s d \
s\[NonBreakingSpace]d:", "TechNoteMathCaption",
 CellID->30906755,ExpressionUUID->"e250cd9f-9b0e-4e7b-8c8b-dd8939ecf38b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleInput", "=", 
  RowBox[{
  "a", " ", "b", " ", "s", " ", "a", " ", "s", " ", "q", " ", "s", " ", "d", 
   " ", "s", " ", "d"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->501709717,ExpressionUUID->"1542516c-d21f-43bc-a96f-434c0b7c4782"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "2"], " ", "b", " ", 
  SuperscriptBox["d", "2"], " ", "q", " ", 
  SuperscriptBox["s", "4"]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->187249567,ExpressionUUID->"488c71cf-7b69-4b59-85bc-82928f353118"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpressionTree", "[", "exampleInput", "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->45907700,ExpressionUUID->"afa7c4e4-7e9c-42d8-8885-a887ef7faee4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[Times, {
       Tree[Power, {
         Tree[$CellContext`a, None], 
         Tree[2, None]}], 
       Tree[$CellContext`b, None], 
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}], 
       Tree[$CellContext`q, None], 
       Tree[Power, {
         Tree[$CellContext`s, None], 
         Tree[4, None]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         0.3496029493900505, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         1.0488088481701514`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         1.7480147469502525`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         2.4472206457303534`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
         3.1464265445104544`, 0.7574021974529568}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3496029493900505, 0.7574021974529568}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3496029493900505, 0.7574021974529568}, {0.699205898780101,
          0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
         1.398411797560202, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
         2.097617696340303, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
         2.796823595120404, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
         3.496029493900505, 0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7480147469502525, 1.5148043949059136}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.3496029493900505, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["a",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.699205898780101, 0.}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.0488088481701514, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7480147469502525, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.398411797560202, 0.}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.097617696340303, 0.}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.4472206457303534, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.1464265445104544, 0.7574021974529568}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox["s",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.796823595120404, 0.}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox["4",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.496029493900505, 0.}],
        "DynamicName",
        BoxID -> "VertexID$12"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[4]=",
 CellID->895181536,ExpressionUUID->"8107efe8-ed22-4c56-87de-5eaa90656bb7"]
}, Open  ]],

Cell["\<\
We want to put q in the front. We need to verify q is in the expression first:\
\>", "TechNoteMathCaption",
 CellID->340949841,ExpressionUUID->"f8838af4-b20d-4ec5-a66f-f7d8b078f083"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"exampleInput", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->152984908,ExpressionUUID->"3ffb77c4-590c-4ead-a50c-cb1b18c855f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "4", "}"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->130135511,ExpressionUUID->"c93a09c0-c592-4a37-a1c9-a736cb2815d0"]
}, Open  ]],

Cell["An expression without q would have a different output.", \
"TechNoteMathCaption",
 CellID->579788294,ExpressionUUID->"2e56b696-7921-4dd2-bf7d-0c15be4b3e70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expressionWithNoQ", "=", 
  RowBox[{"b", " ", "d"}]}]], "Input",
 CellLabel->"In[6]:=",
 CellID->8585758,ExpressionUUID->"9e3189cf-1dac-4683-b068-aa39e4a347fe"],

Cell[BoxData[
 RowBox[{"b", " ", "d"}]], "Output",
 CellLabel->"Out[6]=",
 CellID->15928604,ExpressionUUID->"4705ed4c-77f3-4d52-93c1-3e4e4dd55fb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"expressionWithNoQ", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1001352657,ExpressionUUID->"8d2cec3f-4b54-43fc-ae0e-c64bd1ae354a"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->555168197,ExpressionUUID->"ed66c2d4-31f0-4bb5-ba5d-b990fa15b75b"]
}, Open  ]],

Cell["The q could be raised to a power:", "TechNoteMathCaption",
 CellID->210058381,ExpressionUUID->"8565d89a-3dc1-40ac-acd5-d801d217a040"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qraisedtothepower", "=", 
  RowBox[{"b", " ", "d", " ", 
   SuperscriptBox["q", "2"], " ", "d", " ", "b"}]}]], "Input",
 CellLabel->"In[8]:=",
 CellID->3618976,ExpressionUUID->"2de0fa28-d123-428b-b5e2-98d1c8625d06"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["b", "2"], " ", 
  SuperscriptBox["d", "2"], " ", 
  SuperscriptBox["q", "2"]}]], "Output",
 CellLabel->"Out[8]=",
 CellID->60384182,ExpressionUUID->"94746ca0-d6f1-48e7-8278-248ff52f0647"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"qraisedtothepower", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->158897045,ExpressionUUID->"660b225c-1422-4319-8e29-d30e3deb8688"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"3", ",", "1"}], "}"}], "}"}]], "Output",
 CellLabel->"Out[9]=",
 CellID->90949083,ExpressionUUID->"601fecce-349c-4039-8f5b-2f1b74399bd6"]
}, Open  ]],

Cell["\<\
Let's look at these three examples from the perspective of Cases:\
\>", "TechNoteMathCaption",
 CellID->45747336,ExpressionUUID->"2af08122-2b75-4880-a344-84d2102e1006"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"exampleInput", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->106947108,ExpressionUUID->"66b70e28-e77a-447e-a23b-1b9e9d0d56eb"],

Cell[BoxData[
 RowBox[{"{", "q", "}"}]], "Output",
 CellLabel->"Out[10]=",
 CellID->688234202,ExpressionUUID->"4c82f576-35b3-4c89-9dda-a2b8fadfdd98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"expressionWithNoQ", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->289386853,ExpressionUUID->"4468754d-b339-4a2a-9d0d-4595095e64b6"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[11]=",
 CellID->383066580,ExpressionUUID->"48a35c84-046a-4567-9766-96920108ee49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"qraisedtothepower", ",", "q"}], "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->616336306,ExpressionUUID->"d79fbaf0-27e6-49a8-aa49-3068b2ea26df"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[12]=",
 CellID->287890430,ExpressionUUID->"f29a22a9-3747-4e8f-b627-7b11e218ce82"]
}, Open  ]],

Cell["\<\
The last example should have something, but q is on a higher level. Let's \
look at the expression tree.\
\>", "TechNoteMathCaption",
 CellID->657986846,ExpressionUUID->"58782be3-aee4-4688-9aa0-f67ced329f3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->3639185,ExpressionUUID->"53397038-fd0e-4d9a-9edd-b596769b620d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[Times, {
       Tree[Power, {
         Tree[$CellContext`b, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}], 
       Tree[Power, {
         Tree[$CellContext`q, None], 
         Tree[2, None]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
         0.34874291623145787`, 0.7555526554078994}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
         1.7437145811572892`, 0.7555526554078994}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
         3.1386862460831204`, 0.7555526554078994}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
         0.6974858324629157, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
         1.3949716649258315`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
         2.092457497388747, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
         2.789943329851663, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
         3.4874291623145783`, 0.}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 0.}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.6974858324629157, 0.}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.3949716649258315, 0.}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.092457497388747, 0.}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.789943329851663, 0.}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.4874291623145783, 0.}],
        "DynamicName",
        BoxID -> "VertexID$10"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[13]=",
 CellID->781595662,ExpressionUUID->"84c8a925-7c7f-43d1-9477-0b21d4c74fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->106876852,ExpressionUUID->"b8a9ab4a-ca17-489b-a112-77b3eb665233"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`b, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`q, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[14]=",
 CellID->78099367,ExpressionUUID->"c1912582-c320-4a31-a835-d77a09a1b203"]
}, Open  ]],

Cell["q is on the second level:", "TechNoteMathCaption",
 CellID->201555096,ExpressionUUID->"ea217606-4fc7-4ae5-b860-1a9d9c0c9bb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", "2"}], 
  "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->76274047,ExpressionUUID->"7365682a-9352-4f44-8e92-8fa88547b46e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`b, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Power, {
         Tree[$CellContext`q, None], 
         Tree[2, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[15]=",
 CellID->268218734,ExpressionUUID->"d0cf1f2d-53e1-484a-9edc-173b312ec335"]
}, Open  ]],

Cell["\<\
We might want just level 2 and not the subtrees. We can specify this:\
\>", "TechNoteMathCaption",
 CellID->116384939,ExpressionUUID->"193fd985-a1c8-4cb4-8049-61c540b24416"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->11721902,ExpressionUUID->"1650bdc2-d3dd-44d2-935a-cb0166afa61e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[16]=",
 CellID->122696485,ExpressionUUID->"f3d6bc50-6c9c-40f3-bf12-4a151619f9cb"]
}, Open  ]],

Cell["q is in the leaves:", "TechNoteMathCaption",
 CellID->7379660,ExpressionUUID->"86b94b57-eaac-4303-81af-a7050b4a3f0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLeaves", "[", 
  RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], "]"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->57152497,ExpressionUUID->"fc483901-d97e-4372-9f6a-9813c3022a4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[17]=",
 CellID->99386605,ExpressionUUID->"c5e71275-b015-4f09-85eb-6a48969472f9"]
}, Open  ]],

Cell["We can also use -1 level specification:", "TechNoteMathCaption",
 CellID->600024437,ExpressionUUID->"124a6d2d-ea42-451a-94ee-c679eb1ebe95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeLevel", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->356384648,ExpressionUUID->"85f25a87-aaee-49ac-aec1-40dc56984d69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[18]=",
 CellID->51287920,ExpressionUUID->"44758134-dc52-4f6e-9723-314aab58a870"]
}, Open  ]],

Cell["Another way to get q is with TreeLeafQ:", "TechNoteMathCaption",
 CellID->32533157,ExpressionUUID->"ef013166-4ead-44c5-b462-ff65ddc99d01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
   "TreeLeafQ"}], "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->221488453,ExpressionUUID->"0416be1e-c919-43ec-aa1e-85469159a7b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`b, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`d, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[$CellContext`q, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[2, None]]}, 
      NamespaceBox[{{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1., 1.}],
          "DynamicName",
          BoxID -> "VertexID$1"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->0.1,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[19]=",
 CellID->44145120,ExpressionUUID->"35e9dc97-64da-40ab-bf0d-b1170d95795f"]
}, Open  ]],

Cell["We can get the data with TreeData:", "TechNoteMathCaption",
 CellID->441304007,ExpressionUUID->"a2133ad2-2225-44aa-9f09-fb71192a71ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeData", "/@", 
  RowBox[{"TreeSelect", "[", 
   RowBox[{
    RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}], ",", 
    "TreeLeafQ"}], "]"}]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->784023909,ExpressionUUID->"a58c9ff8-287c-44c1-b668-5330c449eee6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "2", ",", "d", ",", "2", ",", "q", ",", "2"}], 
  "}"}]], "Output",
 CellLabel->"Out[20]=",
 CellID->565604538,ExpressionUUID->"81941b3a-1333-4d5a-a4ac-58c4a01cf9cd"]
}, Open  ]],

Cell["\<\
If q is in the expression, then q will be in this list. Otherwise it will not \
be.\
\>", "TechNoteMathCaption",
 CellID->48363548,ExpressionUUID->"5149010d-c608-4898-8767-cfd634db1877"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeData", "/@", 
  RowBox[{"TreeSelect", "[", 
   RowBox[{
    RowBox[{"ExpressionTree", "[", "expressionWithNoQ", "]"}], ",", 
    "TreeLeafQ"}], "]"}]}]], "Input",
 CellLabel->"In[21]:=",
 CellID->265849720,ExpressionUUID->"0994fd9e-af71-478d-908d-4500620df444"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "d"}], "}"}]], "Output",
 CellLabel->"Out[21]=",
 CellID->36210837,ExpressionUUID->"affd3fdf-d9ac-416c-862d-47ff1e8b97d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"TreeData", "/@", 
    RowBox[{"TreeSelect", "[", 
     RowBox[{
      RowBox[{"ExpressionTree", "[", "expressionWithNoQ", "]"}], ",", 
      "TreeLeafQ"}], "]"}]}], ",", "q"}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->10018807,ExpressionUUID->"fd7a6e53-b654-4cbc-b5ee-9f48f9ec5f56"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[22]=",
 CellID->90942833,ExpressionUUID->"e76d88ee-cf9e-4426-9e7b-7134e41378e3"]
}, Open  ]],

Cell["Make a function to test if q is in an expression:", \
"TechNoteMathCaption",
 CellID->222360495,ExpressionUUID->"7d92d8c6-2ea7-4ba0-8219-43584f030b73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myQWithinExpressionQ", "[", "input_", "]"}], ":=", 
  RowBox[{"MemberQ", "[", 
   RowBox[{
    RowBox[{"TreeData", "/@", 
     RowBox[{"TreeSelect", "[", 
      RowBox[{
       RowBox[{"ExpressionTree", "[", "input", "]"}], ",", "TreeLeafQ"}], 
      "]"}]}], ",", "q"}], "]"}]}]], "Input",
 CellLabel->"In[23]:=",
 CellID->876159263,ExpressionUUID->"82beeeb9-2a8c-4463-af42-1005bc5440b5"],

Cell["Test the function:", "TechNoteMathCaption",
 CellID->140693972,ExpressionUUID->"bb3a1f82-6483-45e6-bf09-9be803a1b346"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myQWithinExpressionQ", "[", "expressionWithNoQ", "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->676058770,ExpressionUUID->"d8f63307-e67d-4fc8-a97d-402c45b59692"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[24]=",
 CellID->173651887,ExpressionUUID->"eea12d2b-f043-46fd-85dd-2cbf4f625467"]
}, Open  ]],

Cell["\<\
Test all the examples with the SameTest QInExpressionQ[#1] == #2.\
\>", "TechNoteMathCaption",
 CellID->362701572,ExpressionUUID->"9acb1795-a990-4a13-8873-c90e28be41a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestReport", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TestCreate", "[", 
       RowBox[{"#1", ",", "#2", ",", 
        RowBox[{"TestID", "->", "Automatic"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "expressionWithNoQ", ",", "qraisedtothepower", ",", "exampleInput"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True", ",", "True"}], "}"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"SameTest", "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"myQWithinExpressionQ", "[", "#1", "]"}], "==", "#2"}], "&"}], 
     ")"}]}]}], "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->569912814,ExpressionUUID->"19d0214e-62ae-45d5-aa1b-60302fc7b9e9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0006032`3.4538550759740443", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> Automatic, "Aborted" -> False, 
    "TestResults" -> <|
     4703637773967450255 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8949755148313847`*^9, 
         "SameTest" -> ($CellContext`myQWithinExpressionQ[#] == #2& ), 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "fb859b59-9cf7-4585-b8a0-262124d60501", "TestID" -> 
         "8597f48c-5968-4d71-b784-bd13651c719b", "TestFileName" -> "", 
         "EvaluationID" -> "59248cc9-f369-43da-978f-beb1c27e49c8", "Input" -> 
         HoldForm[$CellContext`b $CellContext`d], "ExpectedOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[$CellContext`b $CellContext`d], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
         "MemoryUsed" -> 2152, "Outcome" -> "Success"|>], 7194249459347865311 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8949755148313847`*^9, 
         "SameTest" -> ($CellContext`myQWithinExpressionQ[#] == #2& ), 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "f8443332-ea6d-4078-8191-b0afea29f6b9", "TestID" -> 
         "469b6c47-bc5d-473d-9e92-f64edbf645b5", "TestFileName" -> "", 
         "EvaluationID" -> "3fdb3916-d1ad-4264-83ed-b017e565b2c7", "Input" -> 
         HoldForm[($CellContext`b^2 $CellContext`d^2) $CellContext`q^2], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[($CellContext`b^2 $CellContext`d^2) $CellContext`q^2], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0006032`3.9309763306937073, "CPUTimeUsed" -> 0., "MemoryUsed" -> 
         2544, "Outcome" -> "Success"|>], 503140813721197662 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8949755148325334`*^9, 
         "SameTest" -> ($CellContext`myQWithinExpressionQ[#] == #2& ), 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "d4ea5852-8e96-4918-8628-c69108596c20", "TestID" -> 
         "dd16a253-8190-453d-8b82-04ad766f3607", "TestFileName" -> "", 
         "EvaluationID" -> "824896fd-2d61-4813-a091-4f8ec63a2cd0", "Input" -> 
         HoldForm[((($CellContext`a^2 $CellContext`b) $CellContext`d^2) \
$CellContext`q) $CellContext`s^4], "ExpectedOutput" -> HoldForm[True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[((($CellContext`a^2 $CellContext`b) $CellContext`d^2) \
$CellContext`q) $CellContext`s^4], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0``7.1505149978319915, "CPUTimeUsed" -> 0., "MemoryUsed" -> 2184, 
         "Outcome" -> "Success"|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {4703637773967450255, 7194249459347865311, 
     503140813721197662}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[25]=",
 CellID->466247083,ExpressionUUID->"a2d3cb23-f362-4b5c-a1bc-da580aaa66bf"]
}, Open  ]],

Cell["There is now the function QWithinExpressionQ built in.", \
"TechNoteMathCaption",
 CellID->860484422,ExpressionUUID->"97132d86-e5d0-45e3-802f-58f9f0f39315"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QWithinExpressionQ", "/@", 
  RowBox[{"{", 
   RowBox[{
   "expressionWithNoQ", ",", "qraisedtothepower", ",", "exampleInput"}], 
   "}"}]}]], "Input",
 CellLabel->"In[27]:=",
 CellID->200160651,ExpressionUUID->"add0c371-31b9-4367-bc72-eb4c040e00e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True", ",", "True"}], "}"}]], "Output",
 CellLabel->"Out[27]=",
 CellID->5616810,ExpressionUUID->"167bdd41-fd93-47ac-ab49-db1c26338de0"]
}, Open  ]],

Cell["\<\
Let's look at two examples and try to find some similarities:\
\>", "TechNoteMathCaption",
 CellID->38347245,ExpressionUUID->"9c17d504-b7ec-49f5-aa76-01b975d8b4ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ExpressionTree", "[", "exampleInput", "]"}], ",", 
    RowBox[{"ExpressionTree", "[", "qraisedtothepower", "]"}]}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->26282727,ExpressionUUID->"724adc3c-0673-4c79-83a0-9b35580656c0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["Trees",
       DynamicModuleBox[{Typeset`tree = HoldComplete[
         Tree[Times, {
           Tree[Power, {
             Tree[$CellContext`a, None], 
             Tree[2, None]}], 
           Tree[$CellContext`b, None], 
           Tree[Power, {
             Tree[$CellContext`d, None], 
             Tree[2, None]}], 
           Tree[$CellContext`q, None], 
           Tree[Power, {
             Tree[$CellContext`s, None], 
             Tree[4, None]}]}]]}, 
        NamespaceBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             0.3496029493900505, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             1.0488088481701514`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             1.7480147469502525`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             2.4472206457303534`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
             3.1464265445104544`, 0.7574021974529568}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.3496029493900505, 0.7574021974529568}, {0., 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.3496029493900505, 0.7574021974529568}, {
             0.699205898780101, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
             1.398411797560202, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
             2.097617696340303, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
             2.796823595120404, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
             3.496029493900505, 0.}}]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           TagBox[InsetBox[
             FrameBox["Times",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7480147469502525, 1.5148043949059136}],
            "DynamicName",
            BoxID -> "VertexID$1"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {0.3496029493900505, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$2"], 
           TagBox[InsetBox[
             FrameBox["a",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0., 0.}],
            "DynamicName",
            BoxID -> "VertexID$3"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0.699205898780101, 0.}],
            "DynamicName",
            BoxID -> "VertexID$4"], 
           TagBox[InsetBox[
             FrameBox["b",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {1.0488088481701514, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$5"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7480147469502525, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$6"], 
           TagBox[InsetBox[
             FrameBox["d",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {1.398411797560202, 0.}],
            "DynamicName",
            BoxID -> "VertexID$7"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.097617696340303, 0.}],
            "DynamicName",
            BoxID -> "VertexID$8"], 
           TagBox[InsetBox[
             FrameBox["q",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.4472206457303534, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$9"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {3.1464265445104544, 0.7574021974529568}],
            "DynamicName",
            BoxID -> "VertexID$10"], 
           TagBox[InsetBox[
             FrameBox["s",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.796823595120404, 0.}],
            "DynamicName",
            BoxID -> "VertexID$11"], 
           TagBox[InsetBox[
             FrameBox["4",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {3.496029493900505, 0.}],
            "DynamicName",
            BoxID -> "VertexID$12"]}}]]],
      AlignmentPoint->Center,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ContentSelectable->Automatic,
      DefaultBaseStyle->"TreeGraphics",
      Epilog->{},
      FormatType->StandardForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->None,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Automatic,
      LabelStyle->{},
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}], 
     GraphicsBox[
      NamespaceBox["Trees",
       DynamicModuleBox[{Typeset`tree = HoldComplete[
         Tree[Times, {
           Tree[Power, {
             Tree[$CellContext`b, None], 
             Tree[2, None]}], 
           Tree[Power, {
             Tree[$CellContext`d, None], 
             Tree[2, None]}], 
           Tree[Power, {
             Tree[$CellContext`q, None], 
             Tree[2, None]}]}]]}, 
        NamespaceBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
             0.34874291623145787`, 0.7555526554078994}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
             1.7437145811572892`, 0.7555526554078994}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
             3.1386862460831204`, 0.7555526554078994}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
             0.6974858324629157, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
             1.3949716649258315`, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
             2.092457497388747, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
             2.789943329851663, 0.}}]}, 
           {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
            AbsoluteThickness[1], 
            LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
             3.4874291623145783`, 0.}}]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           TagBox[InsetBox[
             FrameBox["Times",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
            "DynamicName",
            BoxID -> "VertexID$1"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
            "DynamicName",
            BoxID -> "VertexID$2"], 
           TagBox[InsetBox[
             FrameBox["b",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0., 0.}],
            "DynamicName",
            BoxID -> "VertexID$3"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {0.6974858324629157, 0.}],
            "DynamicName",
            BoxID -> "VertexID$4"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
            "DynamicName",
            BoxID -> "VertexID$5"], 
           TagBox[InsetBox[
             FrameBox["d",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {1.3949716649258315, 0.}],
            "DynamicName",
            BoxID -> "VertexID$6"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.092457497388747, 0.}],
            "DynamicName",
            BoxID -> "VertexID$7"], 
           TagBox[InsetBox[
             FrameBox["Power",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->4,
              StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
            "DynamicName",
            BoxID -> "VertexID$8"], 
           TagBox[InsetBox[
             FrameBox["q",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {2.789943329851663, 0.}],
            "DynamicName",
            BoxID -> "VertexID$9"], 
           TagBox[InsetBox[
             FrameBox["2",
              Background->Directive[
                RGBColor[
                0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
              BaseStyle->GrayLevel[0],
              FrameMargins->{{2, 2}, {1, 1}},
              FrameStyle->Directive[
                RGBColor[
                0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
                AbsoluteThickness[1], 
                Opacity[1]],
              ImageSize->Automatic,
              RoundingRadius->0,
              StripOnInput->False], {3.4874291623145783, 0.}],
            "DynamicName",
            BoxID -> "VertexID$10"]}}]]],
      AlignmentPoint->Center,
      Axes->False,
      AxesLabel->None,
      AxesOrigin->Automatic,
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ContentSelectable->Automatic,
      DefaultBaseStyle->"TreeGraphics",
      Epilog->{},
      FormatType->StandardForm,
      Frame->False,
      FrameLabel->None,
      FrameStyle->{},
      FrameTicks->None,
      FrameTicksStyle->{},
      GridLines->None,
      GridLinesStyle->{},
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->Automatic,
      LabelStyle->{},
      PlotLabel->None,
      PlotRange->All,
      PlotRangeClipping->False,
      PlotRangePadding->Automatic,
      PlotRegion->Automatic,
      Prolog->{},
      RotateLabel->True,
      Ticks->Automatic,
      TicksStyle->{}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[31]=",
 CellID->434215884,ExpressionUUID->"cfcbbb5c-53db-400b-b113-44c26b8cecc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "exampleInput", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TreeData", "[", "#", "]"}], "==", "Times"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"TreeData", "/@", 
        RowBox[{"TreeLeaves", "[", "#", "]"}]}], ",", "q"}], "]"}]}], "&"}]}],
   "]"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->466437509,ExpressionUUID->"b4839ee4-2c41-4b36-94a0-7b8578dcef1d"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   NamespaceBox["Trees",
    DynamicModuleBox[{Typeset`tree = HoldComplete[
      Tree[Times, {
        Tree[Power, {
          Tree[$CellContext`a, None], 
          Tree[2, None]}], 
        Tree[$CellContext`b, None], 
        Tree[Power, {
          Tree[$CellContext`d, None], 
          Tree[2, None]}], 
        Tree[$CellContext`q, None], 
        Tree[Power, {
          Tree[$CellContext`s, None], 
          Tree[4, None]}]}]]}, 
     NamespaceBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          0.3496029493900505, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          1.0488088481701514`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          1.7480147469502525`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          2.4472206457303534`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 1.5148043949059136`}, {
          3.1464265445104544`, 0.7574021974529568}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{0.3496029493900505, 0.7574021974529568}, {0., 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{0.3496029493900505, 0.7574021974529568}, {
          0.699205898780101, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
          1.398411797560202, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{1.7480147469502525`, 0.7574021974529568}, {
          2.097617696340303, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
          2.796823595120404, 0.}}]}, 
        {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
         AbsoluteThickness[1], 
         LineBox[{{3.1464265445104544`, 0.7574021974529568}, {
          3.496029493900505, 0.}}]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[InsetBox[
          FrameBox["Times",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {1.7480147469502525, 1.5148043949059136}],
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[InsetBox[
          FrameBox["Power",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {0.3496029493900505, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[InsetBox[
          FrameBox["a",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {0., 0.}],
         "DynamicName",
         BoxID -> "VertexID$3"], 
        TagBox[InsetBox[
          FrameBox["2",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {0.699205898780101, 0.}],
         "DynamicName",
         BoxID -> "VertexID$4"], 
        TagBox[InsetBox[
          FrameBox["b",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {1.0488088481701514, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$5"], 
        TagBox[InsetBox[
          FrameBox["Power",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {1.7480147469502525, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$6"], 
        TagBox[InsetBox[
          FrameBox["d",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {1.398411797560202, 0.}],
         "DynamicName",
         BoxID -> "VertexID$7"], 
        TagBox[InsetBox[
          FrameBox["2",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {2.097617696340303, 0.}],
         "DynamicName",
         BoxID -> "VertexID$8"], 
        TagBox[InsetBox[
          FrameBox["q",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {2.4472206457303534, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$9"], 
        TagBox[InsetBox[
          FrameBox["Power",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->4,
           StripOnInput->False], {3.1464265445104544, 0.7574021974529568}],
         "DynamicName",
         BoxID -> "VertexID$10"], 
        TagBox[InsetBox[
          FrameBox["s",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {2.796823595120404, 0.}],
         "DynamicName",
         BoxID -> "VertexID$11"], 
        TagBox[InsetBox[
          FrameBox["4",
           Background->Directive[
             RGBColor[
             0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
           BaseStyle->GrayLevel[0],
           FrameMargins->{{2, 2}, {1, 1}},
           FrameStyle->Directive[
             RGBColor[
             0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
             AbsoluteThickness[1], 
             Opacity[1]],
           ImageSize->Automatic,
           RoundingRadius->0,
           StripOnInput->False], {3.496029493900505, 0.}],
         "DynamicName",
         BoxID -> "VertexID$12"]}}]]],
   AlignmentPoint->Center,
   Axes->False,
   AxesLabel->None,
   AxesOrigin->Automatic,
   AxesStyle->{},
   Background->None,
   BaseStyle->{},
   BaselinePosition->Automatic,
   ContentSelectable->Automatic,
   DefaultBaseStyle->"TreeGraphics",
   Epilog->{},
   FormatType->StandardForm,
   Frame->False,
   FrameLabel->None,
   FrameStyle->{},
   FrameTicks->None,
   FrameTicksStyle->{},
   GridLines->None,
   GridLinesStyle->{},
   ImageMargins->0.,
   ImagePadding->All,
   ImageSize->Automatic,
   LabelStyle->{},
   PlotLabel->None,
   PlotRange->All,
   PlotRangeClipping->False,
   PlotRangePadding->Automatic,
   PlotRegion->Automatic,
   Prolog->{},
   RotateLabel->True,
   Ticks->Automatic,
   TicksStyle->{}], "}"}]], "Output",
 CellLabel->"Out[34]=",
 CellID->581867833,ExpressionUUID->"5c162d0f-d327-443a-a8bc-5f4ac9e44d7f"]
}, Open  ]],

Cell["Let's add Times but without a q:", "TechNoteMathCaption",
 CellID->46456499,ExpressionUUID->"c3f2f89c-9482-4f53-98b1-6c9fc2a23c33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"complicatedexpression", "=", 
  FractionBox["exampleInput", 
   RowBox[{"expressionWithNoQ", "+", "qraisedtothepower"}]]}]], "Input",
 CellLabel->"In[39]:=",
 CellID->30529297,ExpressionUUID->"546a60cf-d081-49f5-aa14-fa702e72a761"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", "b", " ", 
   SuperscriptBox["d", "2"], " ", "q", " ", 
   SuperscriptBox["s", "4"]}], 
  RowBox[{
   RowBox[{"b", " ", "d"}], "+", 
   RowBox[{
    SuperscriptBox["b", "2"], " ", 
    SuperscriptBox["d", "2"], " ", 
    SuperscriptBox["q", "2"]}]}]]], "Output",
 CellLabel->"Out[39]=",
 CellID->315960114,ExpressionUUID->"9103b4bb-7813-45f2-a6d7-9a32cded2b51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpressionTree", "[", "complicatedexpression", "]"}]], "Input",
 CellLabel->"In[40]:=",
 CellID->562027770,ExpressionUUID->"ab190343-3149-4f6a-8623-4ccb8dedd90a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[Times, {
       Tree[Power, {
         Tree[$CellContext`a, None], 
         Tree[2, None]}], 
       Tree[$CellContext`b, None], 
       Tree[Power, {
         Tree[$CellContext`d, None], 
         Tree[2, None]}], 
       Tree[$CellContext`q, None], 
       Tree[Power, {
         Tree[Plus, {
           Tree[Times, {
             Tree[$CellContext`b, None], 
             Tree[$CellContext`d, None]}], 
           Tree[Times, {
             Tree[Power, {
               Tree[$CellContext`b, None], 
               Tree[2, None]}], 
             Tree[Power, {
               Tree[$CellContext`d, None], 
               Tree[2, None]}], 
             Tree[Power, {
               Tree[$CellContext`q, None], 
               Tree[2, None]}]}]}], 
         Tree[-1, None]}], 
       Tree[Power, {
         Tree[$CellContext`s, None], 
         Tree[4, None]}]}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021301775466617948`], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         0.3124886978064666, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         0.9374660934193997, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         1.5624434890323329`, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {2.187420884645266,
          2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {
         2.8123982802581993`, 2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.187420884645266, 3.2305571152089323`}, {4.062353071484066,
          2.5844456921671464`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3124886978064666, 2.5844456921671464`}, {0., 
         1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.3124886978064666, 2.5844456921671464`}, {
         0.6249773956129332, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
         1.2499547912258664`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
         1.8749321868387994`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
         2.499909582451733, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
         3.1248869780646658`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.499909582451733, 1.9383342691253593`}, {
         1.4061991401290996`, 1.2922228460835732`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.499909582451733, 1.9383342691253593`}, {
         3.5936200247743657`, 1.2922228460835732`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
         1.093710442322633, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
         1.7186878379355661`, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
         2.3436652335484993`, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
         3.5936200247743657`, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
         4.843574816000232, 0.6461114230417864}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
         2.031176535742033, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
         2.656153931354966, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
         3.281131326967899, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
         3.906108722580832, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.843574816000232, 0.6461114230417864}, {4.531086118193765, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.843574816000232, 0.6461114230417864}, {5.156063513806698, 
         0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.062353071484066, 2.5844456921671464`}, {
         3.7498643736775987`, 1.9383342691253593`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.062353071484066, 2.5844456921671464`}, {4.374841769290532,
          1.9383342691253593`}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.187420884645266, 3.2305571152089323}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.3124886978064666, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox["a",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0., 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.6249773956129332, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.9374660934193997, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.5624434890323329, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.2499547912258664, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.8749321868387994, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.187420884645266, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.8123982802581993, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox["Plus",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.499909582451733, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.4061991401290996, 1.2922228460835732}],
        "DynamicName",
        BoxID -> "VertexID$12"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.093710442322633, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$13"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.7186878379355661, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$14"], 
       TagBox[InsetBox[
         FrameBox["Times",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.5936200247743657, 1.2922228460835732}],
        "DynamicName",
        BoxID -> "VertexID$15"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.3436652335484993, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$16"], 
       TagBox[InsetBox[
         FrameBox["b",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.031176535742033, 0.}],
        "DynamicName",
        BoxID -> "VertexID$17"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {2.656153931354966, 0.}],
        "DynamicName",
        BoxID -> "VertexID$18"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.5936200247743657, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$19"], 
       TagBox[InsetBox[
         FrameBox["d",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.281131326967899, 0.}],
        "DynamicName",
        BoxID -> "VertexID$20"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.906108722580832, 0.}],
        "DynamicName",
        BoxID -> "VertexID$21"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.843574816000232, 0.6461114230417864}],
        "DynamicName",
        BoxID -> "VertexID$22"], 
       TagBox[InsetBox[
         FrameBox["q",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.531086118193765, 0.}],
        "DynamicName",
        BoxID -> "VertexID$23"], 
       TagBox[InsetBox[
         FrameBox["2",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {5.156063513806698, 0.}],
        "DynamicName",
        BoxID -> "VertexID$24"], 
       TagBox[InsetBox[
         FrameBox[
          RowBox[{"-", "1"}],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.1248869780646658, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$25"], 
       TagBox[InsetBox[
         FrameBox["Power",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.062353071484066, 2.5844456921671464}],
        "DynamicName",
        BoxID -> "VertexID$26"], 
       TagBox[InsetBox[
         FrameBox["s",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {3.7498643736775987, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$27"], 
       TagBox[InsetBox[
         FrameBox["4",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {4.374841769290532, 1.9383342691253593}],
        "DynamicName",
        BoxID -> "VertexID$28"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[40]=",
 CellID->601819694,ExpressionUUID->"afcc092f-35b7-4fcc-b26b-92d5ac91f7b1"]
}, Open  ]],

Cell["Which Times contain a q?", "TechNoteMathCaption",
 CellID->194616050,ExpressionUUID->"77777825-f8e5-4ced-be9c-4cc1309fbd28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "complicatedexpression", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TreeData", "[", "#", "]"}], "==", "Times"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"TreeData", "/@", 
        RowBox[{"TreeLeaves", "[", "#", "]"}]}], ",", "q"}], "]"}]}], "&"}], 
   ",", "Infinity"}], "]"}]], "Input",
 CellLabel->"In[43]:=",
 CellID->233755330,ExpressionUUID->"72c77568-5553-4447-b7b6-5d1fe557a34e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`b, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`q, None], 
           Tree[2, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           0.34874291623145787`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           1.7437145811572892`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           3.1386862460831204`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
           0.6974858324629157, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           1.3949716649258315`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           2.092457497388747, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           2.789943329851663, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           3.4874291623145783`, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6974858324629157, 0.}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.3949716649258315, 0.}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.092457497388747, 0.}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.789943329851663, 0.}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.4874291623145783, 0.}],
          "DynamicName",
          BoxID -> "VertexID$10"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`a, None], 
           Tree[2, None]}], 
         Tree[$CellContext`b, None], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[$CellContext`q, None], 
         Tree[Power, {
           Tree[Plus, {
             Tree[Times, {
               Tree[$CellContext`b, None], 
               Tree[$CellContext`d, None]}], 
             Tree[Times, {
               Tree[Power, {
                 Tree[$CellContext`b, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`d, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`q, None], 
                 Tree[2, None]}]}]}], 
           Tree[-1, None]}], 
         Tree[Power, {
           Tree[$CellContext`s, None], 
           Tree[4, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021301775466617948`], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.3124886978064666, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.9374660934193997, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           1.5624434890323329`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.187420884645266, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.8123982802581993`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           4.062353071484066, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {0., 
           1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {
           0.6249773956129332, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.2499547912258664`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.8749321868387994`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           2.499909582451733, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           3.1248869780646658`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           1.4061991401290996`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           3.5936200247743657`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.093710442322633, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.7186878379355661`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           2.3436652335484993`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           3.5936200247743657`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           4.843574816000232, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.031176535742033, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.656153931354966, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.281131326967899, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.906108722580832, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           4.531086118193765, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           5.156063513806698, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           3.7498643736775987`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           4.374841769290532, 1.9383342691253593`}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.187420884645266, 3.2305571152089323}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.3124886978064666, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["a",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6249773956129332, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.9374660934193997, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.5624434890323329, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.2499547912258664, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.8749321868387994, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.187420884645266, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.8123982802581993, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["Plus",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.499909582451733, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.4061991401290996, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.093710442322633, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$13"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.7186878379355661, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$14"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$15"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.3436652335484993, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$16"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.031176535742033, 0.}],
          "DynamicName",
          BoxID -> "VertexID$17"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.656153931354966, 0.}],
          "DynamicName",
          BoxID -> "VertexID$18"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$19"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.281131326967899, 0.}],
          "DynamicName",
          BoxID -> "VertexID$20"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.906108722580832, 0.}],
          "DynamicName",
          BoxID -> "VertexID$21"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.843574816000232, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$22"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.531086118193765, 0.}],
          "DynamicName",
          BoxID -> "VertexID$23"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {5.156063513806698, 0.}],
          "DynamicName",
          BoxID -> "VertexID$24"], 
         TagBox[InsetBox[
           FrameBox[
            RowBox[{"-", "1"}],
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.1248869780646658, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$25"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.062353071484066, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$26"], 
         TagBox[InsetBox[
           FrameBox["s",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.7498643736775987, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$27"], 
         TagBox[InsetBox[
           FrameBox["4",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.374841769290532, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$28"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->{454.19999999999993`, Automatic},
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[43]=",
 CellID->147590346,ExpressionUUID->"dce34231-e31a-474d-8db2-47053a02cbd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeSelect", "[", 
  RowBox[{
   RowBox[{"ExpressionTree", "[", "complicatedexpression", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"TreeData", "[", "#", "]"}], "==", "Times"}], "&"}], ",", 
   "Infinity"}], "]"}]], "Input",
 CellLabel->"In[44]:=",
 CellID->45569491,ExpressionUUID->"c67180dc-cad8-49b0-943d-64bf7b19934b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[$CellContext`b, None], 
         Tree[$CellContext`d, None]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.4472135954999579, 0.8929961074943159}, {
           0.8944271909999159, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.4472135954999579, 0.8929961074943159}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.8944271909999159, 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`b, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[Power, {
           Tree[$CellContext`q, None], 
           Tree[2, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           0.34874291623145787`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           1.7437145811572892`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 1.5111053108157988`}, {
           3.1386862460831204`, 0.7555526554078994}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.34874291623145787`, 0.7555526554078994}, {
           0.6974858324629157, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           1.3949716649258315`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.7437145811572892`, 0.7555526554078994}, {
           2.092457497388747, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           2.789943329851663, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.1386862460831204`, 0.7555526554078994}, {
           3.4874291623145783`, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 1.5111053108157988}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.34874291623145787, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6974858324629157, 0.}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7437145811572892, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.3949716649258315, 0.}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.092457497388747, 0.}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.1386862460831204, 0.7555526554078994}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.789943329851663, 0.}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.4874291623145783, 0.}],
          "DynamicName",
          BoxID -> "VertexID$10"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->{301.8, Automatic},
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree[Times, {
         Tree[Power, {
           Tree[$CellContext`a, None], 
           Tree[2, None]}], 
         Tree[$CellContext`b, None], 
         Tree[Power, {
           Tree[$CellContext`d, None], 
           Tree[2, None]}], 
         Tree[$CellContext`q, None], 
         Tree[Power, {
           Tree[Plus, {
             Tree[Times, {
               Tree[$CellContext`b, None], 
               Tree[$CellContext`d, None]}], 
             Tree[Times, {
               Tree[Power, {
                 Tree[$CellContext`b, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`d, None], 
                 Tree[2, None]}], 
               Tree[Power, {
                 Tree[$CellContext`q, None], 
                 Tree[2, None]}]}]}], 
           Tree[-1, None]}], 
         Tree[Power, {
           Tree[$CellContext`s, None], 
           Tree[4, None]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021301775466617948`], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.3124886978064666, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           0.9374660934193997, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           1.5624434890323329`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.187420884645266, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           2.8123982802581993`, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.187420884645266, 3.2305571152089323`}, {
           4.062353071484066, 2.5844456921671464`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {0., 
           1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.3124886978064666, 2.5844456921671464`}, {
           0.6249773956129332, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.2499547912258664`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5624434890323329`, 2.5844456921671464`}, {
           1.8749321868387994`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           2.499909582451733, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.8123982802581993`, 2.5844456921671464`}, {
           3.1248869780646658`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           1.4061991401290996`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.499909582451733, 1.9383342691253593`}, {
           3.5936200247743657`, 1.2922228460835732`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.093710442322633, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.4061991401290996`, 1.2922228460835732`}, {
           1.7186878379355661`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           2.3436652335484993`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           3.5936200247743657`, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 1.2922228460835732`}, {
           4.843574816000232, 0.6461114230417864}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.031176535742033, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3436652335484993`, 0.6461114230417864}, {
           2.656153931354966, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.281131326967899, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.5936200247743657`, 0.6461114230417864}, {
           3.906108722580832, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           4.531086118193765, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.843574816000232, 0.6461114230417864}, {
           5.156063513806698, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           3.7498643736775987`, 1.9383342691253593`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.062353071484066, 2.5844456921671464`}, {
           4.374841769290532, 1.9383342691253593`}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.187420884645266, 3.2305571152089323}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.3124886978064666, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["a",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0., 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.6249773956129332, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {0.9374660934193997, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.5624434890323329, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.2499547912258664, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.8749321868387994, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.187420884645266, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.8123982802581993, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["Plus",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.499909582451733, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.4061991401290996, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.093710442322633, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$13"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {1.7186878379355661, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$14"], 
         TagBox[InsetBox[
           FrameBox["Times",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 1.2922228460835732}],
          "DynamicName",
          BoxID -> "VertexID$15"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.3436652335484993, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$16"], 
         TagBox[InsetBox[
           FrameBox["b",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.031176535742033, 0.}],
          "DynamicName",
          BoxID -> "VertexID$17"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {2.656153931354966, 0.}],
          "DynamicName",
          BoxID -> "VertexID$18"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.5936200247743657, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$19"], 
         TagBox[InsetBox[
           FrameBox["d",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.281131326967899, 0.}],
          "DynamicName",
          BoxID -> "VertexID$20"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.906108722580832, 0.}],
          "DynamicName",
          BoxID -> "VertexID$21"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.843574816000232, 0.6461114230417864}],
          "DynamicName",
          BoxID -> "VertexID$22"], 
         TagBox[InsetBox[
           FrameBox["q",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.531086118193765, 0.}],
          "DynamicName",
          BoxID -> "VertexID$23"], 
         TagBox[InsetBox[
           FrameBox["2",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {5.156063513806698, 0.}],
          "DynamicName",
          BoxID -> "VertexID$24"], 
         TagBox[InsetBox[
           FrameBox[
            RowBox[{"-", "1"}],
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.1248869780646658, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$25"], 
         TagBox[InsetBox[
           FrameBox["Power",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.062353071484066, 2.5844456921671464}],
          "DynamicName",
          BoxID -> "VertexID$26"], 
         TagBox[InsetBox[
           FrameBox["s",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {3.7498643736775987, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$27"], 
         TagBox[InsetBox[
           FrameBox["4",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameMargins->{{2, 2}, {1, 1}},
            FrameStyle->Directive[
              RGBColor[
              0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->0,
            StripOnInput->False], {4.374841769290532, 1.9383342691253593}],
          "DynamicName",
          BoxID -> "VertexID$28"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->None,
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->{280.80000000000007`, Automatic},
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellLabel->"Out[44]=",
 CellID->86851793,ExpressionUUID->"43022bc4-fb05-4799-b6aa-38362aa929e6"]
}, Open  ]],

Cell["XXXX.", "TechNoteCaption",
 CellID->56681674,ExpressionUUID->"f5f60007-c978-4515-b0ad-835ba5ae7d46"],

Cell[CellGroupData[{

Cell[BoxData["XXXX"], "Input",
 CellLabel->"In[1]:=",
 CellID->49790133,ExpressionUUID->"95b13454-664a-49ef-b319-51b599fe4560"],

Cell[BoxData["XXXX"], "Output",
 CellLabel->"Out[1]=",
 CellID->380375781,ExpressionUUID->"291a9438-7152-4128-85b7-ac77dd1cf2b8"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"c2667ecf-7120-4379-b399-12fa38e69b68"],

Cell[BoxData[""], "Input",ExpressionUUID->"772e275e-275b-4c60-b757-6842f17fb2c3"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"3989c6a2-6abd-4409-af41-981d9f5c7807"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Rearranging Expressions",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> {$Failed, ""}, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2023, 6, 5, 13, 52, 5.5351824}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "PeterBurbery`BasicHypergeometricFunctions`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Peter Burbery/ Basic Hypergeometric Functions Tech Note", 
    "language" -> "en", "paclet" -> 
    "PeterBurbery/BasicHypergeometricFunctions", "status" -> "None", 
    "summary" -> 
    "The functions defined in the PeterBurbery`BasicHypergeometricFunctions` \
context provide support for placing the q in front. The built-in function \
PositionQInFrontOfList puts q in front of a list. The function works by using \
UnsortedComplement.", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$17267, "title" -> 
    "Rearranging Expressions", "titlemodifier" -> "", "metadescription" -> "",
     "windowtitle" -> "Rearranging Expressions", "type" -> "Tech Note", "uri" -> 
    "PeterBurbery/BasicHypergeometricFunctions/tutorial/\
RearrangingExpressions"}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Microsoft Windows (64-bit) (May 18, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"57b32b04-dc0d-4876-bfef-ecdcfd60b049"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[595, 21, 3664, 85, 56, "AnchorBarGrid",ExpressionUUID->"54d746c5-b147-4f0f-af45-0324960c4475",
 CellID->1],
Cell[CellGroupData[{
Cell[4284, 110, 123, 1, 68, "TechNoteTitle",ExpressionUUID->"4392a549-f5bc-4eed-86cd-bd4f56abb022",
 CellID->555292541],
Cell[4410, 113, 1881, 43, 65, "TechNoteJumpBox",ExpressionUUID->"36202f1b-6f51-4ddb-b414-d719b00f53bb"],
Cell[6294, 158, 369, 7, 36, "TechNoteText",ExpressionUUID->"da171d77-9ecf-45b9-aa05-d6d9041a939a",
 CellID->34242218],
Cell[6666, 167, 129, 1, 36, "TechNoteMathCaption",ExpressionUUID->"7bada169-7c3d-4776-b7f7-9de2435b9070",
 CellID->513850824],
Cell[6798, 170, 184, 3, 26, "Input",ExpressionUUID->"0dee9fdd-35d3-4720-adb9-0ac50b09f781",
 CellID->542855510],
Cell[CellGroupData[{
Cell[7007, 177, 115, 1, 80, "TechNoteSection",ExpressionUUID->"e289c6af-e7f4-4b1c-818e-9eda6dd9cb82",
 CellID->2591],
Cell[7125, 180, 228, 4, 36, "TechNoteText",ExpressionUUID->"b612293d-b26c-4a4f-9c16-0ee176d43931",
 CellID->590619292],
Cell[CellGroupData[{
Cell[7378, 188, 264, 6, 26, "Input",ExpressionUUID->"c005b7de-a8c7-45df-9f11-f64113601e19",
 CellID->219423307],
Cell[7645, 196, 215, 5, 35, "Output",ExpressionUUID->"9e37fe5e-f82a-4f84-a340-a0975f379d0a",
 CellID->272831206]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7909, 207, 113, 1, 80, "TechNoteSection",ExpressionUUID->"00036f6a-63fd-4f4f-a2de-66a749e3d47c",
 CellID->237748664],
Cell[8025, 210, 178, 2, 36, "TechNoteMathCaption",ExpressionUUID->"e250cd9f-9b0e-4e7b-8c8b-dd8939ecf38b",
 CellID->30906755],
Cell[CellGroupData[{
Cell[8228, 216, 268, 6, 26, "Input",ExpressionUUID->"1542516c-d21f-43bc-a96f-434c0b7c4782",
 CellID->501709717],
Cell[8499, 224, 250, 6, 36, "Output",ExpressionUUID->"488c71cf-7b69-4b59-85bc-82928f353118",
 CellID->187249567]
}, Open  ]],
Cell[CellGroupData[{
Cell[8786, 235, 175, 3, 26, "Input",ExpressionUUID->"afa7c4e4-7e9c-42d8-8885-a887ef7faee4",
 CellID->45907700],
Cell[8964, 240, 11124, 299, 70, "Output",ExpressionUUID->"8107efe8-ed22-4c56-87de-5eaa90656bb7",
 CellID->895181536]
}, Open  ]],
Cell[20103, 542, 192, 3, 70, "TechNoteMathCaption",ExpressionUUID->"f8838af4-b20d-4ec5-a66f-f7d8b078f083",
 CellID->340949841],
Cell[CellGroupData[{
Cell[20320, 549, 193, 4, 70, "Input",ExpressionUUID->"3ffb77c4-590c-4ead-a50c-cb1b18c855f9",
 CellID->152984908],
Cell[20516, 555, 171, 4, 35, "Output",ExpressionUUID->"c93a09c0-c592-4a37-a1c9-a736cb2815d0",
 CellID->130135511]
}, Open  ]],
Cell[20702, 562, 162, 2, 70, "TechNoteMathCaption",ExpressionUUID->"2e56b696-7921-4dd2-bf7d-0c15be4b3e70",
 CellID->579788294],
Cell[CellGroupData[{
Cell[20889, 568, 184, 4, 70, "Input",ExpressionUUID->"9e3189cf-1dac-4683-b068-aa39e4a347fe",
 CellID->8585758],
Cell[21076, 574, 147, 3, 35, "Output",ExpressionUUID->"4705ed4c-77f3-4d52-93c1-3e4e4dd55fb2",
 CellID->15928604]
}, Open  ]],
Cell[CellGroupData[{
Cell[21260, 582, 199, 4, 70, "Input",ExpressionUUID->"8d2cec3f-4b54-43fc-ae0e-c64bd1ae354a",
 CellID->1001352657],
Cell[21462, 588, 143, 3, 35, "Output",ExpressionUUID->"ed66c2d4-31f0-4bb5-ba5d-b990fa15b75b",
 CellID->555168197]
}, Open  ]],
Cell[21620, 594, 139, 1, 70, "TechNoteMathCaption",ExpressionUUID->"8565d89a-3dc1-40ac-acd5-d801d217a040",
 CellID->210058381],
Cell[CellGroupData[{
Cell[21784, 599, 239, 5, 70, "Input",ExpressionUUID->"2de0fa28-d123-428b-b5e2-98d1c8625d06",
 CellID->3618976],
Cell[22026, 606, 229, 6, 36, "Output",ExpressionUUID->"94746ca0-d6f1-48e7-8278-248ff52f0647",
 CellID->60384182]
}, Open  ]],
Cell[CellGroupData[{
Cell[22292, 617, 198, 4, 70, "Input",ExpressionUUID->"660b225c-1422-4319-8e29-d30e3deb8688",
 CellID->158897045],
Cell[22493, 623, 194, 5, 35, "Output",ExpressionUUID->"601fecce-349c-4039-8f5b-2f1b74399bd6",
 CellID->90949083]
}, Open  ]],
Cell[22702, 631, 178, 3, 70, "TechNoteMathCaption",ExpressionUUID->"2af08122-2b75-4880-a344-84d2102e1006",
 CellID->45747336],
Cell[CellGroupData[{
Cell[22905, 638, 191, 4, 70, "Input",ExpressionUUID->"66b70e28-e77a-447e-a23b-1b9e9d0d56eb",
 CellID->106947108],
Cell[23099, 644, 149, 3, 35, "Output",ExpressionUUID->"4c82f576-35b3-4c89-9dda-a2b8fadfdd98",
 CellID->688234202]
}, Open  ]],
Cell[CellGroupData[{
Cell[23285, 652, 196, 4, 70, "Input",ExpressionUUID->"4468754d-b339-4a2a-9d0d-4595095e64b6",
 CellID->289386853],
Cell[23484, 658, 144, 3, 35, "Output",ExpressionUUID->"48a35c84-046a-4567-9766-96920108ee49",
 CellID->383066580]
}, Open  ]],
Cell[CellGroupData[{
Cell[23665, 666, 196, 4, 70, "Input",ExpressionUUID->"d79fbaf0-27e6-49a8-aa49-3068b2ea26df",
 CellID->616336306],
Cell[23864, 672, 144, 3, 35, "Output",ExpressionUUID->"f29a22a9-3747-4e8f-b627-7b11e218ce82",
 CellID->287890430]
}, Open  ]],
Cell[24023, 678, 218, 4, 70, "TechNoteMathCaption",ExpressionUUID->"58782be3-aee4-4688-9aa0-f67ced329f3f",
 CellID->657986846],
Cell[CellGroupData[{
Cell[24266, 686, 180, 3, 70, "Input",ExpressionUUID->"53397038-fd0e-4d9a-9edd-b596769b620d",
 CellID->3639185],
Cell[24449, 691, 9372, 255, 70, "Output",ExpressionUUID->"84c8a925-7c7f-43d1-9477-0b21d4c74fd7",
 CellID->781595662]
}, Open  ]],
Cell[CellGroupData[{
Cell[33858, 951, 245, 6, 70, "Input",ExpressionUUID->"b8a9ab4a-ca17-489b-a112-77b3eb665233",
 CellID->106876852],
Cell[34106, 959, 10483, 301, 70, "Output",ExpressionUUID->"c1912582-c320-4a31-a835-d77a09a1b203",
 CellID->78099367]
}, Open  ]],
Cell[44604, 1263, 131, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ea217606-4fc7-4ae5-b860-1a9d9c0c9bb4",
 CellID->201555096],
Cell[CellGroupData[{
Cell[44760, 1268, 244, 6, 70, "Input",ExpressionUUID->"7365682a-9352-4f44-8e92-8fa88547b46e",
 CellID->76274047],
Cell[45007, 1276, 20207, 631, 70, "Output",ExpressionUUID->"d0cf1f2d-53e1-484a-9edc-173b312ec335",
 CellID->268218734]
}, Open  ]],
Cell[65229, 1910, 183, 3, 70, "TechNoteMathCaption",ExpressionUUID->"193fd985-a1c8-4cb4-8049-61c540b24416",
 CellID->116384939],
Cell[CellGroupData[{
Cell[65437, 1917, 265, 6, 70, "Input",ExpressionUUID->"1650bdc2-d3dd-44d2-935a-cb0166afa61e",
 CellID->11721902],
Cell[65705, 1925, 9875, 334, 70, "Output",ExpressionUUID->"f3d6bc50-6c9c-40f3-bf12-4a151619f9cb",
 CellID->122696485]
}, Open  ]],
Cell[75595, 2262, 123, 1, 70, "TechNoteMathCaption",ExpressionUUID->"86b94b57-eaac-4303-81af-a7050b4a3f0d",
 CellID->7379660],
Cell[CellGroupData[{
Cell[75743, 2267, 218, 4, 70, "Input",ExpressionUUID->"fc483901-d97e-4372-9f6a-9813c3022a4b",
 CellID->57152497],
Cell[75964, 2273, 9874, 334, 70, "Output",ExpressionUUID->"c5e71275-b015-4f09-85eb-6a48969472f9",
 CellID->99386605]
}, Open  ]],
Cell[85853, 2610, 145, 1, 70, "TechNoteMathCaption",ExpressionUUID->"124a6d2d-ea42-451a-94ee-c679eb1ebe95",
 CellID->600024437],
Cell[CellGroupData[{
Cell[86023, 2615, 286, 7, 70, "Input",ExpressionUUID->"85f25a87-aaee-49ac-aec1-40dc56984d69",
 CellID->356384648],
Cell[86312, 2624, 9874, 334, 70, "Output",ExpressionUUID->"44758134-dc52-4f6e-9723-314aab58a870",
 CellID->51287920]
}, Open  ]],
Cell[96201, 2961, 144, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ef013166-4ead-44c5-b462-ff65ddc99d01",
 CellID->32533157],
Cell[CellGroupData[{
Cell[96370, 2966, 255, 6, 70, "Input",ExpressionUUID->"0416be1e-c919-43ec-aa1e-85469159a7b8",
 CellID->221488453],
Cell[96628, 2974, 9874, 334, 70, "Output",ExpressionUUID->"35e9dc97-64da-40ab-bf0d-b1170d95795f",
 CellID->44145120]
}, Open  ]],
Cell[106517, 3311, 140, 1, 70, "TechNoteMathCaption",ExpressionUUID->"a2133ad2-2225-44aa-9f09-fb71192a71ea",
 CellID->441304007],
Cell[CellGroupData[{
Cell[106682, 3316, 289, 7, 70, "Input",ExpressionUUID->"a58c9ff8-287c-44c1-b668-5330c449eee6",
 CellID->784023909],
Cell[106974, 3325, 215, 5, 35, "Output",ExpressionUUID->"81941b3a-1333-4d5a-a4ac-58c4a01cf9cd",
 CellID->565604538]
}, Open  ]],
Cell[107204, 3333, 196, 4, 70, "TechNoteMathCaption",ExpressionUUID->"5149010d-c608-4898-8767-cfd634db1877",
 CellID->48363548],
Cell[CellGroupData[{
Cell[107425, 3341, 289, 7, 70, "Input",ExpressionUUID->"0994fd9e-af71-478d-908d-4500620df444",
 CellID->265849720],
Cell[107717, 3350, 171, 4, 35, "Output",ExpressionUUID->"affd3fdf-d9ac-416c-862d-47ff1e8b97d6",
 CellID->36210837]
}, Open  ]],
Cell[CellGroupData[{
Cell[107925, 3359, 354, 9, 70, "Input",ExpressionUUID->"fd7a6e53-b654-4cbc-b5ee-9f48f9ec5f56",
 CellID->10018807],
Cell[108282, 3370, 130, 2, 35, "Output",ExpressionUUID->"e76d88ee-cf9e-4426-9e7b-7134e41378e3",
 CellID->90942833]
}, Open  ]],
Cell[108427, 3375, 157, 2, 70, "TechNoteMathCaption",ExpressionUUID->"7d92d8c6-2ea7-4ba0-8219-43584f030b73",
 CellID->222360495],
Cell[108587, 3379, 424, 11, 70, "Input",ExpressionUUID->"82beeeb9-2a8c-4463-af42-1005bc5440b5",
 CellID->876159263],
Cell[109014, 3392, 124, 1, 70, "TechNoteMathCaption",ExpressionUUID->"bb3a1f82-6483-45e6-bf09-9be803a1b346",
 CellID->140693972],
Cell[CellGroupData[{
Cell[109163, 3397, 188, 3, 70, "Input",ExpressionUUID->"d8f63307-e67d-4fc8-a97d-402c45b59692",
 CellID->676058770],
Cell[109354, 3402, 131, 2, 35, "Output",ExpressionUUID->"eea12d2b-f043-46fd-85dd-2cbf4f625467",
 CellID->173651887]
}, Open  ]],
Cell[109500, 3407, 179, 3, 70, "TechNoteMathCaption",ExpressionUUID->"9acb1795-a990-4a13-8873-c90e28be41a8",
 CellID->362701572],
Cell[CellGroupData[{
Cell[109704, 3414, 820, 25, 70, "Input",ExpressionUUID->"19d0214e-62ae-45d5-aa1b-60302fc7b9e9",
 CellID->569912814],
Cell[110527, 3441, 10076, 197, 70, "Output",ExpressionUUID->"a2d3cb23-f362-4b5c-a1bc-da580aaa66bf",
 CellID->466247083]
}, Open  ]],
Cell[120618, 3641, 162, 2, 70, "TechNoteMathCaption",ExpressionUUID->"97132d86-e5d0-45e3-802f-58f9f0f39315",
 CellID->860484422],
Cell[CellGroupData[{
Cell[120805, 3647, 274, 7, 70, "Input",ExpressionUUID->"add0c371-31b9-4367-bc72-eb4c040e00e9",
 CellID->200160651],
Cell[121082, 3656, 190, 4, 35, "Output",ExpressionUUID->"167bdd41-fd93-47ac-ab49-db1c26338de0",
 CellID->5616810]
}, Open  ]],
Cell[121287, 3663, 174, 3, 70, "TechNoteMathCaption",ExpressionUUID->"9c17d504-b7ec-49f5-aa76-01b975d8b4ff",
 CellID->38347245],
Cell[CellGroupData[{
Cell[121486, 3670, 325, 8, 70, "Input",ExpressionUUID->"724adc3c-0673-4c79-83a0-9b35580656c0",
 CellID->26282727],
Cell[121814, 3680, 22784, 559, 70, "Output",ExpressionUUID->"cfcbbb5c-53db-400b-b113-44c26b8cecc7",
 CellID->434215884]
}, Open  ]],
Cell[CellGroupData[{
Cell[144635, 4244, 499, 14, 70, "Input",ExpressionUUID->"b4839ee4-2c41-4b36-94a0-7b8578dcef1d",
 CellID->466437509],
Cell[145137, 4260, 11444, 300, 70, "Output",ExpressionUUID->"5c162d0f-d327-443a-a8bc-5f4ac9e44d7f",
 CellID->581867833]
}, Open  ]],
Cell[156596, 4563, 137, 1, 70, "TechNoteMathCaption",ExpressionUUID->"c3f2f89c-9482-4f53-98b1-6c9fc2a23c33",
 CellID->46456499],
Cell[CellGroupData[{
Cell[156758, 4568, 255, 5, 70, "Input",ExpressionUUID->"546a60cf-d081-49f5-aa14-fa702e72a761",
 CellID->30529297],
Cell[157016, 4575, 434, 13, 56, "Output",ExpressionUUID->"9103b4bb-7813-45f2-a6d7-9a32cded2b51",
 CellID->315960114]
}, Open  ]],
Cell[CellGroupData[{
Cell[157487, 4593, 186, 3, 70, "Input",ExpressionUUID->"ab190343-3149-4f6a-8623-4ccb8dedd90a",
 CellID->562027770],
Cell[157676, 4598, 25262, 653, 70, "Output",ExpressionUUID->"afcc092f-35b7-4fcc-b26b-92d5ac91f7b1",
 CellID->601819694]
}, Open  ]],
Cell[182953, 5254, 130, 1, 70, "TechNoteMathCaption",ExpressionUUID->"77777825-f8e5-4ced-be9c-4cc1309fbd28",
 CellID->194616050],
Cell[CellGroupData[{
Cell[183108, 5259, 526, 14, 70, "Input",ExpressionUUID->"72c77568-5553-4447-b7b6-5d1fe557a34e",
 CellID->233755330],
Cell[183637, 5275, 36383, 908, 70, "Output",ExpressionUUID->"dce34231-e31a-474d-8db2-47053a02cbd7",
 CellID->147590346]
}, Open  ]],
Cell[CellGroupData[{
Cell[220057, 6188, 354, 9, 70, "Input",ExpressionUUID->"c67180dc-cad8-49b0-943d-64bf7b19934b",
 CellID->45569491],
Cell[220414, 6199, 39848, 1007, 70, "Output",ExpressionUUID->"43022bc4-fb05-4799-b6aa-38362aa929e6",
 CellID->86851793]
}, Open  ]],
Cell[260277, 7209, 106, 1, 70, "TechNoteCaption",ExpressionUUID->"f5f60007-c978-4515-b0ad-835ba5ae7d46",
 CellID->56681674],
Cell[CellGroupData[{
Cell[260408, 7214, 127, 2, 70, "Input",ExpressionUUID->"95b13454-664a-49ef-b319-51b599fe4560",
 CellID->49790133],
Cell[260538, 7218, 129, 2, 35, "Output",ExpressionUUID->"291a9438-7152-4128-85b7-ac77dd1cf2b8",
 CellID->380375781]
}, Open  ]],
Cell[260682, 7223, 81, 0, 70, "Input",ExpressionUUID->"c2667ecf-7120-4379-b399-12fa38e69b68"],
Cell[260766, 7225, 81, 0, 70, "Input",ExpressionUUID->"772e275e-275b-4c60-b757-6842f17fb2c3"]
}, Open  ]]
}, Open  ]],
Cell[260874, 7229, 78, 0, 70, "FooterCell",ExpressionUUID->"3989c6a2-6abd-4409-af41-981d9f5c7807"]
}
]
*)

(* End of internal cache information *)

