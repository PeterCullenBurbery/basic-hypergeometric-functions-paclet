(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    425827,       9743]
NotebookOptionsPosition[    405856,       9396]
NotebookOutlinePosition[    406291,       9413]
CellTagsIndexPosition[    406248,       9410]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"{", "SumData", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SumData", "::", "usage"}], "=", 
   "\"\<SumData[sum] gives data on sum.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"SumData", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SumData", "[", "sum_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inactiveSum", ",", "summand", ",", "summationLists", ",", 
      "summationvariable", ",", "minmaxsumlists", ",", "summationListsData", 
      ",", "summationListsDataset", ",", "variables", ",", "foldSum"}], "}"}],
     ",", 
    RowBox[{
     RowBox[{"inactiveSum", "=", 
      RowBox[{"Inactivate", "[", 
       RowBox[{"sum", ",", "Sum"}], "]"}]}], ";", 
     RowBox[{"summand", "=", 
      RowBox[{"First", "[", "inactiveSum", "]"}]}], ";", 
     RowBox[{"summationLists", "=", 
      RowBox[{"List", "@@", 
       RowBox[{"Rest", "[", "inactiveSum", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"minmaxsumlists", "=", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"ReplaceRepeated", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"variable_", ",", "number_"}], "}"}], ":>", 
          RowBox[{"{", 
           RowBox[{"variable", ",", "1", ",", "number"}], "}"}]}], "]"}], 
        "]"}], "[", "summationLists", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"summationListsData", "=", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#2", "]"}], "->", 
           RowBox[{"SumListData", "[", "#1", "]"}]}], "&"}], "]"}], "[", 
        "minmaxsumlists", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"summationListsDataset", "=", 
      RowBox[{"Dataset", "[", "summationListsData", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"variables", "=", 
      RowBox[{"Normal", "[", 
       RowBox[{"summationListsDataset", "[", 
        RowBox[{"Values", ",", 
         RowBox[{"#\"variable\"", "&"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"foldSum", "=", 
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], ",", 
        RowBox[{
         SuperscriptBox["i", "2"], "+", "j"}], ",", "summationLists"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<inactive-sum\>\"", "->", "inactiveSum"}], ",", 
       RowBox[{"\"\<summand\>\"", "->", "summand"}], ",", 
       RowBox[{"\"\<summation-lists\>\"", "->", "summationLists"}], ",", 
       RowBox[{"\"\<min-max-sum-lists\>\"", "->", "minmaxsumlists"}], ",", 
       RowBox[{"\"\<summation-lists-data\>\"", "->", "summationListsData"}], 
       ",", 
       RowBox[{
       "\"\<summation-lists-dataset\>\"", "->", "summationListsDataset"}], 
       ",", 
       RowBox[{"\"\<variables\>\"", "->", "variables"}], ",", 
       RowBox[{"\"\<fold-sum\>\"", "->", "foldSum"}]}], "|>"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8962584089518843`*^9, 3.8962586224050875`*^9}, {
   3.8962586648729277`*^9, 3.8962587816868677`*^9}, {3.896258940383696*^9, 
   3.896258961444648*^9}, {3.8962592393618374`*^9, 3.896259299393852*^9}, {
   3.896259378124728*^9, 3.896259405763813*^9}, {3.896259513945071*^9, 
   3.896259533290312*^9}, {3.8962596952895823`*^9, 3.8962597156488943`*^9}, {
   3.8962598214691224`*^9, 3.8962598729535427`*^9}, {3.896260667954499*^9, 
   3.8962607074299603`*^9}, 3.896260852009343*^9, {3.8962610242305317`*^9, 
   3.896261039478891*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"9313cbba-cfea-42ae-b09d-b42471ee755a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962584840941944`*^9, 3.8962584900224857`*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"9b696054-5c78-4d7f-842d-09bc47ac2cdc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"inactive-sum\"\>", "\[Rule]", 
    TemplateBox[{
      SuperscriptBox["i", "2"], "i", "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"summand\"\>", "\[Rule]", 
    SuperscriptBox["i", "2"]}], ",", 
   RowBox[{"\<\"summation-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"min-max-sum-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"summation-lists-data\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"variable\"\>", "\[Rule]", "i"}], ",", 
        RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
        RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
       "\[RightAssociation]"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"summation-lists-dataset\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         1 -> <|"variable" -> $CellContext`i, "lower-bound" -> 1, 
            "upper-bound" -> 10|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 1, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 1], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 1, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 1], "Path" -> {}, "DisplayedRowCount" -> 
        1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["variable", 
                    Style[
                    "variable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "variable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "variable"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["lower-bound", 
                    Style[
                    "lower-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "lower-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "lower-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["upper-bound", 
                    Style[
                    "upper-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "upper-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "upper-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox["i", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["variable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["lower-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["10"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["upper-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{288., {32.63403328722343, 38.36596671277657}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{288., {32.63403328722343, 38.36596671277657}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"variables\"\>", "\[Rule]", 
    RowBox[{"{", "i", "}"}]}], ",", 
   RowBox[{"\<\"fold-sum\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"(", 
        RowBox[{
          SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "1", "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], 
         RowBox[{#2, "=", #3}], #4], #}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.896258490470058*^9, 3.8962585742324595`*^9}, {
   3.896258606087585*^9, 3.8962586243050604`*^9}, {3.896258673709164*^9, 
   3.896258783590584*^9}, {3.896259396178135*^9, 3.896259406748912*^9}, 
   3.896259716955675*^9, 3.896259874027088*^9, 3.896260709204268*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"ad462f77-8b59-4edb-85bf-691e42d32129"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"p", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962584840941944`*^9, 3.8962584900224857`*^9}, {
  3.896258786446607*^9, 3.896258798201152*^9}, {3.896259888351364*^9, 
  3.8962598907785306`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"5038b95e-1480-4052-990e-36d1208b0d8d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"inactive-sum\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{
        RowBox[{"(", 
          RowBox[{
            SuperscriptBox["i", "2"], "+", "j"}], ")"}], " ", "p"}], "i", 
      "10", "j", "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], 
        RowBox[{
          UnderoverscriptBox[
           StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"summand\"\>", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}], " ", "p"}]}], ",", 
   RowBox[{"\<\"summation-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"min-max-sum-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"summation-lists-data\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"variable\"\>", "\[Rule]", "i"}], ",", 
         RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
         RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"variable\"\>", "\[Rule]", "j"}], ",", 
         RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
         RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"summation-lists-dataset\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         1 -> <|"variable" -> $CellContext`i, "lower-bound" -> 1, 
            "upper-bound" -> 10|>, 
          2 -> <|"variable" -> $CellContext`j, "lower-bound" -> 1, 
            "upper-bound" -> 10|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 2, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 2, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
        2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["variable", 
                    Style[
                    "variable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "variable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "variable"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["lower-bound", 
                    Style[
                    "lower-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "lower-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "lower-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["upper-bound", 
                    Style[
                    "upper-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "upper-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "upper-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox["i", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["variable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["lower-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["10"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["upper-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox["j", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["variable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["lower-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["10"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["upper-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"variables\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}]}], ",", 
   RowBox[{"\<\"fold-sum\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"(", 
        TemplateBox[{
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"}, 
         "InactiveSum", DisplayFunction -> (RowBox[{
            UnderoverscriptBox[
             StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ), 
         InterpretationFunction -> (RowBox[{
            RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
            RowBox[{#, ",", 
              RowBox[{"{", 
                RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> Sum], 
        ")"}], "j", "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8962587899062843`*^9, 3.8962587984772086`*^9}, 
   3.896258963383861*^9, {3.8962593969825*^9, 3.896259407889456*^9}, 
   3.8962597183155475`*^9, {3.896259878676915*^9, 3.8962598911365137`*^9}, 
   3.8962607116948853`*^9, 3.896260856207465*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"cf570366-5cff-43c5-b591-7bdffb40c90a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["i", "2"], "+", "j"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962607361112843`*^9, 3.8962607434140267`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"6317e222-5090-4031-b648-8a69d5bb21d3"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8962607437472715`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"1ac2bad0-8d6d-428a-aef8-4f71f4d9ea10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["i", "2"], "+", "j"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962607361112843`*^9, 3.8962607479619603`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"8ca969b8-f1f0-4a37-97b6-d0988af43517"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "1", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], 
      RowBox[{#2, "=", #3}], #4], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8962607482844925`*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"51854867-2ded-42ab-9ea1-44302012c673"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"p", "**", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962584840941944`*^9, 3.8962584900224857`*^9}, {
  3.896258786446607*^9, 3.896258798201152*^9}, {3.896259888351364*^9, 
  3.8962599222530465`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"6ec44eb3-c166-40eb-bee0-c90d66f41003"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"inactive-sum\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"p", "**", 
        RowBox[{"(", 
          RowBox[{
            SuperscriptBox["i", "2"], "+", "j"}], ")"}]}], "i", "10", "j", 
      "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], 
        RowBox[{
          UnderoverscriptBox[
           StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"summand\"\>", "\[Rule]", 
    RowBox[{"p", "**", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}]}]}], ",", 
   RowBox[{"\<\"summation-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"min-max-sum-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"summation-lists-data\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"variable\"\>", "\[Rule]", "i"}], ",", 
         RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
         RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"variable\"\>", "\[Rule]", "j"}], ",", 
         RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
         RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"summation-lists-dataset\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         1 -> <|"variable" -> $CellContext`i, "lower-bound" -> 1, 
            "upper-bound" -> 10|>, 
          2 -> <|"variable" -> $CellContext`j, "lower-bound" -> 1, 
            "upper-bound" -> 10|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 2, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 2, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
        2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["variable", 
                    Style[
                    "variable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "variable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "variable"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["lower-bound", 
                    Style[
                    "lower-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "lower-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "lower-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["upper-bound", 
                    Style[
                    "upper-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "upper-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "upper-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox["i", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["variable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["lower-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["10"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["upper-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox["j", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["variable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["lower-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["10"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["upper-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"variables\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.896259922639844*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"73b282d6-63d6-4a1e-b0c4-5d30ab0e91c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"p", "**", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}], "**", "r"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962584840941944`*^9, 3.8962584900224857`*^9}, {
  3.896258786446607*^9, 3.896258798201152*^9}, {3.896259888351364*^9, 
  3.8962599336568923`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"ed946fe9-396a-4bea-8773-059e719942bd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"inactive-sum\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"p", "**", 
        RowBox[{"(", 
          RowBox[{
            SuperscriptBox["i", "2"], "+", "j"}], ")"}], "**", "r"}], "i", 
      "10", "j", "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], 
        RowBox[{
          UnderoverscriptBox[
           StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"summand\"\>", "\[Rule]", 
    RowBox[{"p", "**", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}], "**", "r"}]}], ",", 
   RowBox[{"\<\"summation-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"min-max-sum-lists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"summation-lists-data\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"variable\"\>", "\[Rule]", "i"}], ",", 
         RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
         RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"variable\"\>", "\[Rule]", "j"}], ",", 
         RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
         RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"summation-lists-dataset\"\>", "\[Rule]", 
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         1 -> <|"variable" -> $CellContext`i, "lower-bound" -> 1, 
            "upper-bound" -> 10|>, 
          2 -> <|"variable" -> $CellContext`j, "lower-bound" -> 1, 
            "upper-bound" -> 10|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 2, 
           DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20,
         "ColumnTarget" -> 10, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[<|{All, 
             TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "variable"} -> 
           1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
                "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
                "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 3, {All}]]], 2, 
           DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
           TypeSystem`AnyType, 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
        2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, 
        "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
        "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  Mouseover[
                   
                   Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                   Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, Keys}, "KeyDummy", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["variable", 
                    Style[
                    "variable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "variable"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "variable"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["lower-bound", 
                    Style[
                    "lower-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "lower-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "lower-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["upper-bound", 
                    Style[
                    "upper-bound", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "upper-bound"}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   All, "upper-bound"}, "ColumnHeader", True], "Mouse"], 
                 ImageSize -> {{1, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox["i", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["variable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["lower-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["10"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key["upper-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox["j", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["variable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["lower-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["10"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[2], 
                    Key["upper-bound"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"variables\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8962599340516653`*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"4d6faf66-f2e1-4f61-a46f-51416fbd88f7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{"c_", " ", "y_"}], ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"c", " ", 
    RowBox[{"sum", "[", 
     RowBox[{"y", ",", "x"}], "]"}]}], "/;", 
   RowBox[{"FreeQ", "[", 
    RowBox[{"c", ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.896259967393718*^9, 3.8962599713175364`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"de3cf3be-ec50-4c9a-8296-8a0f55467114"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"p", "**", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["i", "2"], "+", "j"}], ")"}], "**", "r"}], ",", "i"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896259978451273*^9, 3.896259992175349*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"d30f7889-babb-4fd9-a124-4b579360b0f0"],

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"p", "**", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["i", "2"], "+", "j"}], ")"}], "**", "r"}], ",", "i"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8962599929848557`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"6114da91-5cec-4e27-a5c5-cc33052943cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"p", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["i", "2"], "+", "j"}], ")"}], "r"}], ",", "i"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896259978451273*^9, 3.8962599996973877`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"8aeb3000-e1f7-474a-92be-98584e1b02d1"],

Cell[BoxData[
 RowBox[{"p", " ", "r", " ", 
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["i", "2"], "+", "j"}], ",", "i"}], "]"}]}]], "Output",
 CellChangeTimes->{3.896260000341704*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"570112ea-f407-44f1-9272-9e5fc4b38fe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"p", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["i", "2"], "+", "j"}], ")"}], "r"}], ",", "i", ",", 
   "j"}], "]"}]], "Input",
 CellChangeTimes->{{3.896259978451273*^9, 3.896260018279744*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"e2c78a6c-fdd8-46a6-ad4f-04622b1c5c8e"],

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["i", "2"], "+", "j"}], ")"}], " ", "p", " ", "r"}], ",", 
   "i", ",", "j"}], "]"}]], "Output",
 CellChangeTimes->{3.896260018753305*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"922c780a-9e9b-4b8b-8988-d7eecb3212bd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "SumListData", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SumListData", "[", 
   RowBox[{"expr", ":", 
    RowBox[{"{", 
     RowBox[{"variable_", ",", "lowerbound_", ",", "upperbound_"}], "}"}]}], 
   "]"}], ":=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<variable\>\"", "->", "variable"}], ",", 
    RowBox[{"\"\<lower-bound\>\"", "->", "lowerbound"}], ",", 
    RowBox[{"\"\<upper-bound\>\"", "->", "upperbound"}]}], "|>"}]}]}], "Input",
 CellChangeTimes->{{3.896259442766595*^9, 3.8962595013278384`*^9}, {
  3.8962595487368994`*^9, 3.896259569778454*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"fba929f5-133d-42cb-af44-849ece8a3ace"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumListData", "[", 
  RowBox[{"{", 
   RowBox[{"i", ",", "1", ",", "10"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962595397407274`*^9, 3.8962595439965825`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"2e6b7227-3ab3-4275-b84a-43a6f80f1a22"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"variable\"\>", "\[Rule]", "i"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.896259544344049*^9, 3.8962595709258614`*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"3aa2383f-8cb4-4eb2-951c-00a27f0c7b1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SumListData", "[", "list", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"list", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8962595397407274`*^9, 3.8962595439965825`*^9}, {
  3.896259579679644*^9, 3.896259599879984*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"6b8ce20a-884f-487b-af36-e6ab867f7016"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"variable\"\>", "\[Rule]", "i"}], ",", 
     RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"variable\"\>", "\[Rule]", "j"}], ",", 
     RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "10"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896259600489276*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"248df5d9-62a1-401e-9aba-1c373598a2a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"First", "[", "#2", "]"}], "->", 
        RowBox[{"SumListData", "[", "#1", "]"}]}], "&"}], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "}"}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8962596392581077`*^9, 3.8962596866220493`*^9}, {
  3.8962597456291265`*^9, 3.8962597465972357`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"c4e9a65d-2b8c-4834-b5c3-a7ef221e3c7e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"variable" -> $CellContext`i, "lower-bound" -> 1, "upper-bound" -> 
         10|>, 2 -> <|
        "variable" -> $CellContext`j, "lower-bound" -> 1, "upper-bound" -> 
         10|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "variable"} -> 
        1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
             "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
             "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
        TypeSystem`AnyType, 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "variable"} -> 
        1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
             "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
             "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
        TypeSystem`AnyType, 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["variable", 
                  Style[
                  "variable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "variable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "variable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lower-bound", 
                  Style[
                  "lower-bound", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "lower-bound"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "lower-bound"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["upper-bound", 
                  Style[
                  "upper-bound", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "upper-bound"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "upper-bound"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["i", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["variable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["lower-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["upper-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["j", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["variable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["lower-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["upper-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{288., {46.13403328722343, 51.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.89625966489058*^9, 3.8962596870802326`*^9}, 
   3.8962597470530815`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"d2af11ff-f8c5-479e-a153-155f2f870e31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"data", "[", 
   RowBox[{"Values", ",", 
    RowBox[{"#\"variable\"", "&"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962597480107255`*^9, 3.8962598107849813`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"245766ed-b740-463f-b961-4f497fe21da3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"i", ",", "j"}], "}"}]], "Output",
 CellChangeTimes->{{3.896259752276653*^9, 3.8962598111611834`*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"f495f788-a963-4db3-8ba5-02d791276d9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"SumListData", "[", "list", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"list", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "}"}]}], "}"}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.896259606910078*^9, 3.896259608380765*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"0b877155-00fa-494e-a457-29b212d34a4a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "variable" -> $CellContext`i, "lower-bound" -> 1, "upper-bound" -> 
        10|>, <|"variable" -> $CellContext`j, "lower-bound" -> 1, 
        "upper-bound" -> 10|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "variable"} -> 
        1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
            "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
            "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
        TypeSystem`AnyType, 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "variable"} -> 
        1, {All, "lower-bound"} -> 1, {All, "upper-bound"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "variable" -> TypeSystem`PackageScope`UnknownShape[False], 
            "lower-bound" -> TypeSystem`PackageScope`AtomShape[34], 
            "upper-bound" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"variable", "lower-bound", "upper-bound"}, {
        TypeSystem`AnyType, 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["variable", 
                  Style[
                  "variable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "variable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "variable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lower-bound", 
                  Style[
                  "lower-bound", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "lower-bound"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "lower-bound"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["upper-bound", 
                  Style[
                  "upper-bound", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "upper-bound"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "upper-bound"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["i", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["variable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["lower-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["upper-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["j", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["variable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["lower-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["upper-bound"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{246., {46.13403328722343, 51.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{246., {46.13403328722343, 51.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8962596087942915`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"fadf4ae9-43dd-4d39-ac0b-e82bad1d2e00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"ReplaceRepeated", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"variable_", ",", "number_"}], "}"}], ":>", 
     RowBox[{"{", 
      RowBox[{"variable", ",", "1", ",", "number"}], "}"}]}], "]"}], "]"}], 
  "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962593074329534`*^9, 3.8962593705666666`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"ee608ef3-9b39-4e5d-a8d1-b6fc5cf52be7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896259346156721*^9, 3.8962593709620347`*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"d9064cc3-09bd-45cb-b5c4-71cae14776ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  TemplateBox[{
    RowBox[{"(", 
      RowBox[{
        SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], #2, #3], 
      RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.8962588036700544`*^9, 3.8962588255271406`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"47dd182e-7602-4e23-9566-e0812f642194"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
    RowBox[{
     RowBox[{"Plus", "[", 
      RowBox[{
       RowBox[{"Power", "[", 
        RowBox[{"i", ",", "2"}], "]"}], ",", "j"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"i", ",", "10"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"j", ",", "10"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.896258809355846*^9, 3.8962588276211376`*^9}},
 CellLabel->
  "Out[104]//FullForm=",ExpressionUUID->"3334c046-0f62-4d9e-8ecb-\
a07570112149"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  TemplateBox[{
    RowBox[{"(", 
      RowBox[{
        SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], #2, #3], 
      RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.8962588036700544`*^9, 3.8962588329092693`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"d058fca7-8aec-42f3-bc5e-062a77f58c16"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["i", "2"], "+", "j"}]], "Output",
 CellChangeTimes->{3.896258833281274*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"bbfd1d04-934c-4553-96d5-bdb4afa28c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   TemplateBox[{
     RowBox[{"(", 
       RowBox[{
         SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], #2, #3], 
       RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], ",", 
   RowBox[{"2", ";;"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962588036700544`*^9, 3.8962588533341064`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e30fa332-b578-47a1-af11-b8e6a1a6b49f"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], "j", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8962588536392565`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"a0545904-c54a-4818-9fc3-7fc8de3280c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", 
  RowBox[{"Part", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"(", 
        RowBox[{
          SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], 
        RowBox[{
          UnderoverscriptBox[
           StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], ",", 
    RowBox[{"2", ";;"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.896258875991645*^9, 3.8962588776652064`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"ccafca61-55f5-48fb-9e3a-f702314df53b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8962588780447216`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"cf8835a9-7878-4b74-a2c6-ff66f397d746"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", 
  RowBox[{"Rest", "[", 
   TemplateBox[{
     RowBox[{"(", 
       RowBox[{
         SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], #2, #3], 
       RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], "]"}]}]], "Input",
 CellChangeTimes->{{3.896258875991645*^9, 3.8962588933721595`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"0a483fec-2938-438e-8f27-28f08341bafd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896258888751325*^9, 3.8962588938100305`*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"0c672e3b-b774-4ffd-87e1-ef04a48ed378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Part", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"(", 
        RowBox[{
          SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], 
        RowBox[{
          UnderoverscriptBox[
           StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], ",", 
    RowBox[{"2", ";;"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962588599260926`*^9, 3.896258862108457*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"a5361509-f9d8-4763-a156-8688a3f39cfb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{"i", ",", "10"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"j", ",", "10"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.8962588624554834`*^9},
 CellLabel->
  "Out[107]//FullForm=",ExpressionUUID->"6a472b72-abb8-4be5-9c4f-\
bd5a0eb255eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SumData"}]], "Input",
 CellChangeTimes->{{3.8962584498380785`*^9, 3.896258451205312*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"24e4fb56-a12c-41ea-a797-feaf5c2ec68d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SumData[sum] gives data on sum.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"SumData", "[", "sum_", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "summand", "}"}], ",", 
                    RowBox[{"summand", "=", 
                    RowBox[{"First", "[", "sum", "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldAll", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`SumData\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"SumData[sum] gives data on sum.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "SumData[sum] gives data on sum.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`SumData, {$CellContext`SumData[
         Pattern[$CellContext`sum, 
          Blank[]]] :> 
       Module[{$CellContext`summand}, $CellContext`summand = 
         First[$CellContext`sum]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {HoldAll}, "FullName" -> "Global`SumData"|>, 
   False]]], "Output",
 CellChangeTimes->{3.8962584519218826`*^9, 3.8962584832814255`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d610c625-adf0-4915-b1c1-8ec2f6b1e8c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"SumData", "[", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox["i", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962586272408895`*^9, 3.8962586283571863`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"2ac92e67-556d-4f60-bb99-f5e5d885b546"],

Cell[BoxData["385"], "Output",
 CellChangeTimes->{3.8962586286556034`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"0cdaa951-595b-4ee8-a294-3a55b6ed368f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962586417164407`*^9, 3.896258645990098*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"ee11019d-2a21-4c56-8124-57df45f97bec"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 67, 3, 
   34144348814115307709, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8962586463865175`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"a525285f-3b59-411e-9a01-8d17caca8a12"],

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{"385", ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8962586464631414`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"99d96c6a-fd3e-462c-9505-499aaaf7a7d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "1", "}"}], ",", "Hold"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962586417164407`*^9, 3.896258650385585*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"bb8313ac-74f3-452f-961c-d32469ebe9d6"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 68, 4, 
   34144348814115307709, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8962586507788076`*^9},
 CellLabel->
  "During evaluation of \
In[68]:=",ExpressionUUID->"79897410-8343-4411-8d97-52457fff4830"],

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{"385", ",", 
   RowBox[{"{", "1", "}"}], ",", "Hold"}], "]"}]], "Output",
 CellChangeTimes->{3.8962586508990107`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"3ef27c54-da61-4f77-92cf-87edb5e91fae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "1", "}"}], ",", "Hold"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962586417164407`*^9, 
  3.8962586560420685`*^9}},ExpressionUUID->"db57bac7-de42-4cea-93ae-\
869e834a5fb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox["i", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", "i"}], "]"}]], "Input",
 CellChangeTimes->{{3.896259001276293*^9, 3.8962590366194468`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"b92e0e65-afae-4cf0-bd8f-1cd39104bb79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["1",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["2",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["3",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["4",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["5",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["6",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["7",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["8",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["9",
       HoldForm]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TagBox["i",
       HoldForm], ",", 
      TagBox["10",
       HoldForm]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896259009220247*^9, 3.89625903741883*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"08522989-a14b-4fbe-bed1-419fbb11da5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<ReadableForm\>\"", "]"}], "[", 
  RowBox[{"Trace", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox["i", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", "i"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8962590443903227`*^9, 3.8962590622646837`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"fdadd151-f823-4c9f-836d-177c9c3570ab"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", "\n", "    ", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "1", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "2", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "3", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "4", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "5", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "6", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "7", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "8", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "9", " ", "]"}]}], " ", "}"}], " ", 
     "}"}], ",", "\n", "    ", 
    RowBox[{"{", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"HoldForm", " ", "@", " ", "i"}], ",", " ", 
       RowBox[{"HoldForm", "[", " ", "10", " ", "]"}]}], " ", "}"}], " ", 
     "}"}]}], "\n", "}"}], "Input",
  StripOnInput->True,
  ShowAutoStyles->True,
  ShowStringCharacters->True]], "Output",
 CellChangeTimes->{3.896259063132761*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"6f29412e-9b56-4691-808c-3c6520c0d5d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  TemplateBox[{
    SuperscriptBox["i", "2"], "i", "10"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.8962591098932943`*^9, 3.896259111773934*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"bd22ba99-2465-43b8-a427-1403f7f344c9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{"i", ",", "2"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"i", ",", "10"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.8962591122167096`*^9},
 CellLabel->
  "Out[120]//FullForm=",ExpressionUUID->"44102b16-5cc9-402a-bd1a-\
1b6056ef9032"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"List", "[", 
    RowBox[{"i", ",", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896259119792598*^9, 3.896259146998169*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"eaea6548-3b00-4f0a-8bf0-35a18f68ae5c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.896259147495359*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"9e676afd-cc13-46d3-8a9b-8787febbace0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{"MatchQ", "[", 
   RowBox[{
    RowBox[{"List", "[", 
     RowBox[{"i", ",", "10"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"_", ",", "_"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.89625918140213*^9, 
  3.896259183607593*^9}},ExpressionUUID->"23c1ca2e-eb30-4f92-b6c5-\
e03c28148f2c"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
   RowBox[{
    RowBox[{"Plus", "[", 
     RowBox[{
      RowBox[{"Power", "[", 
       RowBox[{"i", ",", "2"}], "]"}], ",", "j"}], "]"}], ",", 
    RowBox[{"List", "[", 
     RowBox[{"i", ",", "10"}], "]"}], ",", 
    RowBox[{"List", "[", 
     RowBox[{"j", ",", "10"}], "]"}]}], "]"}],
  ShowSpecialCharacters->False,
  ShowStringCharacters->True,
  NumberMarks->True]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"d95e137e-ed03-4dce-95a2-d4aec2c79bf2"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], 
     RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.896260082562582*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"a84f4ec5-5774-49ff-a941-1e7ceec16fa8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceRepeated", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{"summand_", ",", 
       RowBox[{"list1_", "?", "ListQ"}], ",", 
       RowBox[{"list2_", "?", "ListQ"}]}], "]"}], ":>", 
     RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{"summand", ",", "list1"}], "]"}], ",", "list2"}], "]"}]}], 
    "}"}], "]"}], "[", 
  TemplateBox[{
    RowBox[{"(", 
      RowBox[{
        SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], #2, #3], 
      RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.896260085633786*^9, 3.896260157526864*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"7ff4bcf9-0bd7-475d-a27b-fdd32cd88564"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     TemplateBox[{
       RowBox[{"(", 
         RowBox[{
           SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"}, 
      "InactiveSum", DisplayFunction -> (RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ), 
      InterpretationFunction -> (RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> Sum], 
     ")"}], "j", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.896260158048623*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"43b46c34-5fcb-445a-baf7-738799966fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<ReadableForm\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"ReplaceRepeated", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{"summand_", ",", 
        RowBox[{"list1_", "?", "ListQ"}], ",", 
        RowBox[{"list2_", "?", "ListQ"}]}], "]"}], ":>", 
      RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{"summand", ",", "list1"}], "]"}], ",", "list2"}], "]"}]}], 
     "}"}], "]"}], "[", 
   TemplateBox[{
     RowBox[{"(", 
       RowBox[{
         SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10", "j", "10"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], #2, #3], 
       RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], #4, #5], #}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#4, ",", #5}], "}"}]}], "]"}]& )], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896260161273921*^9, 3.896260174063447*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"2e38a5e6-4aeb-44b5-b0ec-c39502e0f238"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Inactive", "[", " ", "Sum", " ", "]"}], "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Inactive", "[", " ", "Sum", " ", "]"}], "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "^", "2"}], " ", "+", " ", "j"}], ",", " ", 
      RowBox[{"{", " ", 
       RowBox[{"i", ",", " ", "10"}], " ", "}"}]}], " ", "]"}], ",", " ", 
    RowBox[{"{", " ", 
     RowBox[{"j", ",", " ", "10"}], " ", "}"}]}], " ", "]"}], "Input",
  StripOnInput->True,
  ShowAutoStyles->True,
  ShowStringCharacters->True]], "Output",
 CellChangeTimes->{3.8962601744881816`*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"fee4fbe8-83f3-44f1-ab0e-5c89369dd714"]
}, Open  ]],

Cell[CellGroupData[{

Cell["FoldSum", "Section",
 CellChangeTimes->{{3.8962608134202623`*^9, 
  3.896260814715358*^9}},ExpressionUUID->"9310037d-8936-4d97-bcec-\
d583b25d5aae"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"{", "FoldSum", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FoldSum", "::", "usage"}], "=", 
   "\"\<FoldSum[sum] folds sum.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"FoldSum", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FoldSum", "[", "sum_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"inactiveSum", ",", "summand", ",", "summationLists"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"inactiveSum", "=", 
      RowBox[{"Inactivate", "[", 
       RowBox[{"sum", ",", "Sum"}], "]"}]}], ";", 
     RowBox[{"summand", "=", 
      RowBox[{"First", "[", "inactiveSum", "]"}]}], ";", 
     RowBox[{"summationLists", "=", 
      RowBox[{"List", "@@", 
       RowBox[{"Rest", "[", "inactiveSum", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], ",", "summand", ",", 
       "summationLists"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8962608197644033`*^9, 3.8962608354086123`*^9}, {
   3.896260871683653*^9, 3.8962608851857033`*^9}, 3.8962609346427283`*^9, 
   3.8962610178392687`*^9, {3.896261048015208*^9, 3.896261049278152*^9}, {
   3.8962610941620197`*^9, 3.8962611067388215`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"0e74a98f-d543-4988-b8e7-9e2b6573c995"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FoldSum"}]], "Input",
 CellChangeTimes->{{3.8962608920884037`*^9, 3.8962608952487555`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"866a0650-a1a7-4b6f-9251-2c14aa04c7cf"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"FoldSum[sum] folds sum.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FoldSum", "[", "sum_", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"heldFormSum", ",", "summand", ",", 
                    "unevaluatedSum", ",", "inactiveSum", ",", 
                    "summationLists", ",", "summationvariable", ",", 
                    "minmaxsumlists", ",", "summationListsData", ",", 
                    "summationListsDataset", ",", "variables", ",", 
                    "foldSum"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"inactiveSum", "=", 
                    RowBox[{"Inactivate", "[", 
                    RowBox[{"sum", ",", "Sum"}], "]"}]}], ";", 
                    RowBox[{"summand", "=", 
                    RowBox[{"First", "[", "inactiveSum", "]"}]}], ";", 
                    RowBox[{"summationLists", "=", 
                    RowBox[{"List", "@@", 
                    RowBox[{"Rest", "[", "inactiveSum", "]"}]}]}], ";", 
                    RowBox[{"foldSum", "=", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{"Inactive", "[", "Sum", "]"}], ",", "summand", 
                    ",", "summationLists"}], "]"}]}], ";"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldAll", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`FoldSum\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"FoldSum[sum] folds sum.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "FoldSum[sum] folds sum.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`FoldSum, {$CellContext`FoldSum[
         Pattern[$CellContext`sum, 
          Blank[]]] :> 
       Module[{$CellContext`heldFormSum, $CellContext`summand, \
$CellContext`unevaluatedSum, $CellContext`inactiveSum, \
$CellContext`summationLists, $CellContext`summationvariable, \
$CellContext`minmaxsumlists, $CellContext`summationListsData, \
$CellContext`summationListsDataset, $CellContext`variables, \
$CellContext`foldSum}, $CellContext`inactiveSum = 
          Inactivate[$CellContext`sum, Sum]; $CellContext`summand = 
          First[$CellContext`inactiveSum]; $CellContext`summationLists = 
          Apply[List, 
            Rest[$CellContext`inactiveSum]]; $CellContext`foldSum = Fold[
            Inactive[Sum], $CellContext`summand, $CellContext`summationLists]; 
         Null]}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {HoldAll}, "FullName" -> "Global`FoldSum"|>, 
   False]]], "Output",
 CellChangeTimes->{3.896260895615919*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"b3c51f66-c129-4191-8b78-d57e23627957"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldSum", "[", 
  StyleBox[
   RowBox[{
    RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
    RowBox[{
     RowBox[{"Plus", "[", 
      RowBox[{
       RowBox[{"Power", "[", 
        RowBox[{"i", ",", "2"}], "]"}], ",", "j"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"i", ",", "10"}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{"j", ",", "10"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True], "]"}]], "Input",
 CellChangeTimes->{{3.896260897174614*^9, 3.8962609421052136`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"b2e274c7-4093-4c38-acd9-e88ffc76505d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     TemplateBox[{
       RowBox[{"(", 
         RowBox[{
           SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"}, 
      "InactiveSum", DisplayFunction -> (RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ), 
      InterpretationFunction -> (RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> Sum], 
     ")"}], "j", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.896260936474799*^9, 3.896260942655862*^9}, {
  3.8962611030014887`*^9, 3.896261109057514*^9}},
 CellLabel->
  "Out[252]=",ExpressionUUID->"d4743de8-78e9-49b8-92ae-faec1ada9e9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"f", ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896260406447136*^9, 3.896260412113924*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"fc308a75-b67a-4ad4-82d4-a3356223aa54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "1"}], "]"}], ",", "2"}], "]"}], ",", "3"}], 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896260412364664*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"7921afd1-2c6c-4756-a284-1dad0262cde5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{"f", ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896260419984642*^9, 3.8962604238740664`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"31d96488-7f93-4805-8afe-c2e5321ea65a"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", "2"}], "]"}], ",", "3"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.89626042430682*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"6d2151cd-95de-48b1-9562-80c332217838"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldPairList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], ",", 
      RowBox[{"q", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}]}], "}"}], "&"}], ",", "u", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[189]:=",ExpressionUUID->"c6b4e9c0-2d06-4328-a087-29de614b9f30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"u", ",", "1"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"u", ",", "1"}], "]"}], ",", "2"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{
       RowBox[{"q", "[", 
        RowBox[{"u", ",", "1"}], "]"}], ",", "2"}], "]"}], ",", "3"}], "]"}], 
   ",", 
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{
       RowBox[{"q", "[", 
        RowBox[{
         RowBox[{"q", "[", 
          RowBox[{"u", ",", "1"}], "]"}], ",", "2"}], "]"}], ",", "3"}], 
      "]"}], ",", "4"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8962604483062167`*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"a4e23cb1-7891-409a-98c9-3dc0fd5e39c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldPair", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], ",", 
      RowBox[{"q", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}]}], "}"}], "&"}], ",", "u", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896260449284462*^9, 3.896260453031474*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"c3485b03-b34e-4ed0-bfdb-857883ed36c1"],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{
       RowBox[{"q", "[", 
        RowBox[{"u", ",", "1"}], "]"}], ",", "2"}], "]"}], ",", "3"}], "]"}], 
   ",", "4"}], "]"}]], "Output",
 CellChangeTimes->{3.896260453576418*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"adf2ec9c-a298-45c4-a916-aab1ff5616de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldPair", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}], ",", 
      RowBox[{"q", "[", 
       RowBox[{"#1", ",", "#2"}], "]"}]}], "}"}], "&"}], ",", "u", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896260449284462*^9, 3.896260457447836*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"79e1de4e-813f-42ba-9605-780dcf64bd90"],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"u", ",", "1"}], "]"}], ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{3.8962604582723174`*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"b9eb3f66-6447-4c9e-aba7-b7a66249f7af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldPairList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "}"}], "&"}], ",", "u", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "g"}], "]"}]], "Input",
 CellChangeTimes->{{3.896260488142515*^9, 3.896260501591962*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"bd6f0032-e339-4dab-b423-fba2d6316e3b"],

Cell[BoxData[
 TemplateBox[{
  "FoldPairList", "pair", 
   "\"Function application \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"p\\\", \\\"[\\\", RowBox[{\\\"#1\\\", \
\\\",\\\", \\\"#2\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\"&\\\"}], \\\")\\\"}], \
\\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", \\\"1\\\"}], \\\"]\\\"}]\\) returned \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"p\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", \\\"1\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\); a list of two elements \
is expected.\"", 2, 194, 7, 34144348814115307709, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896260502346133*^9},
 CellLabel->
  "During evaluation of \
In[194]:=",ExpressionUUID->"9ec9b362-6a53-47f6-a1a5-3ee8cd1e34a0"],

Cell[BoxData[
 RowBox[{"FoldPairList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "}"}], "&"}], ",", "u", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "g"}], "]"}]], "Output",
 CellChangeTimes->{{3.896260484769374*^9, 3.896260502936738*^9}},
 CellLabel->
  "Out[194]=",ExpressionUUID->"58cb345b-5164-4a02-9f18-d66f3fbac473"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["i", "2"], "+", "j"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962605330040054`*^9, 3.896260556614513*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"f62e1e98-d9ba-4fd2-9163-d96d77c2f501"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8962605418546906`*^9, 3.8962605569886894`*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"c010e783-5423-43c6-93bb-17f928a9b41e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["i", "2"], "+", "j"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896260543011955*^9, 3.8962605760727167`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"cd26f618-f0c8-4683-8449-a747abfb3afa"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     TemplateBox[{
       RowBox[{"(", 
         RowBox[{
           SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"}, 
      "InactiveSum", DisplayFunction -> (RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ), 
      InterpretationFunction -> (RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> Sum], 
     ")"}], "j", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.896260546637125*^9, 3.8962605763849344`*^9}},
 CellLabel->
  "Out[200]=",ExpressionUUID->"edd15500-b56a-4b23-8234-b54f94e01dcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{
   RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["i", "2"], "+", "j"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962605827291093`*^9, 3.8962605917755785`*^9}, 
   3.896260626074424*^9},
 CellLabel->
  "In[202]:=",ExpressionUUID->"01760135-6fe2-4b59-bf16-d90af8c456a9"],

Cell["\<\
Inactive[Sum][Inactive[Sum][i^2 + j, 
  {i, 10}], {j, 10}]\
\>", "Output",
 CellChangeTimes->{{3.8962605870301123`*^9, 3.89626059206841*^9}},
 CellLabel->
  "Out[202]//InputForm=",ExpressionUUID->"585762e1-b748-41d2-a8dc-\
3868c5791fbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{
   RowBox[{"Inactive", "[", "Sum", "]"}], ",", 
   RowBox[{
    SuperscriptBox["i", "2"], "+", "j"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "10"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962605827291093`*^9, 3.8962606350006685`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"670f410d-9d68-4d58-a532-4dd280722bfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["i", "2"], "+", "j"}], ",", 
   TemplateBox[{
     RowBox[{"(", 
       RowBox[{
         SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )], ",", 
   TemplateBox[{
     RowBox[{"(", 
       TemplateBox[{
         RowBox[{"(", 
           RowBox[{
             SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"}, 
        "InactiveSum", DisplayFunction -> (RowBox[{
           UnderoverscriptBox[
            StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ), 
        InterpretationFunction -> (RowBox[{
           RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
           RowBox[{#, ",", 
             RowBox[{"{", 
               RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> Sum], 
       ")"}], "j", "10"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.896260608861091*^9, 3.8962606353214445`*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"e12760a7-e265-4248-9f63-7f2d82d18d79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{
   RowBox[{"Inactive", "[", "Sum", "]"}], ",", 
   RowBox[{
    SuperscriptBox["i", "2"], "+", "j"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "10"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962605827291093`*^9, 3.8962606426022434`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"be4523c4-3144-40e2-95a9-91baac17f610"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     TemplateBox[{
       RowBox[{"(", 
         RowBox[{
           SuperscriptBox["i", "2"], "+", "j"}], ")"}], "i", "10"}, 
      "InactiveSum", DisplayFunction -> (RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ), 
      InterpretationFunction -> (RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> Sum], 
     ")"}], "j", "10"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.896260643019578*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"f38618b1-e5b6-4b9f-bc9a-35bb96ba71ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FoldIntegral", "Section",
 CellChangeTimes->{{3.896260962612769*^9, 
  3.8962609654005876`*^9}},ExpressionUUID->"89c0a41c-bce5-4953-91fb-\
1ef7d81dd51b"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"{", "FoldIntegral", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FoldIntegral", "::", "usage"}], "=", 
   "\"\<FoldIntegral[integral] folds sum.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"FoldIntegral", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FoldIntegral", "[", "integral_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"inactiveIntegral", ",", "integrand", ",", "integrationLists"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"inactiveIntegral", "=", 
      RowBox[{"Inactivate", "[", 
       RowBox[{"integral", ",", "Integrate"}], "]"}]}], ";", 
     RowBox[{"integrand", "=", 
      RowBox[{"First", "[", "inactiveIntegral", "]"}]}], ";", 
     RowBox[{"integrationLists", "=", 
      RowBox[{"List", "@@", 
       RowBox[{"Rest", "[", "inactiveIntegral", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{"Inactive", "[", "Integrate", "]"}], ",", "integrand", ",", 
       "integrationLists"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.896260999580571*^9, 3.8962610115629516`*^9}, {
  3.896261056443595*^9, 3.8962610874391403`*^9}, {3.896261121763563*^9, 
  3.896261193157632*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"ef1585d8-500e-4655-919f-a494a6528a46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldIntegral", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"Log", "[", "z", "]"}]}], ",", "z", ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8962611689038277`*^9, 3.8962611859238386`*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"b06a113d-93f3-4e89-9776-d39413959aa3"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     RowBox[{"x", " ", 
       RowBox[{"Log", "[", "z", "]"}]}], "z"}, "InactiveIntegrate", 
    DisplayFunction -> (RowBox[{
       StyleBox["\[Integral]", "Inactive"], 
       RowBox[{#, 
         RowBox[{
           StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ), 
    InterpretationFunction -> (RowBox[{
       RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
       RowBox[{#, ",", #2}], "]"}]& )], "x"},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     StyleBox["\[Integral]", "Inactive"], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.896261186359014*^9, 3.8962611941606083`*^9}},
 CellLabel->
  "Out[262]=",ExpressionUUID->"9d5788db-5199-4800-ba50-62e754c1821a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FoldProduct", "Section",
 CellChangeTimes->{{3.896261207535101*^9, 
  3.896261209437914*^9}},ExpressionUUID->"1f7d8709-db04-4def-80f5-\
bfdbf713deed"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"{", "FoldProduct", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FoldProduct", "::", "usage"}], "=", 
   "\"\<FoldProduct[product] folds product.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"FoldProduct", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FoldProduct", "[", "integral_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"inactiveProduct", ",", "productTerm", ",", "productLists"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"inactiveProduct", "=", 
      RowBox[{"Inactivate", "[", 
       RowBox[{"integral", ",", "Product"}], "]"}]}], ";", 
     RowBox[{"productTerm", "=", 
      RowBox[{"First", "[", "inactiveProduct", "]"}]}], ";", 
     RowBox[{"productLists", "=", 
      RowBox[{"List", "@@", 
       RowBox[{"Rest", "[", "inactiveProduct", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{"Inactive", "[", "Product", "]"}], ",", "productTerm", ",", 
       "productLists"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8962612190896807`*^9, 3.8962612733512526`*^9}, {
  3.896261308775459*^9, 3.896261309868948*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"21025b01-a459-4e64-9108-0ed7f402186e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldProduct", "[", 
  RowBox[{"Product", "[", 
   RowBox[{
    RowBox[{"i", "+", "j"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "red"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "orange"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896261275003316*^9, 3.8962613034383492`*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"9bb466c1-c1a9-43b8-b6ed-942d0d85800f"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     TemplateBox[{
       RowBox[{"(", 
         RowBox[{"i", "+", "j"}], ")"}], "i", "red"}, "InactiveProduct", 
      DisplayFunction -> (RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Product]", "Inactive"], #2, #3], #}]& ), 
      InterpretationFunction -> (RowBox[{
         RowBox[{"Inactive", "[", "Product", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> Product],
      ")"}], "j", "orange"},
  "InactiveProduct",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Product]", "Inactive"], #2, #3], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Product", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8962613039081573`*^9, 3.8962613111321187`*^9}},
 CellLabel->
  "Out[272]=",ExpressionUUID->"91df67a6-07ae-4882-9ec1-db08ab638488"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Activate", "[", 
  RowBox[{
   TemplateBox[{
     RowBox[{"(", 
       TemplateBox[{
         RowBox[{"(", 
           RowBox[{"i", "+", "j"}], ")"}], "i", "red"}, "InactiveProduct", 
        DisplayFunction -> (RowBox[{
           UnderoverscriptBox[
            StyleBox["\[Product]", "Inactive"], #2, #3], #}]& ), 
        InterpretationFunction -> (RowBox[{
           RowBox[{"Inactive", "[", "Product", "]"}], "[", 
           RowBox[{#, ",", 
             RowBox[{"{", 
               RowBox[{#2, ",", #3}], "}"}]}], "]"}]& ), SyntaxForm -> 
        Product], ")"}], "j", "orange"},
    "InactiveProduct",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Product]", "Inactive"], #2, #3], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Product", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )], ",", 
   RowBox[{"Unevaluated", "[", "Product", "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[273]:=",ExpressionUUID->"a301a20f-b741-45d8-b626-7f067409f602"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"BarnesG", "[", 
     RowBox[{"2", "+", "red"}], "]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "orange"}]], " ", 
   SuperscriptBox[
    RowBox[{"BarnesG", "[", 
     RowBox[{"3", "+", "red"}], "]"}], 
    RowBox[{"-", "orange"}]], " ", 
   RowBox[{"BarnesG", "[", 
    RowBox[{"2", "+", "orange", "+", "red"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"2", "+", "red"}], "]"}], "orange"]}], 
  RowBox[{"BarnesG", "[", 
   RowBox[{"2", "+", "orange"}], "]"}]]], "Output",
 CellChangeTimes->{3.89626132535924*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"354625b9-3f65-48eb-b81f-79f06c95e5ee"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sum move in front", "Section",
 CellChangeTimes->{{3.8962614913747625`*^9, 
  3.8962614943532934`*^9}},ExpressionUUID->"44aa2a8e-766a-4ea8-8b89-\
9410cf6f0e01"],

Cell[TextData[{
 "This implements the linearity relation for integrals: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "+", "z"}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "\[LongEqual]", 
    RowBox[{
     RowBox[{"\[Integral]", 
      RowBox[{"y", 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
     RowBox[{"\[Integral]", 
      RowBox[{"z", 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"adee14a2-322e-41c8-922b-af2f506a4401"],
 ":"
}], "Text",
 CellID->29617,ExpressionUUID->"f302add6-a6a9-4d7d-9eba-928df300d136"],

Cell[BoxData[
 RowBox[{
  RowBox[{"integrate", "[", 
   RowBox[{
    RowBox[{"y_", "+", "z_"}], ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"integrate", "[", 
    RowBox[{"y", ",", "x"}], "]"}], "+", 
   RowBox[{"integrate", "[", 
    RowBox[{"z", ",", "x"}], "]"}]}]}]], "Input",
 CellLabel->
  "In[274]:=",ExpressionUUID->"328c5191-c57d-408d-b1ba-ce95ca3be777"],

Cell["This is for sums", "Text",
 CellChangeTimes->{{3.896261638816391*^9, 
  3.8962616412833295`*^9}},ExpressionUUID->"db04b327-25b2-498c-beb0-\
6b5199a453c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{"y_", "+", "z_"}], ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"sum", "[", 
    RowBox[{"y", ",", "x"}], "]"}], "+", 
   RowBox[{"sum", "[", 
    RowBox[{"z", ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.896261541134916*^9, 3.8962615501712475`*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"44a9a34b-16af-4a77-a6ef-61c7f9181977"],

Cell[TextData[{
 "This makes ",
 Cell[BoxData["integrate"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "83e5392d-24d9-469d-8dbd-d25dc0519ef9"],
 " pull out factors that are independent of the integration variable ",
 Cell[BoxData["x"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "805d16db-fd89-4415-8454-36fb58f94157"],
 ":"
}], "Text",
 CellID->24041,ExpressionUUID->"9b053dff-fe97-4395-9d30-078af0a3b4ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"integrate", "[", 
   RowBox[{
    RowBox[{"c_", " ", "y_"}], ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"c", " ", 
    RowBox[{"integrate", "[", 
     RowBox[{"y", ",", "x"}], "]"}]}], "/;", 
   RowBox[{"FreeQ", "[", 
    RowBox[{"c", ",", "x"}], "]"}]}]}]], "Input",
 CellLabel->"In[282]:=",
 CellID->24423,ExpressionUUID->"f032ef56-9776-4f93-8e44-715d7f4583d2"],

Cell["Sums:", "Text",
 CellChangeTimes->{{3.8962616502646804`*^9, 
  3.896261651141015*^9}},ExpressionUUID->"91ce220c-9793-45fb-ae4b-\
399997382563"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{"c_", " ", "y_"}], ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"c", " ", 
    RowBox[{"sum", "[", 
     RowBox[{"y", ",", "x"}], "]"}]}], "/;", 
   RowBox[{"FreeQ", "[", 
    RowBox[{"c", ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.896261651854156*^9, 3.896261662125901*^9}},
 CellLabel->"In[283]:=",
 CellID->9820677,ExpressionUUID->"6d2275c6-080d-4f2f-86c1-b229b0dab8ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "sum", "]"}]], "Input",
 CellChangeTimes->{{3.896261664304273*^9, 3.8962616663075294`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"c385902d-a8aa-4134-878e-244568899cc0"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"sum", "[", 
          RowBox[{
           RowBox[{"c_", " ", "y_"}], ",", "x_"}], "]"}], ":=", 
         RowBox[{
          RowBox[{"c", " ", 
           RowBox[{"sum", "[", 
            RowBox[{"y", ",", "x"}], "]"}]}], "/;", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"c", ",", "x"}], "]"}]}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"sum", "[", 
          RowBox[{
           RowBox[{"y_", "+", "z_"}], ",", "x_"}], "]"}], ":=", 
         RowBox[{
          RowBox[{"sum", "[", 
           RowBox[{"y", ",", "x"}], "]"}], "+", 
          RowBox[{"sum", "[", 
           RowBox[{"z", ",", "x"}], "]"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "Rows" -> {{1.}}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  Definition[$CellContext`sum],
  Editable->False]], "Output",
 CellChangeTimes->{3.896261666603458*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"89c983a2-b7b4-44c1-ae25-55e771cfca3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "integrate", "]"}]], "Input",
 CellChangeTimes->{{3.896261664304273*^9, 3.896261672866763*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"6178fd8e-8540-4af6-88fd-2f5d162ff01a"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"integrate", "[", 
          RowBox[{
           RowBox[{"y_", "+", "z_"}], ",", "x_"}], "]"}], ":=", 
         RowBox[{
          RowBox[{"integrate", "[", 
           RowBox[{"y", ",", "x"}], "]"}], "+", 
          RowBox[{"integrate", "[", 
           RowBox[{"z", ",", "x"}], "]"}]}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"integrate", "[", 
          RowBox[{
           RowBox[{"c_", " ", "y_"}], ",", "x_"}], "]"}], ":=", 
         RowBox[{
          RowBox[{"c", " ", 
           RowBox[{"integrate", "[", 
            RowBox[{"y", ",", "x"}], "]"}]}], "/;", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"c", ",", "x"}], "]"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "Rows" -> {{1.}}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  Definition[$CellContext`integrate],
  Editable->False]], "Output",
 CellChangeTimes->{3.8962616732007637`*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"0da7c82a-1230-4141-912f-0387b0662e6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"f", "+", "g"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "imax"}], "}"}]}], "]"}], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{"f", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}], "+", 
     RowBox[{"Sum", "[", 
      RowBox[{"g", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8962615522010207`*^9, 3.896261620671133*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"190564a3-9b84-47bf-ad56-9fe864b13702"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8962615601441793`*^9, 3.896261620956933*^9}},
 CellLabel->
  "Out[281]=",ExpressionUUID->"0ff16d35-08ce-4c8c-ada8-4c446aa83f00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["i", "2"], "+", "j"}], ",", "j"}], "]"}]], "Input",
 CellChangeTimes->{{3.896261678930195*^9, 3.8962616842875724`*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"0cd2c4c4-d93b-4c65-8b14-26fcff79149f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"integrate", "[", 
   RowBox[{
    SuperscriptBox["i", "2"], ",", "j"}], "]"}], "+", 
  RowBox[{"integrate", "[", 
   RowBox[{"j", ",", "j"}], "]"}]}]], "Output",
 CellChangeTimes->{3.896261684576456*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"07093b6f-9df0-4311-954c-0eeed29df03e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrate", "[", 
  RowBox[{
   RowBox[{"5", "j"}], ",", "j"}], "]"}]], "Input",
 CellChangeTimes->{{3.896261678930195*^9, 3.896261705317058*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"c0e4f132-a000-4298-958c-864cdc89e783"],

Cell[BoxData[
 RowBox[{"5", " ", 
  RowBox[{"integrate", "[", 
   RowBox[{"j", ",", "j"}], "]"}]}]], "Output",
 CellChangeTimes->{3.8962617056351123`*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"b6d24afa-7016-4d5d-ae3e-453fa486b422"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Get", "/@", 
       RowBox[{"FileNames", "[", 
        RowBox[{
        "\"\<*.wl\>\"", ",", 
         "\"\<C:\\\\Users\\\\Peter\\\\OneDrive - Marshall \
University\\\\GitHub\\\\basic-hypergeometric-functions-paclet\\\\basic-\
hypergeometric-functions\\\\Kernel\>\""}], "]"}]}], ";"}], ",", 
     RowBox[{"Get", "::", "noopen"}]}], "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.896261806101799*^9, 3.8962618061027994`*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"bc6b07a8-24ea-417c-8884-86cb4b33d840"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApplyTransformationsToExpression", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"W87", "[", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "q", ",", 
      "z"}], "]"}], "==", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", "q", "]"}], " ", 
             RowBox[{
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
            RowBox[{"q", " ", 
             RowBox[{"a", "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}]}], ",", "d", ",", "e", ",", 
            "f"}], "}"}], ",", "q", ",", "n"}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"q", " ", "a"}], "]"}], ",", 
            RowBox[{"q", " ", 
             RowBox[{"a", "/", "b"}]}], ",", 
            RowBox[{"q", " ", 
             RowBox[{"a", "/", "c"}]}], ",", 
            RowBox[{"q", " ", 
             RowBox[{"a", "/", "d"}]}], ",", 
            RowBox[{"q", " ", 
             RowBox[{"a", "/", "e"}]}], ",", 
            RowBox[{"q", " ", 
             RowBox[{"a", "/", "f"}]}]}], "}"}], ",", "q", ",", "n"}], 
         "]"}]}], " ", 
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", " ", "a"}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "n"}]}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sqrt", "[", "q", "]"}], " ", 
            RowBox[{
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "n"}]}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", " ", "c", " ", 
          RowBox[{"z", "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"q", " ", "a"}], "]"}]}]}], ")"}], "^", "n"}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", "^", "2"}], " ", 
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a", " ", 
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"a", " ", "q"}], "]"}], "/", "d"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", "n"}], " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], ",", 
               RowBox[{"e", " ", 
                RowBox[{"q", "^", "n"}]}], ",", 
               RowBox[{"f", " ", 
                RowBox[{"q", "^", "n"}]}]}], "}"}], ",", "q", ",", "m"}], 
            "]"}], "/", 
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"q", ",", 
               RowBox[{
                RowBox[{"q", "^", "n"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"a", " ", "q"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{"2", " ", "n"}], ")"}]}], " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a", " ", 
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], "/", "d"}], 
               ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a", " ", 
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], "/", "e"}], 
               ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"a", " ", 
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "n"}], ")"}]}]}], ")"}], "/", "f"}]}], 
              "}"}], ",", "q", ",", "m"}], "]"}]}], " ", 
          RowBox[{
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "n"}]}], ")"}]}]}], "}"}], ",", "q", ",", 
             RowBox[{"2", " ", "m"}]}], "]"}], "/", 
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", "^", "2"}], " ", 
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "}"}], ",", "q", 
             ",", 
             RowBox[{"2", " ", "m"}]}], "]"}]}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"a", " ", "q"}], ")"}]}], ")"}], "^", "m"}], " ", 
          RowBox[{
           RowBox[{"QPhI", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"q", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"b", "^", "2"}], " ", 
                  RowBox[{"c", "^", "2"}], " ", 
                  RowBox[{"d", "^", "2"}], " ", 
                  RowBox[{"e", "^", "2"}], " ", 
                  RowBox[{"f", "^", "2"}], " ", 
                  RowBox[{"z", "^", "2"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", "^", "4"}], " ", 
                  RowBox[{"q", "^", "4"}]}], ")"}]}], ",", 
               RowBox[{"a", " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}]}], ")"}]}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}], " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "f"}], 
                 ")"}]}]}], "}"}], ",", "q"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"f", ",", 
                 RowBox[{"q", "/", "f"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "z"}], 
                   ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "-", "m", "-", "n"}], 
                    ")"}]}], " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"b", "^", "2"}], " ", 
                    RowBox[{"c", "^", "2"}], " ", 
                    RowBox[{"d", "^", "2"}], " ", 
                    RowBox[{"e", "^", "2"}], " ", 
                    RowBox[{"f", "^", "2"}], " ", 
                    RowBox[{"z", "^", "2"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"a", "^", "4"}], " ", 
                    RowBox[{"q", "^", "3"}]}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"a", " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]}], ")"}], "/", 
                  "f"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}], ")"}]}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "e"}], ")"}]}]}], 
                "}"}], ",", "q"}], "]"}]}], ")"}]}], " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "j"}], ")"}], " ", "j"}], ")"}]}], 
             " ", 
             RowBox[{
              RowBox[{"QPh", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}], " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"a", " ", "q"}], "]"}], "/", "e"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", "2"}], " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "m", "+", "n"}], ")"}]}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e"}], ")"}]}], ",", 
                  RowBox[{"f", " ", 
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}]}]}], "}"}], ",", "q", 
                ",", "j"}], "]"}], "/", 
              RowBox[{"QPh", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"q", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", "2"}], " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}], ")"}]}]}], 
                    ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"a", " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]}], ")"}], "/", 
                   "e"}], ",", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"a", " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}]}], ")"}]}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "f"}], 
                    ")"}]}]}], "}"}], ",", "q", ",", "j"}], "]"}]}], " ", 
             RowBox[{
              RowBox[{"QPh", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}], ")"}]}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "e"}], ")"}]}], 
                 "}"}], ",", "q", ",", 
                RowBox[{"2", " ", "j"}]}], "]"}], "/", 
              RowBox[{"QPh", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "2"}], ")"}]}], " ", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", "/", "2"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "e"}], ")"}]}], 
                 "}"}], ",", "q", ",", 
                RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "a"}], " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]}], ")"}], "^", 
              "j"}], " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"QPhI", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]}], ")"}]}], 
                    " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", "f", "]"}], " ", "\[Rho]"}], ")"}], 
                    "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "-", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "m", "-", "n"}], ")"}]}]}], 
                    ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "z"}], 
                    "]"}], " ", "\[Rho]"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", "f", "]"}], " ", "g"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]}], ")"}]}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", "f", "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "z"}], 
                    "]"}], " ", "\[Rho]"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "-", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "m", "-", "n"}], ")"}]}]}], 
                    ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", "f", "]"}], " ", "\[Rho]"}], ")"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "m", "+", "n"}], ")"}]}]}], 
                    ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", "f", "]"}], " ", "\[Rho]"}], ")"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}], ")"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "b", " ", "c", " ", "d", " ", "e", " ", "f", " ", "z"}], 
                    ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], ")"}], " ", "g"}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"11", "/", "4"}], ")"}]}], " ", "\[Rho]"}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", "/", "4"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3", " ", "j"}], ")"}], "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"f", " ", "z"}], "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e"}], "]"}], " ", 
                    "\[Rho]"}], ")"}]}]}], "}"}], ",", "q"}], "]"}], "/", 
                RowBox[{"QPhI", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]}], ")"}]}], 
                    " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], " ", "\[Rho]"}], ")"}], 
                    "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    "b", " ", "c", " ", "d", " ", "e", " ", "f", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "4"}], ")"}]}], "-", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "m", "-", "n"}], ")"}]}]}], 
                    ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    "b", " ", "c", " ", "d", " ", "e", " ", "f", " ", "z"}], 
                    "]"}], " ", "\[Rho]"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], " ", "g"}], ")"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}], ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    "b", " ", "c", " ", "d", " ", "e", " ", "f", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "4"}], ")"}]}], " ", "\[Rho]"}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}], ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    "b", " ", "c", " ", "d", " ", "e", " ", "f", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "4"}], ")"}]}], " ", "\[Rho]"}], 
                    ")"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}], ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    "b", " ", "c", " ", "d", " ", "e", " ", "f", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "4"}], ")"}]}], " ", "\[Rho]"}], 
                    ")"}]}], ")"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    "b", " ", "c", " ", "d", " ", "e", " ", "f", " ", "z"}], 
                    "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "4"}], ")"}]}], " ", "\[Rho]"}], 
                    ")"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]}], ")"}]}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}], ")"}], " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}], " ", "g"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "e", " ", "f"}], 
                    "]"}], " ", "\[Rho]"}], ")"}]}]}], "}"}], ",", "q"}], 
                 "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Zeta]", ",", 
                 RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
               RowBox[{"WorkingPrecision", "->", "30"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896261750551507*^9, 3.8962617564409885`*^9}, {
  3.896261828459221*^9, 3.8962618546579647`*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"7f2893c1-ce67-4f08-98e7-2c5f263a9792"],

Cell[BoxData[
 RowBox[{
  RowBox[{"W87", "[", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "q", ",", 
    "z"}], "]"}], "\[Equal]", 
  TemplateBox[{
    RowBox[{
      FractionBox[
       RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{"b", "**", "c", "**", "z"}], ")"}], "n"], "**", 
         RowBox[{"QPh", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"q", "**", "a"}], "}"}], ",", "q", ",", 
             RowBox[{"2", " ", "n"}]}], "]"}], "**", 
         RowBox[{"QPh", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 FractionBox[
                  RowBox[{
                    SqrtBox["q"], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                  RowBox[{"b", "**", "c"}]], ",", 
                 FractionBox[
                  SqrtBox[
                   RowBox[{"q", "**", "a"}]], "b"], ",", 
                 FractionBox[
                  SqrtBox[
                   RowBox[{"q", "**", "a"}]], "c"], ",", 
                 FractionBox[
                  RowBox[{"q", "**", "a"}], 
                  RowBox[{"b", "**", "c"}]], ",", "d", ",", "e", ",", "f"}], 
               "}"}], ",", "q", ",", "n"}], "]"}]}], 
       RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{"q", "**", "a"}], ")"}], 
          RowBox[{"n", "/", "2"}]], "**", 
         RowBox[{"QPh", "[", 
           RowBox[{
             RowBox[{"{", 
               FractionBox[
                RowBox[{
                  SqrtBox["q"], "**", 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]}], 
                RowBox[{"b", "**", "c"}]], "}"}], ",", "q", ",", 
             RowBox[{"2", " ", "n"}]}], "]"}], "**", 
         RowBox[{"QPh", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"q", ",", 
                 SqrtBox[
                  RowBox[{"q", "**", "a"}]], ",", 
                 FractionBox[
                  RowBox[{"q", "**", "a"}], "b"], ",", 
                 FractionBox[
                  RowBox[{"q", "**", "a"}], "c"], ",", 
                 FractionBox[
                  RowBox[{"q", "**", "a"}], "d"], ",", 
                 FractionBox[
                  RowBox[{"q", "**", "a"}], "e"], ",", 
                 FractionBox[
                  RowBox[{"q", "**", "a"}], "f"]}], "}"}], ",", "q", ",", 
             "n"}], "]"}]}]], "**", 
      TemplateBox[{
        RowBox[{
          RowBox[{"(", 
            RowBox[{
              RowBox[{
                SuperscriptBox["b", "m"], "**", 
                SuperscriptBox["c", "m"], "**", 
                SuperscriptBox["d", "m"], "**", 
                SuperscriptBox["z", "m"], "**", 
                RowBox[{"QPh", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}]], "**", "a"}], "}"}], ",", "q", 
                    ",", 
                    RowBox[{"2", " ", "m"}]}], "]"}], "**", 
                RowBox[{"QPh", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}]], "**", 
                    SuperscriptBox["a", "2"]}], 
                    RowBox[{"b", "**", "c", "**", "d"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", "n"}]], "**", "a"}], 
                    RowBox[{"b", "**", "c"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["q"], "**", 
                    SqrtBox["a"]}], "d"], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "2"], "+", "n"}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", "**", "c", "**", "d"}]], ",", 
                    RowBox[{
                    SuperscriptBox["q", "n"], "**", "e"}], ",", 
                    RowBox[{
                    SuperscriptBox["q", "n"], "**", "f"}]}], "}"}], ",", "q", 
                    ",", "m"}], "]"}], "**", 
                RowBox[{"QPhI", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"q", ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["b", "2"], "**", 
                    SuperscriptBox["c", "2"], "**", 
                    SuperscriptBox["d", "2"], "**", 
                    SuperscriptBox["e", "2"], "**", 
                    SuperscriptBox["f", "2"], "**", 
                    SuperscriptBox["z", "2"]}], 
                    RowBox[{
                    SuperscriptBox["q", "4"], "**", 
                    SuperscriptBox["a", "4"]}]], ",", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}]}]], "**", "a"}], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["5", "2"], "+", "m", "+", "n"}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}], 
                    
                    RowBox[{
                    "b", "**", "c", "**", "d", "**", "e", "**", "f"}]]}], 
                    "}"}], ",", "q"}], "]"}]}], "/", 
              RowBox[{"(", 
                RowBox[{"2", " ", "\[Pi]", " ", 
                  RowBox[{
                    SuperscriptBox["q", "m"], "**", 
                    SuperscriptBox["a", "m"], "**", 
                    RowBox[{"QPh", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}]], "**", 
                    SuperscriptBox["a", "2"]}], 
                    RowBox[{"b", "**", "c", "**", "d"}]], "}"}], ",", "q", 
                    ",", 
                    RowBox[{"2", " ", "m"}]}], "]"}], "**", 
                    RowBox[{"QPh", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"q", ",", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "2"], "+", "n"}]], "**", 
                    SqrtBox["a"]}], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "2"], "+", 
                    RowBox[{"2", " ", "n"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", "**", "c"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", "n"}]], "**", "a"}], "d"], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", "n"}]], "**", "a"}], "e"], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", "n"}]], "**", "a"}], "f"]}], "}"}], ",",
                     "q", ",", "m"}], "]"}], "**", 
                    RowBox[{"QPhI", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"f", ",", 
                    FractionBox["q", "f"], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["5", "2"], "+", "m", "+", "n"}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}], 
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "z"}]], ",", 
                    FractionBox[
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", "z"}], 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "2"], "+", "m", "+", "n"}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["b", "2"], "**", 
                    SuperscriptBox["c", "2"], "**", 
                    SuperscriptBox["d", "2"], "**", 
                    SuperscriptBox["e", "2"], "**", 
                    SuperscriptBox["f", "2"], "**", 
                    SuperscriptBox["z", "2"]}], 
                    RowBox[{
                    SuperscriptBox["q", "3"], "**", 
                    SuperscriptBox["a", "4"]}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", "m", "+", "n"}]], "**", "a"}], "f"], 
                    ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["5", "2"], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]]}], "}"}], 
                    ",", "q"}], "]"}]}]}], ")"}]}], ")"}], "**", 
          TemplateBox[{
            RowBox[{
              SuperscriptBox["q", 
               RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"j", "**", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "j", "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]}]], "**", 
              FractionBox[
               RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "**", "a"}], ")"}], "j"], "**", 
                 RowBox[{"QPh", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["5", "2"], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "n"}], ")"}]}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], "}"}], 
                    ",", "q", ",", 
                    RowBox[{"2", " ", "j"}]}], "]"}], "**", 
                 RowBox[{"QPh", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "2"], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "2"], "+", "m", "+", "n"}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", "**", "c", "**", "d"}]], ",", 
                    FractionBox[
                    SqrtBox[
                    RowBox[{"q", "**", "a"}]], "e"], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"2", "+", "m", "+", "n"}]], "**", 
                    SuperscriptBox["a", "2"]}], 
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], ",", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"m", "+", "n"}]], "**", "f"}]}], "}"}], ",", "q", 
                    ",", "j"}], "]"}]}], 
               RowBox[{
                 RowBox[{"QPh", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "2"], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], "}"}], 
                    ",", "q", ",", 
                    RowBox[{"2", " ", "j"}]}], "]"}], "**", 
                 RowBox[{"QPh", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"q", ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "m", "+", "n"}], ")"}]}]], "**", 
                    SuperscriptBox["a", "2"]}], 
                    RowBox[{"b", "**", "c", "**", "d"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{"1", "+", "m", "+", "n"}]], "**", "a"}], "e"], 
                    ",", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "2"], "+", "m", "+", "n"}]], "**", 
                    SqrtBox["a"]}], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["5", "2"], "+", "m", "+", "n"}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "2"}]]}], 
                    
                    RowBox[{
                    "b", "**", "c", "**", "d", "**", "e", "**", "f"}]]}], 
                    "}"}], ",", "q", ",", "j"}], "]"}]}]], "**", 
              TemplateBox[{
                RowBox[{
                  RowBox[{"QPhI", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", 
                    SqrtBox["f"], "**", "\[Rho]"}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], "**", 
                    "g", "**", 
                    SqrtBox["z"]}]], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "z"}]], "**", "\[Rho]"}], 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", 
                    SqrtBox["f"], "**", "g"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", 
                    SqrtBox["f"], "**", "g"}], 
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "z"}]], "**", "\[Rho]"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox[
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], "**", 
                    "g", "**", 
                    SqrtBox["z"]}], 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", 
                    SqrtBox["f"], "**", "\[Rho]"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SqrtBox[
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], "**", 
                    "g", "**", 
                    SqrtBox["z"]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], "**", 
                    SqrtBox["f"], "**", "\[Rho]"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", "f"}],
                     ")"}], 
                    RowBox[{"3", "/", "2"}]], "**", "g", "**", 
                    SuperscriptBox["z", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"11", "/", "4"}]], "**", "\[Rho]"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"6", " ", "j"}], "+", 
                    RowBox[{"6", " ", "m"}], "+", 
                    RowBox[{"6", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", 
                    SqrtBox["f"], "**", "g", "**", 
                    SqrtBox["z"]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"b", "**", "c", "**", "d", "**", "e"}]], "**", 
                    "\[Rho]"}]]}], "}"}], ",", "q"}], "]"}], "/", 
                  RowBox[{"QPhI", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", "\[Rho]"}], 
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "f"}]], "**", "g", "**", 
                    SqrtBox["z"]}]], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", "f", 
                    "**", "z"}]], "**", "\[Rho]"}], 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", "g"}]], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "f"}]], "**", "g", "**", 
                    SqrtBox["z"]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "4"}]], "**", "\[Rho]"}]], ",", 
                    RowBox[{"\[PlusMinus]", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "f"}]], "**", "g", "**", 
                    SqrtBox["z"]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "4"}]], "**", "\[Rho]"}]]}], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "f"}]], "**", "g", "**", 
                    SqrtBox["z"]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "4"}]], "**", "\[Rho]"}]]}], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]], "**", 
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], "**", "g", "**", 
                    SqrtBox["z"]}], 
                    RowBox[{
                    SqrtBox[
                    
                    RowBox[{"b", "**", "c", "**", "d", "**", "e", "**", 
                    "f"}]], "**", "\[Rho]"}]]}], "}"}], ",", "q"}], "]"}]}], 
                "\[Zeta]", 
                RowBox[{"-", "\[Pi]"}], "\[Pi]"}, "InactiveIntegrate", 
               DisplayFunction -> (RowBox[{
                  SubsuperscriptBox[
                   StyleBox["\[Integral]", "Inactive"], #3, #4], 
                  RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ), 
               InterpretationFunction -> (RowBox[{
                  RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                  RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], "j",
             "0", "\[Infinity]"}, "InactiveSum", DisplayFunction -> (RowBox[{
              UnderoverscriptBox[
               StyleBox["\[Sum]", "Inactive"], 
               RowBox[{#2, "=", #3}], #4], #}]& ), 
           InterpretationFunction -> (RowBox[{
              RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
              RowBox[{#, ",", 
                RowBox[{"{", 
                  RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], "m", 
        "0", "\[Infinity]"}, "InactiveSum", DisplayFunction -> (RowBox[{
          UnderoverscriptBox[
           StyleBox["\[Sum]", "Inactive"], 
           RowBox[{#2, "=", #3}], #4], #}]& ), 
       InterpretationFunction -> (RowBox[{
          RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
          RowBox[{#, ",", 
            RowBox[{"{", 
              RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], "n", "0", 
    "\[Infinity]"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.896261846107791*^9, 3.8962618641687455`*^9}},
 CellLabel->
  "Out[290]=",ExpressionUUID->"6bb2d5dd-bedd-440a-a76f-3b65f676e755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       RowBox[{"p", "**", "q"}], "/", 
       RowBox[{"(", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"r", "**", "k"}]}], ")"}]}], ")"}], "m", "0", 
   "\[Infinity]"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], 
      RowBox[{#2, "=", #3}], #4], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.8962618907811375`*^9, 3.8962619393856225`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"9c28abc8-ffc3-46f6-9045-1ebb6d79a958"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"p", "**", "q"}], 
    RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"r", "**", "k"}]}]], "m", "0", "\[Infinity]"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], 
      RowBox[{#2, "=", #3}], #4], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.896261893100651*^9, {3.896261925306468*^9, 3.896261939689952*^9}},
 CellLabel->
  "Out[293]=",ExpressionUUID->"d66ddd9a-477b-42c1-99fa-996a0f02e5d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Activate", "[", 
  TemplateBox[{
    RowBox[{"(", 
      RowBox[{
        RowBox[{"p", "**", "q"}], "/", 
        RowBox[{"(", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"r", "**", "k"}]}], ")"}]}], ")"}], "m", "0", 
    "\[Infinity]"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.8962619520701675`*^9, 3.89626195387708*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"fcfd6254-0ce5-4800-853c-cc79f23db4fc"],

Cell[BoxData[
 TemplateBox[{
  "Sum", "div", "\"Sum does not converge.\"", 2, 295, 13, 
   34144348814115307709, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8962619542726097`*^9},
 CellLabel->
  "During evaluation of \
In[295]:=",ExpressionUUID->"75fd9913-c37d-491f-b1df-d65fad5df4a3"],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"m", "=", "0"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{"p", "**", "q"}], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"r", "**", "k"}]}]]}]], "Output",
 CellChangeTimes->{3.896261955281122*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"05fa31b8-a026-4507-b03b-fafb7a6c8bd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformFraction", "[", 
  TemplateBox[{
    RowBox[{"(", 
      RowBox[{
        RowBox[{"p", "**", 
          SuperscriptBox["q", 
           RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "j"}], "+", 
                 RowBox[{"2", " ", "m"}], "+", 
                 RowBox[{"2", " ", "n"}]}], ")"}]}]]}], "/", 
        RowBox[{"(", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"r", "**", "k"}]}], ")"}]}], ")"}], "m", "0", 
    "\[Infinity]"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.896261943230183*^9, 3.896261946149908*^9}, {
   3.8962619815676427`*^9, 3.8962619838883038`*^9}, 3.896262163231941*^9},
 CellLabel->
  "In[298]:=",ExpressionUUID->"0c35f906-d039-4948-9825-20712b3efa4a"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"p", "**", 
      SuperscriptBox["q", 
       RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"2", " ", "j"}], "+", 
             RowBox[{"2", " ", "m"}], "+", 
             RowBox[{"2", " ", "n"}]}], ")"}]}]]}], 
    RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"r", "**", "k"}]}]], "m", "0", "\[Infinity]"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], 
      RowBox[{#2, "=", #3}], #4], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.896261946466134*^9, 3.8962619841855993`*^9, 
  3.896262164981811*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"f90576c9-1f44-4925-aa34-9624f010b6dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"p", " ", 
     RowBox[{
      SuperscriptBox["q", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"2", " ", "j"}], "+", 
          RowBox[{"2", " ", "m"}], "+", 
          RowBox[{"2", " ", "n"}]}], ")"}]}]], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"r", "**", "k"}]}], ")"}]}]}], ")"}], ",", "m"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8962621428414435`*^9, 3.8962621801559653`*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"6c441cb5-86d4-472a-9383-087dc456c022"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   RowBox[{"sum", "[", 
    RowBox[{
     SuperscriptBox["q", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "j"}], "+", 
         RowBox[{"2", " ", "m"}], "+", 
         RowBox[{"2", " ", "n"}]}], ")"}]}]], ",", "m"}], "]"}]}], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"r", "**", "k"}]}]]], "Output",
 CellChangeTimes->{{3.896262151188094*^9, 3.8962621807629833`*^9}},
 CellLabel->
  "Out[300]=",ExpressionUUID->"3d60d256-15a4-4615-8ba5-e2c8b958e1f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceAll", "[", 
   RowBox[{"{", 
    RowBox[{"sum", "->", 
     RowBox[{"Inactive", "[", "Sum", "]"}]}], "}"}], "]"}], "[", 
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", " ", 
      RowBox[{
       SuperscriptBox["q", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", "j"}], "+", 
           RowBox[{"2", " ", "m"}], "+", 
           RowBox[{"2", " ", "n"}]}], ")"}]}]], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"r", "**", "k"}]}], ")"}]}]}], ")"}], ",", "m"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896262197658993*^9, 3.896262212204317*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"5e4d5bbc-f2de-4cf0-8781-6b3f08082831"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   TemplateBox[{
     SuperscriptBox["q", 
      RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"2", " ", "j"}], "+", 
            RowBox[{"2", " ", "m"}], "+", 
            RowBox[{"2", " ", "n"}]}], ")"}]}]], "m"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderscriptBox[
        StyleBox["\[Sum]", "Inactive"], #2], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"r", "**", "k"}]}]]], "Output",
 CellChangeTimes->{{3.8962622092934203`*^9, 3.896262212528757*^9}},
 CellLabel->
  "Out[302]=",ExpressionUUID->"76dbc1ea-a574-49ba-89c1-03e2cfe4e210"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"{", "SumData", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SumData", "::", "usage"}], "=", 
   "\"\<SumData[sum] gives data on sum. This is intended to be used for only \
single sums, not multiple sums with more than one variable of \
summation.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"SumData", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SumData", "[", "sum_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inactiveSum", ",", "summand", ",", "summationList", ",", 
      "summationvariable", ",", "lowerbound", ",", "upperbound", ",", 
      "minmaxsumlist"}], "}"}], ",", 
    RowBox[{
     RowBox[{"inactiveSum", "=", 
      RowBox[{"Inactivate", "[", 
       RowBox[{"sum", ",", "Sum"}], "]"}]}], ";", 
     RowBox[{"summand", "=", 
      RowBox[{"First", "[", "inactiveSum", "]"}]}], ";", 
     RowBox[{"summationList", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"summationvariable", ",", "lowerbound", ",", "upperbound"}], 
        "}"}], "=", 
       RowBox[{"First", "[", 
        RowBox[{"Rest", "[", "inactiveSum", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<inactive-sum\>\"", "->", "inactiveSum"}], ",", 
       RowBox[{"\"\<summand\>\"", "->", "summand"}], ",", 
       RowBox[{"\"\<summation-list\>\"", "->", "summationList"}], ",", 
       RowBox[{"\"\<summation-variable\>\"", "->", "summationvariable"}], ",", 
       RowBox[{"\"\<lower-bound\>\"", "->", "lowerbound"}]}], "|>"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.896262303664973*^9, 3.896262497512319*^9}, {
  3.896262542787836*^9, 3.896262546881461*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"7c9d59e8-3909-4eb1-a6fc-b8294b623ccf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  TemplateBox[{
    RowBox[{"(", 
      RowBox[{
        RowBox[{"p", "**", 
          SuperscriptBox["q", 
           RowBox[{
             FractionBox["1", "4"], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "j"}], "+", 
                 RowBox[{"2", " ", "m"}], "+", 
                 RowBox[{"2", " ", "n"}]}], ")"}]}]]}], "/", 
        RowBox[{"(", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"r", "**", "k"}]}], ")"}]}], ")"}], "m", "0", 
    "\[Infinity]"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.8962622691805153`*^9, 3.896262276075256*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"57d27853-8795-4b3a-a1b6-c7a2f06ee2b8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"inactive-sum\"\>", "\[Rule]", 
    TemplateBox[{
      FractionBox[
       RowBox[{"p", "**", 
         SuperscriptBox["q", 
          RowBox[{
            FractionBox["1", "4"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "j"}], "+", 
                RowBox[{"2", " ", "m"}], "+", 
                RowBox[{"2", " ", "n"}]}], ")"}]}]]}], 
       RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"r", "**", "k"}]}]], "m", "0", "\[Infinity]"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], 
         RowBox[{#2, "=", #3}], #4], #}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"summand\"\>", "\[Rule]", 
    FractionBox[
     RowBox[{"p", "**", 
      SuperscriptBox["q", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"2", " ", "j"}], "+", 
          RowBox[{"2", " ", "m"}], "+", 
          RowBox[{"2", " ", "n"}]}], ")"}]}]]}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"r", "**", "k"}]}]]}], ",", 
   RowBox[{"\<\"summation-list\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", "m"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8962622768594303`*^9, {3.896262369974113*^9, 3.8962623948728547`*^9}, 
   3.896262452751584*^9, {3.8962624843369894`*^9, 3.896262498600814*^9}},
 CellLabel->
  "Out[330]=",ExpressionUUID->"cf1dca0e-423d-4943-9361-a04180f075d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imax"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8962622691805153`*^9, 3.896262276075256*^9}, {
  3.8962625022742214`*^9, 3.896262515908913*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"c3f6a06d-bf78-4190-b9d2-5ea0df50b0b5"],

Cell[BoxData[
 TemplateBox[{
  "Set", "shape", 
   "\"Lists \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"summationvariable$169951\\\", \\\",\\\", \
\\\"lowerbound$169951\\\", \\\",\\\", \\\"upperbound$169951\\\"}], \
\\\"}\\\"}]\\) and \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"imax\\\"}], \\\"}\\\"}]\\) are not the same shape.\"", 2, 331, 14, 
   34144348814115307709, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896262516327609*^9},
 CellLabel->
  "During evaluation of \
In[331]:=",ExpressionUUID->"18af996f-ec8c-46a4-ae56-106e7c91939f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"inactive-sum\"\>", "\[Rule]", 
    TemplateBox[{"f", "i", "imax"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], #2, #3], #}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3}], "}"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"summand\"\>", "\[Rule]", "f"}], ",", 
   RowBox[{"\<\"summation-list\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imax"}], "}"}]}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", 
    "summationvariable$169951"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "lowerbound$169951"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.896262517379636*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"c98a8a20-8dfb-444c-9779-07be4904873a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"{", "SumData", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SumData", "::", "usage"}], "=", 
   "\"\<SumData[sum] gives data on sum. This is intended to be used for only \
single sums, not multiple sums with more than one variable of \
summation.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"SumData", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SumData", "[", 
   RowBox[{"sum", ":", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sum", "|", 
       RowBox[{"Inactive", "[", "Sum", "]"}]}], ")"}], "[", 
     RowBox[{"summand_", ",", 
      RowBox[{"{", 
       RowBox[{"summationvariable_", ",", "upperbound_"}], "}"}]}], "]"}]}], 
   "]"}], ":=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<summand\>\"", "->", "summand"}], ",", 
    RowBox[{"\"\<summation-variable\>\"", "->", "summationvariable"}], ",", 
    RowBox[{"\"\<lower-bound\>\"", "->", "1"}], ",", 
    RowBox[{"\"\<upper-bound\>\"", "->", "upperbound"}], ",", 
    RowBox[{"\"\<difference\>\"", "->", "1"}]}], 
   "|>"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SumData", "[", 
   RowBox[{"sum", ":", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sum", "|", 
       RowBox[{"Inactive", "[", "Sum", "]"}]}], ")"}], "[", 
     RowBox[{"summand_", ",", 
      RowBox[{"{", 
       RowBox[{"summationvariable_", ",", "lowerbound_", ",", "upperbound_"}],
        "}"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<summand\>\"", "->", "summand"}], ",", 
    RowBox[{"\"\<summation-variable\>\"", "->", "summationvariable"}], ",", 
    RowBox[{"\"\<lower-bound\>\"", "->", "lowerbound"}], ",", 
    RowBox[{"\"\<upper-bound\>\"", "->", "upperbound"}], ",", 
    RowBox[{"\"\<difference\>\"", "->", "1"}]}], 
   "|>"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SumData", "[", 
   RowBox[{"sum", ":", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sum", "|", 
       RowBox[{"Inactive", "[", "Sum", "]"}]}], ")"}], "[", 
     RowBox[{"summand_", ",", 
      RowBox[{"{", 
       RowBox[{
       "summationvariable_", ",", "lowerbound_", ",", "upperbound_", ",", 
        "difference_"}], "}"}]}], "]"}]}], "]"}], ":=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<summand\>\"", "->", "summand"}], ",", 
    RowBox[{"\"\<summation-variable\>\"", "->", "summationvariable"}], ",", 
    RowBox[{"\"\<lower-bound\>\"", "->", "lowerbound"}], ",", 
    RowBox[{"\"\<upper-bound\>\"", "->", "upperbound"}], ",", 
    RowBox[{"\"\<difference\>\"", "->", "difference"}]}], "|>"}]}]}], "Input",
 CellChangeTimes->{{3.896262566383162*^9, 3.8962626436311917`*^9}, {
  3.896262687698307*^9, 3.8962628000187488`*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"73715862-0d72-4b0d-8d04-2524afa57886"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imax"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896262616599434*^9, 3.8962626217189703`*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"f8a43b91-49e9-4fa6-8368-425a801bd4b2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summand\"\>", "\[Rule]", "f"}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", "i"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "imax"}], ",", 
   RowBox[{"\<\"difference\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8962626232194653`*^9, 3.89626271340466*^9, 
  3.8962627510314655`*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"e8a4289a-3a0d-4c64-b348-16ba12f5e0ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{
   RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imax"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896262616599434*^9, 3.8962626217189703`*^9}, {
  3.89626278611743*^9, 3.8962627916719594`*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"90e6976d-fbe4-405f-a560-91eb3e6c9172"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summand\"\>", "\[Rule]", "f"}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", "i"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "imax"}], ",", 
   RowBox[{"\<\"difference\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8962627920896454`*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"a9453b35-0947-4456-a25e-aacca093164d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896262616599434*^9, 3.8962626491806536`*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"4b17b312-7b6a-4f71-9062-b22b2ac9d4cb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summand\"\>", "\[Rule]", "f"}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", "i"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "imin"}], ",", 
   RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "imax"}], ",", 
   RowBox[{"\<\"difference\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8962626496031923`*^9, 3.8962627161141186`*^9, 
  3.896262753171196*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"638f5bec-b6a1-45d7-98d7-6ec352dcd4f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{
   RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896262616599434*^9, 3.8962626491806536`*^9}, {
  3.8962628055584826`*^9, 3.8962628072860346`*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"c17e3d01-1eab-4c63-9ebe-b95dfcd7e068"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summand\"\>", "\[Rule]", "f"}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", "i"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "imin"}], ",", 
   RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "imax"}], ",", 
   RowBox[{"\<\"difference\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8962628078881655`*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"d8a595de-b59c-4036-a616-a5de1b17103c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imin", ",", "imax", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896262616599434*^9, 3.8962626491806536`*^9}, {
  3.8962627178916855`*^9, 3.896262720028331*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"2bfd53f9-6273-487b-9f2c-3f8d53e57808"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summand\"\>", "\[Rule]", "f"}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", "i"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "imin"}], ",", 
   RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "imax"}], ",", 
   RowBox[{"\<\"difference\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.896262720526664*^9, 3.8962627551943293`*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"733230e8-9329-477e-90f2-83e2329f1372"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumData", "[", 
  RowBox[{
   RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "imin", ",", "imax", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896262616599434*^9, 3.8962626491806536`*^9}, {
  3.8962627178916855`*^9, 3.896262720028331*^9}, {3.8962628114103713`*^9, 
  3.8962628131846128`*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"3d9c814c-7232-4859-adcf-454387f56fd5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"summand\"\>", "\[Rule]", "f"}], ",", 
   RowBox[{"\<\"summation-variable\"\>", "\[Rule]", "i"}], ",", 
   RowBox[{"\<\"lower-bound\"\>", "\[Rule]", "imin"}], ",", 
   RowBox[{"\<\"upper-bound\"\>", "\[Rule]", "imax"}], ",", 
   RowBox[{"\<\"difference\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8962628137379827`*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"78653eb6-871c-4032-8731-69549b34a61f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"summand", "=", 
     RowBox[{"(", 
      RowBox[{"p", " ", 
       RowBox[{
        SuperscriptBox["q", 
         RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"2", " ", "j"}], "+", 
            RowBox[{"2", " ", "m"}], "+", 
            RowBox[{"2", " ", "n"}]}], ")"}]}]], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"r", "**", "k"}]}], ")"}]}]}], ")"}]}], "}"}], ",", 
   RowBox[{"Inactivate", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{"summand", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], ",", 
     "Sum"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8962628972083435`*^9, 3.8962629499039154`*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"dfe69b3d-c64a-4589-a450-2495d58361c0"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"p", " ", 
      SuperscriptBox["q", 
       RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"2", " ", "j"}], "+", 
             RowBox[{"2", " ", "m"}], "+", 
             RowBox[{"2", " ", "n"}]}], ")"}]}]]}], 
    RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"r", "**", "k"}]}]], "m", "0", "\[Infinity]"},
  "InactiveSum",
  DisplayFunction->(RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]", "Inactive"], 
      RowBox[{#2, "=", #3}], #4], #}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.896262927061263*^9, 3.896262950392662*^9}},
 CellLabel->
  "Out[387]=",ExpressionUUID->"c6f107c8-1c11-42ce-8fd0-0490f76c0f19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sumData", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sum", "=", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"summand", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", "**", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                  FractionBox["1", "4"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"2", " ", "j"}], "+", 
                    RowBox[{"2", " ", "m"}], "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}]}]]}], "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", "\[Pi]", " ", 
                 RowBox[{"r", "**", "k"}]}], ")"}]}], ")"}]}], "}"}], ",", 
           RowBox[{"Inactivate", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{"summand", ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], ",",
              "Sum"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"SumData", "[", "sum", "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"sum", "[", 
    RowBox[{
     RowBox[{"sumData", "[", "\"\<summand\>\"", "]"}], ",", 
     RowBox[{"sumData", "[", "\"\<summation-variable\>\"", "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8962628972083435`*^9, 3.8962630280444136`*^9}, {
  3.896263069252711*^9, 3.8962631329838266`*^9}, {3.896263166430954*^9, 
  3.8962631911894364`*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"60ce5ec3-35e4-4af8-87b5-141fd5886517"],

Cell[BoxData[
 FractionBox[
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{"p", "**", 
     SuperscriptBox["q", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "j"}], "+", 
         RowBox[{"2", " ", "m"}], "+", 
         RowBox[{"2", " ", "n"}]}], ")"}]}]]}], ",", "m"}], "]"}], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"r", "**", "k"}]}]]], "Output",
 CellChangeTimes->{{3.896263105905574*^9, 3.8962631334939585`*^9}, {
  3.8962631696241274`*^9, 3.8962631915598245`*^9}},
 CellLabel->
  "Out[397]=",ExpressionUUID->"efb64d3a-7562-4613-baca-75557b8b4d30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sum", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"p", " ", 
     RowBox[{
      SuperscriptBox["q", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"2", " ", "j"}], "+", 
          RowBox[{"2", " ", "m"}], "+", 
          RowBox[{"2", " ", "n"}]}], ")"}]}]], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"r", "**", "k"}]}], ")"}]}]}], ")"}], ",", "m"}], 
  "]"}]], "Input",
 CellLabel->
  "In[384]:=",ExpressionUUID->"1ffc261f-9dcd-44ea-8bd2-fc6c7a534e23"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   RowBox[{"sum", "[", 
    RowBox[{
     SuperscriptBox["q", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "j"}], "+", 
         RowBox[{"2", " ", "m"}], "+", 
         RowBox[{"2", " ", "n"}]}], ")"}]}]], ",", "m"}], "]"}]}], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"r", "**", "k"}]}]]], "Output",
 CellChangeTimes->{3.896262876424413*^9},
 CellLabel->
  "Out[384]=",ExpressionUUID->"f9e55baa-6b6e-4716-9087-6602ffff7b77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceAll", "[", 
   RowBox[{"{", 
    RowBox[{"sum", "->", 
     RowBox[{"Inactive", "[", "Sum", "]"}]}], "}"}], "]"}], "[", 
  RowBox[{"sum", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", " ", 
      RowBox[{
       SuperscriptBox["q", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", "j"}], "+", 
           RowBox[{"2", " ", "m"}], "+", 
           RowBox[{"2", " ", "n"}]}], ")"}]}]], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"r", "**", "k"}]}], ")"}]}]}], ")"}], ",", "m"}], "]"}], 
  "]"}]], "Input",
 CellLabel->
  "In[383]:=",ExpressionUUID->"c46de681-a318-4a4d-a679-ba9b9b5292da"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   TemplateBox[{
     SuperscriptBox["q", 
      RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"2", " ", "j"}], "+", 
            RowBox[{"2", " ", "m"}], "+", 
            RowBox[{"2", " ", "n"}]}], ")"}]}]], "m"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderscriptBox[
        StyleBox["\[Sum]", "Inactive"], #2], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"r", "**", "k"}]}]]], "Output",
 CellChangeTimes->{3.8962628695812893`*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"6bd197c5-455f-4a5e-8992-7c6e31f69ab5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RefineSumStructure", "[", "sum_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{"{", "summand", "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8962622251279545`*^9, 
  3.8962622674865212`*^9}},ExpressionUUID->"74891b0e-3378-4371-97cf-\
aec3d238d0d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", 
  TemplateBox[{
    FractionBox[
     RowBox[{"p", "**", 
       SuperscriptBox["q", 
        RowBox[{
          FractionBox["1", "4"], " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "j"}], "+", 
              RowBox[{"2", " ", "m"}], "+", 
              RowBox[{"2", " ", "n"}]}], ")"}]}]]}], 
     RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"r", "**", "k"}]}]], "m", "0", "\[Infinity]"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "]"}]], "Input",
 CellChangeTimes->{{3.8962623221635256`*^9, 3.8962623232673883`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"13a2fbab-2995-4c82-8f00-d1abb53cc988"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"Sum"},
   "InactiveHead",
   BaseStyle->"Inactive",
   SyntaxForm->"Symbol",
   Tooltip->"Inactive[Sum]"], "[", 
  RowBox[{"{", 
   RowBox[{"m", ",", "0", ",", "\[Infinity]"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.896262323689229*^9},
 CellLabel->
  "Out[304]=",ExpressionUUID->"5d471eff-a26f-4ec1-bc70-8e4ece76e552"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Rest", "[", 
   TemplateBox[{
     FractionBox[
      RowBox[{"p", "**", 
        SuperscriptBox["q", 
         RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"2", " ", "j"}], "+", 
               RowBox[{"2", " ", "m"}], "+", 
               RowBox[{"2", " ", "n"}]}], ")"}]}]]}], 
      RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"r", "**", "k"}]}]], "m", "0", "\[Infinity]"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896262328441533*^9, 3.896262331737137*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"dd810a72-ad9c-4fea-a82c-3e3ed65664b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"m", ",", "0", ",", "\[Infinity]"}], "}"}]], "Output",
 CellChangeTimes->{3.8962623320590005`*^9},
 CellLabel->
  "Out[305]=",ExpressionUUID->"8acb7ec7-f010-459c-aa4c-1df19a41c1ac"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1dcb1b88-23fc-42c0-beb3-2099dd0051f3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3782, 87, 284, "Input",ExpressionUUID->"9313cbba-cfea-42ae-b09d-b42471ee755a"],
Cell[CellGroupData[{
Cell[4365, 111, 345, 9, 31, "Input",ExpressionUUID->"9b696054-5c78-4d7f-842d-09bc47ac2cdc"],
Cell[4713, 122, 33973, 618, 162, "Output",ExpressionUUID->"ad462f77-8b59-4edb-85bf-691e42d32129"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38723, 745, 583, 16, 31, "Input",ExpressionUUID->"5038b95e-1480-4052-990e-36d1208b0d8d"],
Cell[39309, 763, 39018, 729, 195, "Output",ExpressionUUID->"cf570366-5cff-43c5-b591-7bdffb40c90a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78364, 1497, 367, 10, 31, "Input",ExpressionUUID->"6317e222-5090-4031-b648-8a69d5bb21d3"],
Cell[78734, 1509, 568, 16, 59, "Output",ExpressionUUID->"1ac2bad0-8d6d-428a-aef8-4f71f4d9ea10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79339, 1530, 377, 10, 31, "Input",ExpressionUUID->"8ca969b8-f1f0-4a37-97b6-d0988af43517"],
Cell[79719, 1542, 608, 17, 59, "Output",ExpressionUUID->"51854867-2ded-42ab-9ea1-44302012c673"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80364, 1564, 589, 16, 31, "Input",ExpressionUUID->"6ec44eb3-c166-40eb-bee0-c90d66f41003"],
Cell[80956, 1582, 37818, 700, 195, "Output",ExpressionUUID->"73b282d6-63d6-4a1e-b0c4-5d30ab0e91c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118811, 2287, 600, 16, 31, "Input",ExpressionUUID->"ed946fe9-396a-4bea-8773-059e719942bd"],
Cell[119414, 2305, 37842, 700, 195, "Output",ExpressionUUID->"4d6faf66-f2e1-4f61-a46f-51416fbd88f7"]
}, Open  ]],
Cell[157271, 3008, 447, 13, 28, "Input",ExpressionUUID->"de3cf3be-ec50-4c9a-8296-8a0f55467114"],
Cell[CellGroupData[{
Cell[157743, 3025, 346, 10, 31, "Input",ExpressionUUID->"d30f7889-babb-4fd9-a124-4b579360b0f0"],
Cell[158092, 3037, 325, 10, 35, "Output",ExpressionUUID->"6114da91-5cec-4e27-a5c5-cc33052943cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158454, 3052, 336, 10, 31, "Input",ExpressionUUID->"8aeb3000-e1f7-474a-92be-98584e1b02d1"],
Cell[158793, 3064, 291, 8, 34, "Output",ExpressionUUID->"570112ea-f407-44f1-9272-9e5fc4b38fe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159121, 3077, 345, 10, 31, "Input",ExpressionUUID->"e2c78a6c-fdd8-46a6-ad4f-04622b1c5c8e"],
Cell[159469, 3089, 332, 10, 35, "Output",ExpressionUUID->"922c780a-9e9b-4b8b-8988-d7eecb3212bd"]
}, Open  ]],
Cell[159816, 3102, 697, 16, 48, "Input",ExpressionUUID->"fba929f5-133d-42cb-af44-849ece8a3ace"],
Cell[CellGroupData[{
Cell[160538, 3122, 275, 6, 28, "Input",ExpressionUUID->"2e6b7227-3ab3-4275-b84a-43a6f80f1a22"],
Cell[160816, 3130, 414, 9, 32, "Output",ExpressionUUID->"3aa2383f-8cb4-4eb2-951c-00a27f0c7b1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161267, 3144, 569, 16, 28, "Input",ExpressionUUID->"6b8ce20a-884f-487b-af36-e6ab867f7016"],
Cell[161839, 3162, 692, 17, 32, "Output",ExpressionUUID->"248df5d9-62a1-401e-9aba-1c373598a2a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162568, 3184, 729, 20, 28, "Input",ExpressionUUID->"c4e9a65d-2b8c-4834-b5c3-a7ef221e3c7e"],
Cell[163300, 3206, 34213, 627, 117, "Output",ExpressionUUID->"d2af11ff-f8c5-479e-a153-155f2f870e31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197550, 3838, 304, 7, 28, "Input",ExpressionUUID->"245766ed-b740-463f-b961-4f497fe21da3"],
Cell[197857, 3847, 224, 5, 32, "Output",ExpressionUUID->"f495f788-a963-4db3-8ba5-02d791276d9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198118, 3857, 560, 16, 28, "Input",ExpressionUUID->"0b877155-00fa-494e-a457-29b212d34a4a"],
Cell[198681, 3875, 29206, 525, 117, "Output",ExpressionUUID->"fadf4ae9-43dd-4d39-ac0b-e82bad1d2e00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227924, 4405, 602, 18, 28, "Input",ExpressionUUID->"ee608ef3-9b39-4e5d-a8d1-b6fc5cf52be7"],
Cell[228529, 4425, 344, 9, 32, "Output",ExpressionUUID->"d9064cc3-09bd-45cb-b5c4-71cae14776ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228910, 4439, 815, 22, 57, "Input",ExpressionUUID->"47dd182e-7602-4e23-9566-e0812f642194"],
Cell[229728, 4463, 666, 21, 46, "Output",ExpressionUUID->"3334c046-0f62-4d9e-8ecb-a07570112149"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230431, 4489, 812, 22, 57, "Input",ExpressionUUID->"d058fca7-8aec-42f3-bc5e-062a77f58c16"],
Cell[231246, 4513, 199, 5, 32, "Output",ExpressionUUID->"bbfd1d04-934c-4553-96d5-bdb4afa28c57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231482, 4523, 872, 24, 57, "Input",ExpressionUUID->"e30fa332-b578-47a1-af11-b8e6a1a6b49f"],
Cell[232357, 4549, 540, 15, 60, "Output",ExpressionUUID->"a0545904-c54a-4818-9fc3-7fc8de3280c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232934, 4569, 917, 25, 57, "Input",ExpressionUUID->"ccafca61-55f5-48fb-9e3a-f702314df53b"],
Cell[233854, 4596, 300, 9, 32, "Output",ExpressionUUID->"cf8835a9-7878-4b74-a2c6-ff66f397d746"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234191, 4610, 854, 23, 57, "Input",ExpressionUUID->"0a483fec-2938-438e-8f27-28f08341bafd"],
Cell[235048, 4635, 324, 9, 32, "Output",ExpressionUUID->"0c672e3b-b774-4ffd-87e1-ef04a48ed378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235409, 4649, 925, 25, 57, "Input",ExpressionUUID->"a5361509-f9d8-4763-a156-8688a3f39cfb"],
Cell[236337, 4676, 505, 17, 46, "Output",ExpressionUUID->"6a472b72-abb8-4be5-9c4f-bd5a0eb255eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236879, 4698, 197, 3, 28, "Input",ExpressionUUID->"24e4fb56-a12c-41ea-a797-feaf5c2ec68d"],
Cell[237079, 4703, 10357, 260, 93, "Output",ExpressionUUID->"d610c625-adf0-4915-b1c1-8ec2f6b1e8c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247473, 4968, 378, 9, 31, "Input",ExpressionUUID->"2ac92e67-556d-4f60-bb99-f5e5d885b546"],
Cell[247854, 4979, 153, 2, 32, "Output",ExpressionUUID->"0cdaa951-595b-4ee8-a294-3a55b6ed368f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248044, 4986, 390, 10, 28, "Input",ExpressionUUID->"ee11019d-2a21-4c56-8124-57df45f97bec"],
Cell[248437, 4998, 404, 10, 28, "Message",ExpressionUUID->"a525285f-3b59-411e-9a01-8d17caca8a12"],
Cell[248844, 5010, 233, 5, 32, "Output",ExpressionUUID->"99d96c6a-fd3e-462c-9505-499aaaf7a7d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249114, 5020, 403, 10, 28, "Input",ExpressionUUID->"bb8313ac-74f3-452f-961c-d32469ebe9d6"],
Cell[249520, 5032, 404, 10, 28, "Message",ExpressionUUID->"79897410-8343-4411-8d97-52457fff4830"],
Cell[249927, 5044, 246, 5, 32, "Output",ExpressionUUID->"3ef27c54-da61-4f77-92cf-87edb5e91fae"]
}, Open  ]],
Cell[250188, 5052, 386, 11, 28, "Input",ExpressionUUID->"db57bac7-de42-4cea-93ae-869e834a5fb3"],
Cell[CellGroupData[{
Cell[250599, 5067, 369, 10, 31, "Input",ExpressionUUID->"b92e0e65-afae-4cf0-bd8f-1cd39104bb79"],
Cell[250971, 5079, 1692, 75, 32, "Output",ExpressionUUID->"08522989-a14b-4fbe-bed1-419fbb11da5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252700, 5159, 470, 13, 31, "Input",ExpressionUUID->"fdadd151-f823-4c9f-836d-177c9c3570ab"],
Cell[253173, 5174, 2564, 69, 242, "Output",ExpressionUUID->"6f29412e-9b56-4691-808c-3c6520c0d5d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255774, 5248, 582, 15, 55, "Input",ExpressionUUID->"bd22ba99-2465-43b8-a427-1403f7f344c9"],
Cell[256359, 5265, 505, 17, 46, "Output",ExpressionUUID->"44102b16-5cc9-402a-bd1a-1b6056ef9032"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256901, 5287, 338, 9, 28, "Input",ExpressionUUID->"eaea6548-3b00-4f0a-8bf0-35a18f68ae5c"],
Cell[257242, 5298, 156, 3, 32, "Output",ExpressionUUID->"9e676afd-cc13-46d3-8a9b-8787febbace0"]
}, Open  ]],
Cell[257413, 5304, 351, 10, 28, "Input",ExpressionUUID->"23c1ca2e-eb30-4f92-b6c5-e03c28148f2c"],
Cell[CellGroupData[{
Cell[257789, 5318, 548, 17, 28, "Input",ExpressionUUID->"d95e137e-ed03-4dce-95a2-d4aec2c79bf2"],
Cell[258340, 5337, 736, 21, 60, "Output",ExpressionUUID->"a84f4ec5-5774-49ff-a941-1e7ceec16fa8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259113, 5363, 1309, 37, 57, "Input",ExpressionUUID->"7ff4bcf9-0bd7-475d-a27b-fdd32cd88564"],
Cell[260425, 5402, 1001, 27, 60, "Output",ExpressionUUID->"43b46c34-5fcb-445a-baf7-738799966fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261463, 5434, 1432, 39, 87, "Input",ExpressionUUID->"2e38a5e6-4aeb-44b5-b0ec-c39502e0f238"],
Cell[262898, 5475, 691, 19, 32, "Output",ExpressionUUID->"fee4fbe8-83f3-44f1-ab0e-5c89369dd714"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263626, 5499, 154, 3, 67, "Section",ExpressionUUID->"9310037d-8936-4d97-bcec-d583b25d5aae"],
Cell[263783, 5504, 1469, 36, 143, "Input",ExpressionUUID->"0e74a98f-d543-4988-b8e7-9e2b6573c995"],
Cell[CellGroupData[{
Cell[265277, 5544, 203, 4, 28, "Input",ExpressionUUID->"866a0650-a1a7-4b6f-9251-2c14aa04c7cf"],
Cell[265483, 5550, 11867, 286, 93, "Output",ExpressionUUID->"b3c51f66-c129-4191-8b78-d57e23627957"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277387, 5841, 664, 19, 28, "Input",ExpressionUUID->"b2e274c7-4093-4c38-acd9-e88ffc76505d"],
Cell[278054, 5862, 1076, 28, 60, "Output",ExpressionUUID->"d4743de8-78e9-49b8-92ae-faec1ada9e9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279167, 5895, 302, 7, 28, "Input",ExpressionUUID->"fc308a75-b67a-4ad4-82d4-a3356223aa54"],
Cell[279472, 5904, 563, 18, 32, "Output",ExpressionUUID->"7921afd1-2c6c-4756-a284-1dad0262cde5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280072, 5927, 300, 7, 28, "Input",ExpressionUUID->"31d96488-7f93-4805-8afe-c2e5321ea65a"],
Cell[280375, 5936, 317, 10, 32, "Output",ExpressionUUID->"6d2151cd-95de-48b1-9562-80c332217838"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280729, 5951, 444, 13, 28, "Input",ExpressionUUID->"c6b4e9c0-2d06-4328-a087-29de614b9f30"],
Cell[281176, 5966, 811, 27, 32, "Output",ExpressionUUID->"a4e23cb1-7891-409a-98c9-3dc0fd5e39c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282024, 5998, 506, 14, 28, "Input",ExpressionUUID->"c3485b03-b34e-4ed0-bfdb-857883ed36c1"],
Cell[282533, 6014, 381, 12, 32, "Output",ExpressionUUID->"adf2ec9c-a298-45c4-a916-aab1ff5616de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282951, 6031, 486, 14, 28, "Input",ExpressionUUID->"79e1de4e-813f-42ba-9605-780dcf64bd90"],
Cell[283440, 6047, 259, 7, 32, "Output",ExpressionUUID->"b9eb3f66-6447-4c9e-aba7-b7a66249f7af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283736, 6059, 410, 11, 28, "Input",ExpressionUUID->"bd6f0032-e339-4dab-b423-fba2d6316e3b"],
Cell[284149, 6072, 764, 14, 28, "Message",ExpressionUUID->"9ec9b362-6a53-47f6-a1a5-3ee8cd1e34a0"],
Cell[284916, 6088, 411, 11, 32, "Output",ExpressionUUID->"58cb345b-5164-4a02-9f18-d66f3fbac473"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285364, 6104, 365, 10, 31, "Input",ExpressionUUID->"f62e1e98-d9ba-4fd2-9163-d96d77c2f501"],
Cell[285732, 6116, 594, 16, 59, "Output",ExpressionUUID->"c010e783-5423-43c6-93bb-17f928a9b41e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286363, 6137, 516, 15, 31, "Input",ExpressionUUID->"cd26f618-f0c8-4683-8449-a747abfb3afa"],
Cell[286882, 6154, 1027, 27, 60, "Output",ExpressionUUID->"edd15500-b56a-4b23-8234-b54f94e01dcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287946, 6186, 591, 17, 31, "Input",ExpressionUUID->"01760135-6fe2-4b59-bf16-d90af8c456a9"],
Cell[288540, 6205, 247, 7, 64, "Output",ExpressionUUID->"585762e1-b748-41d2-a8dc-3868c5791fbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288824, 6217, 492, 14, 31, "Input",ExpressionUUID->"670f410d-9d68-4d58-a532-4dd280722bfd"],
Cell[289319, 6233, 1619, 44, 60, "Output",ExpressionUUID->"e12760a7-e265-4248-9f63-7f2d82d18d79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290975, 6282, 488, 14, 31, "Input",ExpressionUUID->"be4523c4-3144-40e2-95a9-91baac17f610"],
Cell[291466, 6298, 1001, 27, 60, "Output",ExpressionUUID->"f38618b1-e5b6-4b9f-bc9a-35bb96ba71ce"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292516, 6331, 159, 3, 67, "Section",ExpressionUUID->"89c0a41c-bce5-4953-91fb-1ef7d81dd51b"],
Cell[292678, 6336, 1451, 36, 143, "Input",ExpressionUUID->"ef1585d8-500e-4655-919f-a494a6528a46"],
Cell[CellGroupData[{
Cell[294154, 6376, 349, 9, 28, "Input",ExpressionUUID->"b06a113d-93f3-4e89-9776-d39413959aa3"],
Cell[294506, 6387, 948, 24, 47, "Output",ExpressionUUID->"9d5788db-5199-4800-ba50-62e754c1821a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295503, 6417, 156, 3, 67, "Section",ExpressionUUID->"1f7d8709-db04-4def-80f5-bfdbf713deed"],
Cell[295662, 6422, 1386, 35, 143, "Input",ExpressionUUID->"21025b01-a459-4e64-9108-0ed7f402186e"],
Cell[CellGroupData[{
Cell[297073, 6461, 417, 11, 28, "Input",ExpressionUUID->"9bb466c1-c1a9-43b8-b6ed-942d0d85800f"],
Cell[297493, 6474, 1029, 26, 61, "Output",ExpressionUUID->"91df67a6-07ae-4882-9ec1-db08ab638488"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298559, 6505, 1128, 29, 57, "Input",ExpressionUUID->"a301a20f-b741-45d8-b626-7f067409f602"],
Cell[299690, 6536, 701, 21, 53, "Output",ExpressionUUID->"354625b9-3f65-48eb-b81f-79f06c95e5ee"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300440, 6563, 166, 3, 53, "Section",ExpressionUUID->"44aa2a8e-766a-4ea8-8b89-9410cf6f0e01"],
Cell[300609, 6568, 669, 20, 36, "Text",ExpressionUUID->"f302add6-a6a9-4d7d-9eba-928df300d136",
 CellID->29617],
Cell[301281, 6590, 368, 11, 28, "Input",ExpressionUUID->"328c5191-c57d-408d-b1ba-ce95ca3be777"],
Cell[301652, 6603, 160, 3, 35, "Text",ExpressionUUID->"db04b327-25b2-498c-beb0-6b5199a453c9"],
Cell[301815, 6608, 418, 12, 28, "Input",ExpressionUUID->"44a9a34b-16af-4a77-a6ef-61c7f9181977"],
Cell[302236, 6622, 457, 11, 36, "Text",ExpressionUUID->"9b053dff-fe97-4395-9d30-078af0a3b4ab",
 CellID->24041],
Cell[302696, 6635, 404, 12, 28, "Input",ExpressionUUID->"f032ef56-9776-4f93-8e44-715d7f4583d2",
 CellID->24423],
Cell[303103, 6649, 149, 3, 35, "Text",ExpressionUUID->"91ce220c-9793-45fb-ae4b-399997382563"],
Cell[303255, 6654, 460, 13, 28, "Input",ExpressionUUID->"6d2275c6-080d-4f2f-86c1-b229b0dab8ba",
 CellID->9820677],
Cell[CellGroupData[{
Cell[303740, 6671, 216, 4, 28, "Input",ExpressionUUID->"c385902d-a8aa-4134-878e-244568899cc0"],
Cell[303959, 6677, 1260, 37, 66, "Output",ExpressionUUID->"89c983a2-b7b4-44c1-ae25-55e771cfca3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305256, 6719, 220, 4, 28, "Input",ExpressionUUID->"6178fd8e-8540-4af6-88fd-2f5d162ff01a"],
Cell[305479, 6725, 1298, 37, 70, "Output",ExpressionUUID->"0da7c82a-1230-4141-912f-0387b0662e6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306814, 6767, 665, 21, 28, "Input",ExpressionUUID->"190564a3-9b84-47bf-ad56-9fe864b13702"],
Cell[307482, 6790, 179, 3, 32, "Output",ExpressionUUID->"0ff16d35-08ce-4c8c-ada8-4c446aa83f00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307698, 6798, 286, 7, 31, "Input",ExpressionUUID->"0cd2c4c4-d93b-4c65-8b14-26fcff79149f"],
Cell[307987, 6807, 321, 9, 34, "Output",ExpressionUUID->"07093b6f-9df0-4311-954c-0eeed29df03e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308345, 6821, 253, 6, 28, "Input",ExpressionUUID->"c0e4f132-a000-4298-958c-864cdc89e783"],
Cell[308601, 6829, 237, 6, 32, "Output",ExpressionUUID->"b6d24afa-7016-4d5d-ae3e-453fa486b422"]
}, Open  ]],
Cell[308853, 6838, 632, 16, 143, "Input",ExpressionUUID->"bc6b07a8-24ea-417c-8884-86cb4b33d840"],
Cell[CellGroupData[{
Cell[309510, 6858, 33802, 834, 542, "Input",ExpressionUUID->"7f2893c1-ce67-4f08-98e7-2c5f263a9792"],
Cell[343315, 7694, 28032, 665, 687, "Output",ExpressionUUID->"6bb2d5dd-bedd-440a-a76f-3b65f676e755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371384, 8364, 751, 21, 52, "Input",ExpressionUUID->"9c28abc8-ffc3-46f6-9045-1ebb6d79a958"],
Cell[372138, 8387, 700, 19, 56, "Output",ExpressionUUID->"d66ddd9a-477b-42c1-99fa-996a0f02e5d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372875, 8411, 800, 22, 52, "Input",ExpressionUUID->"fcfd6254-0ce5-4800-853c-cc79f23db4fc"],
Cell[373678, 8435, 313, 8, 28, "Message",ExpressionUUID->"75fd9913-c37d-491f-b1df-d65fad5df4a3"],
Cell[373994, 8445, 352, 10, 56, "Output",ExpressionUUID->"05fa31b8-a026-4507-b03b-fafb7a6c8bd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374383, 8460, 1217, 32, 52, "Input",ExpressionUUID->"0c35f906-d039-4948-9825-20712b3efa4a"],
Cell[375603, 8494, 997, 28, 64, "Output",ExpressionUUID->"f90576c9-1f44-4925-aa34-9624f010b6dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376637, 8527, 690, 21, 44, "Input",ExpressionUUID->"6c441cb5-86d4-472a-9383-087dc456c022"],
Cell[377330, 8550, 612, 18, 62, "Output",ExpressionUUID->"3d60d256-15a4-4615-8ba5-e2c8b958e1f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377979, 8573, 859, 26, 44, "Input",ExpressionUUID->"5e4d5bbc-f2de-4cf0-8781-6b3f08082831"],
Cell[378841, 8601, 851, 24, 58, "Output",ExpressionUUID->"76dbc1ea-a574-49ba-89c1-03e2cfe4e210"]
}, Open  ]],
Cell[379707, 8628, 1919, 46, 219, "Input",ExpressionUUID->"7c9d59e8-3909-4eb1-a6fc-b8294b623ccf"],
Cell[CellGroupData[{
Cell[381651, 8678, 1133, 31, 52, "Input",ExpressionUUID->"57d27853-8795-4b3a-a1b6-c7a2f06ee2b8"],
Cell[382787, 8711, 1977, 52, 64, "Output",ExpressionUUID->"cf1dca0e-423d-4943-9361-a04180f075d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384801, 8768, 370, 9, 28, "Input",ExpressionUUID->"c3f6a06d-bf78-4190-b9d2-5ea0df50b0b5"],
Cell[385174, 8779, 588, 13, 28, "Message",ExpressionUUID->"18af996f-ec8c-46a4-ae56-106e7c91939f"],
Cell[385765, 8794, 977, 24, 59, "Output",ExpressionUUID->"c98a8a20-8dfb-444c-9779-07be4904873a"]
}, Open  ]],
Cell[386757, 8821, 2858, 72, 221, "Input",ExpressionUUID->"73715862-0d72-4b0d-8d04-2524afa57886"],
Cell[CellGroupData[{
Cell[389640, 8897, 319, 8, 28, "Input",ExpressionUUID->"f8a43b91-49e9-4fa6-8368-425a801bd4b2"],
Cell[389962, 8907, 561, 12, 32, "Output",ExpressionUUID->"e8a4289a-3a0d-4c64-b348-16ba12f5e0ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390560, 8924, 405, 10, 28, "Input",ExpressionUUID->"90e6976d-fbe4-405f-a560-91eb3e6c9172"],
Cell[390968, 8936, 513, 11, 32, "Output",ExpressionUUID->"a9453b35-0947-4456-a25e-aacca093164d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391518, 8952, 332, 8, 28, "Input",ExpressionUUID->"4b17b312-7b6a-4f71-9062-b22b2ac9d4cb"],
Cell[391853, 8962, 565, 12, 32, "Output",ExpressionUUID->"638f5bec-b6a1-45d7-98d7-6ec352dcd4f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392455, 8979, 421, 10, 28, "Input",ExpressionUUID->"c17e3d01-1eab-4c63-9ebe-b95dfcd7e068"],
Cell[392879, 8991, 516, 11, 32, "Output",ExpressionUUID->"d8a595de-b59c-4036-a616-a5de1b17103c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393432, 9007, 396, 10, 28, "Input",ExpressionUUID->"2bfd53f9-6273-487b-9f2c-3f8d53e57808"],
Cell[393831, 9019, 538, 11, 32, "Output",ExpressionUUID->"733230e8-9329-477e-90f2-83e2329f1372"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394406, 9035, 485, 12, 28, "Input",ExpressionUUID->"3d9c814c-7232-4859-adcf-454387f56fd5"],
Cell[394894, 9049, 516, 11, 32, "Output",ExpressionUUID->"78653eb6-871c-4032-8731-69549b34a61f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395447, 9065, 984, 29, 44, "Input",ExpressionUUID->"dfe69b3d-c64a-4589-a450-2495d58361c0"],
Cell[396434, 9096, 971, 27, 64, "Output",ExpressionUUID->"c6f107c8-1c11-42ce-8fd0-0490f76c0f19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397442, 9128, 1738, 45, 72, "Input",ExpressionUUID->"60ce5ec3-35e4-4af8-87b5-141fd5886517"],
Cell[399183, 9175, 666, 19, 62, "Output",ExpressionUUID->"efb64d3a-7562-4613-baca-75557b8b4d30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399886, 9199, 620, 20, 44, "Input",ExpressionUUID->"1ffc261f-9dcd-44ea-8bd2-fc6c7a534e23"],
Cell[400509, 9221, 586, 18, 62, "Output",ExpressionUUID->"f9e55baa-6b6e-4716-9087-6602ffff7b77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401132, 9244, 793, 25, 44, "Input",ExpressionUUID->"c46de681-a318-4a4d-a679-ba9b9b5292da"],
Cell[401928, 9271, 827, 24, 58, "Output",ExpressionUUID->"6bd197c5-455f-4a5e-8992-7c6e31f69ab5"]
}, Open  ]],
Cell[402770, 9298, 291, 7, 28, "Input",ExpressionUUID->"74891b0e-3378-4371-97cf-aec3d238d0d1"],
Cell[CellGroupData[{
Cell[403086, 9309, 1029, 28, 60, "Input",ExpressionUUID->"13a2fbab-2995-4c82-8f00-d1abb53cc988"],
Cell[404118, 9339, 366, 11, 32, "Output",ExpressionUUID->"5d471eff-a26f-4ec1-bc70-8e4ece76e552"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404521, 9355, 1084, 30, 60, "Input",ExpressionUUID->"dd810a72-ad9c-4fea-a82c-3e3ed65664b3"],
Cell[405608, 9387, 220, 5, 32, "Output",ExpressionUUID->"8acb7ec7-f010-459c-aa4c-1df19a41c1ac"]
}, Open  ]]
}, Open  ]]
}
]
*)

