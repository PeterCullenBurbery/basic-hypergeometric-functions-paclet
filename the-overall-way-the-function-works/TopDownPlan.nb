(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    641897,      15364]
NotebookOptionsPosition[    630444,      15171]
NotebookOutlinePosition[    630860,      15187]
CellTagsIndexPosition[    630817,      15184]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
We\[CloseCurlyQuote]ll take some Mathematica code and apply some processing \
to it to prevent errors from popping up.\
\>", "Text",
 CellChangeTimes->{{3.8963599366915846`*^9, 
  3.8963599533118167`*^9}},ExpressionUUID->"61925f8d-2cc6-4d1f-9806-\
f7b23625d44c"],

Cell["Here is what we have:", "Text",
 CellChangeTimes->{{3.89635995714264*^9, 
  3.8963599646800117`*^9}},ExpressionUUID->"7269cde9-aa58-4991-ace2-\
3f3d90d735ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equation1", "=", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"W65", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", 
          RowBox[{"q", " ", "a"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], "/", 
           RowBox[{"(", 
            RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q"}], 
       "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"QPhI", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"q", "/", "f"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"f", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], ")"}], 
             "/", 
             RowBox[{"(", 
              RowBox[{"f", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"b", "^", "2"}], " ", 
               RowBox[{"c", "^", "2"}], " ", 
               RowBox[{"d", "^", "2"}], " ", 
               RowBox[{"z", "^", "2"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"q", " ", 
               RowBox[{"a", "^", "2"}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "d"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q"}], "]"}]}], 
       ")"}]}], " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "^", 
         RowBox[{"Binomial", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sqrt", "[", "q", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], ",", "d"}], "}"}], ",", "q", 
           ",", "j"}], "]"}], "/", 
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"q", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", "b"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", "c"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q", 
           ",", "j"}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
           RowBox[{"2", " ", "j"}]}], "]"}], "/", 
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
           RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "q"}], " ", "a", " ", "f"}], ")"}], "/", "d"}], 
          ")"}], "^", "j"}], " ", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"QPhI", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"f", " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{"q", "/", "f"}], " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{"f", " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "/", "f"}], " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                 "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "-", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"3", " ", 
                    RowBox[{"j", "/", "2"}]}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"d", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
           "/", 
           RowBox[{"QPhI", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Zeta]", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8963599653820467`*^9, 3.8963599785760927`*^9}, 
   3.8963600088692846`*^9},
 CellLabel->
  "In[108]:=",ExpressionUUID->"e4c5f9ae-0a36-4999-8ddb-39118be0370a"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"W65", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], 
   "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
             RowBox[{"q", " ", "a"}]], ")"}], "2"], ",", 
          RowBox[{"q", " ", "a"}], ",", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], 
            RowBox[{"3", "/", "2"}]], 
           RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q"}], "]"}], 
      " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "0"}], "\[Infinity]"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", 
           RowBox[{"Binomial", "[", 
            RowBox[{"j", ",", "2"}], "]"}]], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                SqrtBox["q"], " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "b"], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "c"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], 
               RowBox[{"b", " ", "c"}]], ",", "d"}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{"3", "/", "2"}]], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"q", " ", "a", " ", "f"}], "d"]}], ")"}], "j"], " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
                  RowBox[{"f", " ", "g"}]], ",", 
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}],
                   "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
                  RowBox[{"f", " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "z", " ", 
                    SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "j"}], "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"d", " ", "z", " ", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}],
                ",", "q"}], "]"}], 
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                    RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], 
                  "\[Rho]"]}], "}"}], ",", "q"}], "]"}]], ",", 
            RowBox[{"{", 
             RowBox[{"\[Zeta]", ",", 
              RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q", ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "b"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "c"], ",", 
              SqrtBox[
               RowBox[{"q", " ", "a"}]], ",", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SqrtBox["q"], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}]}], ")"}]}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"f", ",", 
          FractionBox["q", "f"], ",", 
          FractionBox[
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c", " ", "d", " ", "z"}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], 
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}]], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["z", "2"]}], 
           RowBox[{"q", " ", 
            SuperscriptBox["a", "2"]}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "a"}], "d"], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{"3", "/", "2"}]], " ", 
            SuperscriptBox["a", 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c"}]]}], "}"}], ",", "q"}], "]"}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8963599825516567`*^9, 3.8963600100684977`*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"a342ee5c-9cc0-4920-9213-61404df15978"]
}, Open  ]],

Cell["We first hold the expression.", "Text",
 CellChangeTimes->{{3.8963600220783014`*^9, 
  3.8963600272657566`*^9}},ExpressionUUID->"b9675c38-5cf0-4dbf-b8bd-\
8f6082d94229"],

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"HoldFunction", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HoldFunction", "[", "input_", "]"}], ":=", 
  RowBox[{"Hold", "[", "input", "]"}]}]}], "Input",
 CellChangeTimes->{{3.89636003003761*^9, 3.8963600508063555`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"c86dfdcd-94f5-4900-b0ff-2ba5d72d480e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HoldFunction", "[", 
  RowBox[{
   RowBox[{"W65", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], "==", 
   RowBox[{
    RowBox[{
     RowBox[{"QPhI", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", 
         RowBox[{"q", " ", "a"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"q", " ", "a"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q"}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", ",", 
           RowBox[{"q", "/", "f"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"f", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{"f", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"b", "^", "2"}], " ", 
              RowBox[{"c", "^", "2"}], " ", 
              RowBox[{"d", "^", "2"}], " ", 
              RowBox[{"z", "^", "2"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"q", " ", 
              RowBox[{"a", "^", "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], "/", "d"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q"}], "]"}]}], 
      ")"}]}], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "^", 
        RowBox[{"Binomial", "[", 
         RowBox[{"j", ",", "2"}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", "q", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], ",", "d"}], "}"}], ",", "q", 
          ",", "j"}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "b"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "c"}], ",", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"q", " ", "a"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q", 
          ",", "j"}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "j"}]}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "q"}], " ", "a", " ", "f"}], ")"}], "/", "d"}], 
         ")"}], "^", "j"}], " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "-", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   RowBox[{"j", "/", "2"}]}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"d", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
          "/", 
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Zeta]", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8963600518176584`*^9, 3.8963600543859653`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"eac96d1d-9553-4e34-98f1-100180489987"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"W65", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], 
   "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
             RowBox[{"q", " ", "a"}]], ")"}], "2"], ",", 
          RowBox[{"q", " ", "a"}], ",", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], 
            RowBox[{"3", "/", "2"}]], 
           RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q"}], "]"}], 
      " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "0"}], "\[Infinity]"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", 
           RowBox[{"Binomial", "[", 
            RowBox[{"j", ",", "2"}], "]"}]], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                SqrtBox["q"], " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "b"], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "c"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], 
               RowBox[{"b", " ", "c"}]], ",", "d"}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{"3", "/", "2"}]], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"q", " ", "a", " ", "f"}], "d"]}], ")"}], "j"], " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
                  RowBox[{"f", " ", "g"}]], ",", 
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}],
                   "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
                  RowBox[{"f", " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "z", " ", 
                    SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "j"}], "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"d", " ", "z", " ", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}],
                ",", "q"}], "]"}], 
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                    RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], 
                  "\[Rho]"]}], "}"}], ",", "q"}], "]"}]], ",", 
            RowBox[{"{", 
             RowBox[{"\[Zeta]", ",", 
              RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q", ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "b"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "c"], ",", 
              SqrtBox[
               RowBox[{"q", " ", "a"}]], ",", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SqrtBox["q"], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}]}], ")"}]}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"f", ",", 
          FractionBox["q", "f"], ",", 
          FractionBox[
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c", " ", "d", " ", "z"}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], 
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}]], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["z", "2"]}], 
           RowBox[{"q", " ", 
            SuperscriptBox["a", "2"]}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "a"}], "d"], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{"3", "/", "2"}]], " ", 
            SuperscriptBox["a", 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c"}]]}], "}"}], ",", "q"}], "]"}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.896360055558651*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"7a439b67-676b-4058-a7c7-e8978b169b0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HeldExpressionQ", "[", 
  RowBox[{
   RowBox[{"W65", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], "==", 
   RowBox[{
    RowBox[{
     RowBox[{"QPhI", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", 
         RowBox[{"q", " ", "a"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"q", " ", "a"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q"}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", ",", 
           RowBox[{"q", "/", "f"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"f", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{"f", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"b", "^", "2"}], " ", 
              RowBox[{"c", "^", "2"}], " ", 
              RowBox[{"d", "^", "2"}], " ", 
              RowBox[{"z", "^", "2"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"q", " ", 
              RowBox[{"a", "^", "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], "/", "d"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q"}], "]"}]}], 
      ")"}]}], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "^", 
        RowBox[{"Binomial", "[", 
         RowBox[{"j", ",", "2"}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", "q", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], ",", "d"}], "}"}], ",", "q", 
          ",", "j"}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "b"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "c"}], ",", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"q", " ", "a"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q", 
          ",", "j"}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "j"}]}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "q"}], " ", "a", " ", "f"}], ")"}], "/", "d"}], 
         ")"}], "^", "j"}], " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "-", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   RowBox[{"j", "/", "2"}]}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"d", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
          "/", 
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Zeta]", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8963600518176584`*^9, 3.8963600543859653`*^9}, {
  3.896360099312936*^9, 3.896360103370455*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"e3d57432-f834-4475-9141-e85fb491e2d4"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.89636010371146*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"1b73bce0-3175-4d93-87d2-d861402dad09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HoldFunction", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"W65", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", 
          RowBox[{"q", " ", "a"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], "/", 
           RowBox[{"(", 
            RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q"}], 
       "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"QPhI", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"q", "/", "f"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"f", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], ")"}], 
             "/", 
             RowBox[{"(", 
              RowBox[{"f", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"b", "^", "2"}], " ", 
               RowBox[{"c", "^", "2"}], " ", 
               RowBox[{"d", "^", "2"}], " ", 
               RowBox[{"z", "^", "2"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"q", " ", 
               RowBox[{"a", "^", "2"}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "d"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q"}], "]"}]}], 
       ")"}]}], " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "^", 
         RowBox[{"Binomial", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sqrt", "[", "q", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], ",", "d"}], "}"}], ",", "q", 
           ",", "j"}], "]"}], "/", 
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"q", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", "b"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", "c"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q", 
           ",", "j"}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
           RowBox[{"2", " ", "j"}]}], "]"}], "/", 
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
           RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "q"}], " ", "a", " ", "f"}], ")"}], "/", "d"}], 
          ")"}], "^", "j"}], " ", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"QPhI", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"f", " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{"q", "/", "f"}], " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{"f", " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "/", "f"}], " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                 "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "-", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"3", " ", 
                    RowBox[{"j", "/", "2"}]}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"d", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
           "/", 
           RowBox[{"QPhI", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Zeta]", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8963600518176584`*^9, 3.896360085828979*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"d33dc299-ea8e-4021-97cc-5206b5d0b033"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"W65", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], 
    "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
              RowBox[{"q", " ", "a"}]], ")"}], "2"], ",", 
           RowBox[{"q", " ", "a"}], ",", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]], 
            RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q"}], "]"}], 
       " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"j", "=", "0"}], "\[Infinity]"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["q", 
            RowBox[{"Binomial", "[", 
             RowBox[{"j", ",", "2"}], "]"}]], " ", 
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{
                 SqrtBox["q"], " ", 
                 SuperscriptBox["a", 
                  RowBox[{"3", "/", "2"}]]}], 
                RowBox[{"b", " ", "c"}]], ",", 
               FractionBox[
                SqrtBox[
                 RowBox[{"q", " ", "a"}]], "b"], ",", 
               FractionBox[
                SqrtBox[
                 RowBox[{"q", " ", "a"}]], "c"], ",", 
               FractionBox[
                RowBox[{"q", " ", "a"}], 
                RowBox[{"b", " ", "c"}]], ",", "d"}], "}"}], ",", "q", ",", 
             "j"}], "]"}], " ", 
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              FractionBox[
               RowBox[{
                SuperscriptBox["q", 
                 RowBox[{"3", "/", "2"}]], " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
             RowBox[{"2", " ", "j"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"q", " ", "a", " ", "f"}], "d"]}], ")"}], "j"], " ", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"QPhI", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"f", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                    "\[Rho]"}], "g"], ",", 
                  FractionBox[
                   RowBox[{"q", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
                   RowBox[{"f", " ", "g"}]], ",", 
                  FractionBox[
                   RowBox[{"f", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}],
                    "\[Rho]"], ",", 
                  FractionBox[
                   RowBox[{"q", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
                   RowBox[{"f", " ", "\[Rho]"}]], ",", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "z", " ", 
                    SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "j"}], "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"d", " ", "z", " ", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}],
                 ",", "q"}], "]"}], 
              RowBox[{"QPhI", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                    "\[Rho]"}], "g"], ",", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                    RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], 
                   "\[Rho]"]}], "}"}], ",", "q"}], "]"}]], ",", 
             RowBox[{"{", 
              RowBox[{"\[Zeta]", ",", 
               RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
             RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"q", ",", 
               FractionBox[
                RowBox[{"q", " ", "a"}], "b"], ",", 
               FractionBox[
                RowBox[{"q", " ", "a"}], "c"], ",", 
               SqrtBox[
                RowBox[{"q", " ", "a"}]], ",", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"q", " ", "a"}], ")"}], 
                 RowBox[{"3", "/", "2"}]], 
                RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q", ",", 
             "j"}], "]"}], " ", 
           RowBox[{"QPh", "[", 
            RowBox[{
             RowBox[{"{", 
              FractionBox[
               RowBox[{
                SqrtBox["q"], " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
             RowBox[{"2", " ", "j"}]}], "]"}]}], ")"}]}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", ",", 
           FractionBox["q", "f"], ",", 
           FractionBox[
            RowBox[{"f", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], 
              RowBox[{"3", "/", "2"}]]}], 
            RowBox[{"b", " ", "c", " ", "d", " ", "z"}]], ",", 
           FractionBox[
            RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], 
            RowBox[{"f", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], 
              RowBox[{"3", "/", "2"}]]}]], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["b", "2"], " ", 
             SuperscriptBox["c", "2"], " ", 
             SuperscriptBox["d", "2"], " ", 
             SuperscriptBox["z", "2"]}], 
            RowBox[{"q", " ", 
             SuperscriptBox["a", "2"]}]], ",", 
           FractionBox[
            RowBox[{"q", " ", "a"}], "d"], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{"3", "/", "2"}]], " ", 
             SuperscriptBox["a", 
              RowBox[{"3", "/", "2"}]]}], 
            RowBox[{"b", " ", "c"}]]}], "}"}], ",", "q"}], "]"}]}], ")"}]}]}],
    "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.8963600864280214`*^9, 3.8963601112761536`*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"d60cb441-b9e8-46ad-8314-457b5481a047"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonHeldVariable", "=", 
   RowBox[{
    RowBox[{"W1211", "[", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
      "h", ",", "i", ",", "j", ",", "q", ",", "z"}], "]"}], "==", 
    RowBox[{"QHypergeometricPFQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"q", " ", 
         RowBox[{"Sqrt", "[", "a", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "q"}], " ", 
         RowBox[{"Sqrt", "[", "a", "]"}]}], ",", "b", ",", "c", ",", "d", ",",
         "e", ",", "f", ",", "g", ",", "h", ",", "i", ",", "j"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sqrt", "[", "a", "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Sqrt", "[", "a", "]"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "b"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "c"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "d"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "e"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "f"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "g"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "h"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "i"}]}], ",", 
        RowBox[{"q", " ", 
         RowBox[{"a", "/", "j"}]}]}], "}"}], ",", "q", ",", "z"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.89636011605212*^9, 3.8963601585086536`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"4940d82f-fdc5-4f53-891a-7b68e13df651"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HeldVariable", "=", 
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"W1211", "[", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
       "h", ",", "i", ",", "j", ",", "q", ",", "z"}], "]"}], "==", 
     RowBox[{"QHypergeometricPFQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"q", " ", 
          RowBox[{"Sqrt", "[", "a", "]"}]}], ",", 
         RowBox[{
          RowBox[{"-", "q"}], " ", 
          RowBox[{"Sqrt", "[", "a", "]"}]}], ",", "b", ",", "c", ",", "d", 
         ",", "e", ",", "f", ",", "g", ",", "h", ",", "i", ",", "j"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sqrt", "[", "a", "]"}], ",", 
         RowBox[{"-", 
          RowBox[{"Sqrt", "[", "a", "]"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "b"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "c"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "d"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "e"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "f"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "g"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "h"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "i"}]}], ",", 
         RowBox[{"q", " ", 
          RowBox[{"a", "/", "j"}]}]}], "}"}], ",", "q", ",", "z"}], "]"}]}], 
    "\n", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8963601479554453`*^9, 3.896360162975851*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"3383fce6-9dac-4238-9b70-222e0fc06213"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HoldFunction", "[", "nonHeldVariable", "]"}]], "Input",
 CellChangeTimes->{{3.896360168144305*^9, 3.896360173176893*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"8591a493-08be-4897-8d19-2ec01f81357c"],

Cell[BoxData[
 RowBox[{"Hold", "[", "nonHeldVariable", "]"}]], "Output",
 CellChangeTimes->{3.89636017348655*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"63e1ae49-3f83-4aa9-a7bf-58d79b0c2407"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HeldExpressionQ", "[", "nonHeldVariable", "]"}]], "Input",
 CellChangeTimes->{{3.896360168144305*^9, 3.8963601864681797`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"7a434db6-e34b-4019-94cd-a0f8bb35c69c"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.896360186781362*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"44800860-782b-4f92-9ef3-1ca16f2a95d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HeldExpressionQ", "[", "HeldVariable", "]"}]], "Input",
 CellChangeTimes->{{3.896360168144305*^9, 3.896360200263049*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"e8c28e50-7210-409e-a276-cc2088962c70"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.896360195935173*^9, 3.896360201221861*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"afd3b073-bb07-43ed-a15b-dce0597b0185"]
}, Open  ]],

Cell["we need to ", "Text",
 CellChangeTimes->{{3.896360065468578*^9, 
  3.896360067392284*^9}},ExpressionUUID->"a7142581-9ea4-4d21-a95e-\
03a55ad34a8d"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "FunctionThatHoldsUnheldExpressions", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"FunctionThatHoldsUnheldExpressions", ",", 
   RowBox[{"{", "HoldAll", "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FunctionThatHoldsUnheldExpressions", "[", "input_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "unique", "}"}], ",", 
    RowBox[{
     RowBox[{"unique", "=", 
      RowBox[{"Unique", "[", "]"}]}], ";", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"HeldExpressionQ", "[", "input", "]"}], ",", "input", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"HeldExpressionQ", "[", "input", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"UnevaluatedHead", "[", "input", "]"}], "===", "Symbol"}], "&&", 
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"Head", "[", "input", "]"}], ",", 
          RowBox[{"Hold", "|", "HoldForm"}]}], "]"}]}], ",", "input", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"HeldExpressionQ", "[", "input", "]"}]}], "&&", 
        RowBox[{
         RowBox[{"UnevaluatedHead", "[", "input", "]"}], "===", "Symbol"}], "&&", 
        RowBox[{"!", 
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"Head", "[", "input", "]"}], ",", 
           RowBox[{"Hold", "|", "HoldForm"}]}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"unique", "[", 
         RowBox[{"Evaluate", "[", "input", "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"unique", "->", "Hold"}], "}"}]}], ",", "True", ",", 
       RowBox[{"Hold", "[", "input", "]"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8963602691403503`*^9, 3.8963603439973283`*^9}, {
  3.8963604787484274`*^9, 3.8963605046691513`*^9}, {3.896360537759056*^9, 
  3.8963606275818405`*^9}, {3.8963606754583178`*^9, 3.8963607280861483`*^9}, {
  3.896360767009243*^9, 3.8963608532337418`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"8ffb65a5-15ea-42e9-a5e9-03b4ffc62b38"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionThatHoldsUnheldExpressions", "[", 
  RowBox[{
   RowBox[{"W65", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], "==", 
   RowBox[{
    RowBox[{
     RowBox[{"QPhI", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", 
         RowBox[{"q", " ", "a"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"q", " ", "a"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q"}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", ",", 
           RowBox[{"q", "/", "f"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"f", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{"f", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"b", "^", "2"}], " ", 
              RowBox[{"c", "^", "2"}], " ", 
              RowBox[{"d", "^", "2"}], " ", 
              RowBox[{"z", "^", "2"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"q", " ", 
              RowBox[{"a", "^", "2"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], "/", "d"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q"}], "]"}]}], 
      ")"}]}], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "^", 
        RowBox[{"Binomial", "[", 
         RowBox[{"j", ",", "2"}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", "q", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], ",", "d"}], "}"}], ",", "q", 
          ",", "j"}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "b"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "c"}], ",", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"q", " ", "a"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q", 
          ",", "j"}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "j"}]}], "]"}], "/", 
        RowBox[{"QPh", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}]}], " ", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
          RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "q"}], " ", "a", " ", "f"}], ")"}], "/", "d"}], 
         ")"}], "^", "j"}], " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "-", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   RowBox[{"j", "/", "2"}]}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"d", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
          "/", 
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Zeta]", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896360286184594*^9, 3.896360301089181*^9}, 
   3.8963606322071033`*^9},
 CellLabel->
  "In[192]:=",ExpressionUUID->"7531225d-c362-4e21-9f5f-3a4b0f2cd2d3"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"W65", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], 
   "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
             RowBox[{"q", " ", "a"}]], ")"}], "2"], ",", 
          RowBox[{"q", " ", "a"}], ",", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], 
            RowBox[{"3", "/", "2"}]], 
           RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q"}], "]"}], 
      " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "0"}], "\[Infinity]"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", 
           RowBox[{"Binomial", "[", 
            RowBox[{"j", ",", "2"}], "]"}]], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                SqrtBox["q"], " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "b"], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "c"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], 
               RowBox[{"b", " ", "c"}]], ",", "d"}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{"3", "/", "2"}]], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"q", " ", "a", " ", "f"}], "d"]}], ")"}], "j"], " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
                  RowBox[{"f", " ", "g"}]], ",", 
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}],
                   "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
                  RowBox[{"f", " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "z", " ", 
                    SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "j"}], "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"d", " ", "z", " ", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}],
                ",", "q"}], "]"}], 
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                    RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], 
                  "\[Rho]"]}], "}"}], ",", "q"}], "]"}]], ",", 
            RowBox[{"{", 
             RowBox[{"\[Zeta]", ",", 
              RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q", ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "b"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "c"], ",", 
              SqrtBox[
               RowBox[{"q", " ", "a"}]], ",", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SqrtBox["q"], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}]}], ")"}]}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"f", ",", 
          FractionBox["q", "f"], ",", 
          FractionBox[
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c", " ", "d", " ", "z"}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], 
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}]], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["z", "2"]}], 
           RowBox[{"q", " ", 
            SuperscriptBox["a", "2"]}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "a"}], "d"], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{"3", "/", "2"}]], " ", 
            SuperscriptBox["a", 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c"}]]}], "}"}], ",", "q"}], "]"}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8963605962983847`*^9, 3.8963606329774103`*^9, 
  3.8963607024912524`*^9, 3.896360855677784*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"163fa509-1af2-484c-915f-a4d6ca22ffb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionThatHoldsUnheldExpressions", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"W65", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", 
          RowBox[{"q", " ", "a"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], "/", 
           RowBox[{"(", 
            RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q"}], 
       "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        RowBox[{"QPhI", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"f", ",", 
            RowBox[{"q", "/", "f"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"f", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], ")"}], 
             "/", 
             RowBox[{"(", 
              RowBox[{"f", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"b", "^", "2"}], " ", 
               RowBox[{"c", "^", "2"}], " ", 
               RowBox[{"d", "^", "2"}], " ", 
               RowBox[{"z", "^", "2"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"q", " ", 
               RowBox[{"a", "^", "2"}]}], ")"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "/", "d"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q"}], "]"}]}], 
       ")"}]}], " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "^", 
         RowBox[{"Binomial", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sqrt", "[", "q", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], ",", "d"}], "}"}], ",", "q", 
           ",", "j"}], "]"}], "/", 
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"q", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", "b"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", "c"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"q", " ", "a"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q", 
           ",", "j"}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
           RowBox[{"2", " ", "j"}]}], "]"}], "/", 
         RowBox[{"QPh", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "2"}], ")"}]}], " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
           RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "q"}], " ", "a", " ", "f"}], ")"}], "/", "d"}], 
          ")"}], "^", "j"}], " ", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"QPhI", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"f", " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{"q", "/", "f"}], " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{"f", " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "/", "f"}], " ", 
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                 "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "-", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"3", " ", 
                    RowBox[{"j", "/", "2"}]}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"d", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
           "/", 
           RowBox[{"QPhI", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                 "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                RowBox[{"\[Rho]", "/", "g"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}], ",", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
                RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Zeta]", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896360286184594*^9, 3.896360301089181*^9}, {
   3.896360349478754*^9, 3.896360355325989*^9}, 3.8963606361417274`*^9},
 CellLabel->
  "In[193]:=",ExpressionUUID->"992364e1-c98b-499f-ad3d-32194b415ad2"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"W65", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], 
   "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"q", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
             RowBox[{"q", " ", "a"}]], ")"}], "2"], ",", 
          RowBox[{"q", " ", "a"}], ",", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"q", " ", "a"}], ")"}], 
            RowBox[{"3", "/", "2"}]], 
           RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q"}], "]"}], 
      " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "0"}], "\[Infinity]"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", 
           RowBox[{"Binomial", "[", 
            RowBox[{"j", ",", "2"}], "]"}]], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                SqrtBox["q"], " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "b"], ",", 
              FractionBox[
               SqrtBox[
                RowBox[{"q", " ", "a"}]], "c"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], 
               RowBox[{"b", " ", "c"}]], ",", "d"}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{"3", "/", "2"}]], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"q", " ", "a", " ", "f"}], "d"]}], ")"}], "j"], " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
                  RowBox[{"f", " ", "g"}]], ",", 
                 FractionBox[
                  RowBox[{"f", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}],
                   "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{"q", " ", 
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
                  RowBox[{"f", " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "z", " ", 
                    SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "j"}], "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"d", " ", "z", " ", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}],
                ",", "q"}], "]"}], 
             RowBox[{"QPhI", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                   "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                  RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                    " ", "g"}], 
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                    RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], 
                  "\[Rho]"]}], "}"}], ",", "q"}], "]"}]], ",", 
            RowBox[{"{", 
             RowBox[{"\[Zeta]", ",", 
              RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], ")"}], 
        "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q", ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "b"], ",", 
              FractionBox[
               RowBox[{"q", " ", "a"}], "c"], ",", 
              SqrtBox[
               RowBox[{"q", " ", "a"}]], ",", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q", ",", 
            "j"}], "]"}], " ", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             FractionBox[
              RowBox[{
               SqrtBox["q"], " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}]}], ")"}]}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"f", ",", 
          FractionBox["q", "f"], ",", 
          FractionBox[
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c", " ", "d", " ", "z"}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], 
           RowBox[{"f", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], 
             RowBox[{"3", "/", "2"}]]}]], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["b", "2"], " ", 
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["z", "2"]}], 
           RowBox[{"q", " ", 
            SuperscriptBox["a", "2"]}]], ",", 
          FractionBox[
           RowBox[{"q", " ", "a"}], "d"], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{"3", "/", "2"}]], " ", 
            SuperscriptBox["a", 
             RowBox[{"3", "/", "2"}]]}], 
           RowBox[{"b", " ", "c"}]]}], "}"}], ",", "q"}], "]"}]}], ")"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8963603557545147`*^9, 3.8963605103871975`*^9, 
  3.8963606369321375`*^9, 3.8963607057637987`*^9, 3.896360858954588*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"e44a12e9-640c-4d3a-b322-dd109a35f2b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionThatHoldsUnheldExpressions", "[", "nonHeldVariable", 
  "]"}]], "Input",
 CellChangeTimes->{{3.896360286184594*^9, 3.896360301089181*^9}, {
   3.896360349478754*^9, 3.8963603626426425`*^9}, 3.8963606402466574`*^9},
 CellLabel->
  "In[194]:=",ExpressionUUID->"5b122021-65bf-4f03-9cb7-cf8ca76061fd"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"W1211", "[", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h",
      ",", "i", ",", "j", ",", "q", ",", "z"}], "]"}], "\[Equal]", 
   RowBox[{"QHypergeometricPFQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{
        SqrtBox["a"], " ", "q"}], ",", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox["a"]}], " ", "q"}], ",", "b", ",", "c", ",", "d", ",", "e", 
       ",", "f", ",", "g", ",", "h", ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox["a"], ",", 
       RowBox[{"-", 
        SqrtBox["a"]}], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "b"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "c"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "d"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "e"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "f"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "g"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "h"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "i"], ",", 
       FractionBox[
        RowBox[{"a", " ", "q"}], "j"]}], "}"}], ",", "q", ",", "z"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{
  3.8963606409766273`*^9, {3.8963607092684097`*^9, 3.8963607328488045`*^9}, {
   3.8963607756153083`*^9, 3.896360796959277*^9}, 3.896360863232444*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"2c325012-def6-42cf-b672-92a15ea1bb60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionThatHoldsUnheldExpressions", "[", "HeldVariable", 
  "]"}]], "Input",
 CellChangeTimes->{{3.896360286184594*^9, 3.896360301089181*^9}, {
   3.896360349478754*^9, 3.8963603626426425`*^9}, {3.896360572459781*^9, 
   3.896360574878105*^9}, 3.896360872989947*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"4887916b-4870-4661-aa61-199b4b2fa8b7"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"W1211", "[", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h",
      ",", "i", ",", "j", ",", "q", ",", "z"}], "]"}], "\[Equal]", 
   RowBox[{"QHypergeometricPFQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"q", " ", 
        SqrtBox["a"]}], ",", 
       RowBox[{
        RowBox[{"-", "q"}], " ", 
        SqrtBox["a"]}], ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",",
        "g", ",", "h", ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox["a"], ",", 
       RowBox[{"-", 
        SqrtBox["a"]}], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "b"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "c"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "d"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "e"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "f"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "g"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "h"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "i"], ",", 
       FractionBox[
        RowBox[{"q", " ", "a"}], "j"]}], "}"}], ",", "q", ",", "z"}], "]"}]}],
   "]"}]], "Output",
 CellChangeTimes->{3.8963605755000944`*^9, 3.8963608737711983`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"ad02445d-08dc-4374-976e-522c8bd2d472"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
            BoxBaselineShift->-0.25,
            BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
           FontColor->GrayLevel[0.45]],
          ShowStringCharacters->False,
          FontFamily->"Source Sans Pro Black",
          FontSize->0.65 Inherited,
          FontWeight->"Heavy",
          PrivateFontOptions->{"OperatorSubstitution"->False}], 
         StyleBox[
          RowBox[{
           StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
          ShowAutoStyles->False,
          ShowStringCharacters->False,
          FontSize->0.9 Inherited,
          FontColor->GrayLevel[0.1]]}
       },
       GridBoxSpacings->{"Columns" -> {{0.25}}}],
      Alignment->Left,
      BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
      BaselinePosition->Baseline,
      FrameMargins->{{3, 0}, {0, 0}}],
     Background->RGBColor[0.968627, 0.976471, 0.984314],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 1}},
     FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
     RoundingRadius->4],
    {"FunctionResourceBox", 
     GrayLevel[0.45], "\"EnsureHeld\""},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction[
    ResourceObject[<|
     "Name" -> "EnsureHeld", "UUID" -> "454e9185-e741-4b75-8ded-6c381c3187db",
       "ResourceType" -> "Function", "Description" -> 
      "Checks an expression and holds it if it is not already held", 
      "ResourceLocations" -> {
        CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
      "Keywords" -> {
       "Evaluation Control", "Symbolic Computation", "Hold Expression", 
        "Expression Manipulation"}, 
      "Categories" -> {
       "Core Language & Structure", "Higher Mathematical Computation", 
        "Programming Utilities", "Symbolic & Numeric Computation"}, 
      "Compatibility" -> <|
       "WolframLanguageVersionRequired" -> "13.0+", 
        "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {}, 
        "EvaluationEnvironment" -> {
         "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
          "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
      "ContributorInformation" -> <|
       "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
      "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
             RowBox[{
               StyleBox[
                RowBox[{
                  StyleBox["ResourceFunction", "ResourceFunctionSymbol"], "[", 
                  StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                "ResourceFunctionHandle"], "[", 
               StyleBox["input", "TI"], "]"}]], "Description" -> 
           TextData[{"checks whether the ", 
              Cell[
               BoxData[
                StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
               "Source Sans Pro"], 
              " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
      URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
      Automatic, "FunctionLocation" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-e741-\
4b75-8ded-6c381c3187db/download/DefinitionData"], "PageHeaderClickToCopy" -> 
      "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld\"]]", 
      "RelatedSymbols" -> {
       "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
      "SeeAlso" -> {
       "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
        "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
      "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
      "VerificationTests" -> HoldComplete[
        VerificationTest[
         Information["EnsureHeld", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
           "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
           Information`InformationValueForm[DownValues, 
             ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                Pattern[ResourceObjectTest`input, 
                 Blank[]]] :> 
              Module[{ResourceObjectTest`placeholder}, 
                ResourceObjectTest`placeholder = Unique[]; Which[
                  ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                  ResourceObjectTest`input, 
                  And[
                   Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                   MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                  And[
                   Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                   Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                  ReplaceAll[
                   ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                   ResourceObjectTest`placeholder -> Hold}], True, 
                  Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
        VerificationTest[
         Information["IsHeld", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "IsHeld[input] returns True if the input is a held expression, and \
False otherwise. A held expression is an expression that is held by Hold or \
HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
           "DownValues" -> 
           Information`InformationValueForm[
            DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                Pattern[ResourceObjectTest`input, 
                 Blank[]]] :> MatchQ[
                PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                ResourceObjectTest`input], 
                Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
        VerificationTest[
         Information["UnevaluatedHead", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
           "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
           "DownValues" -> 
           Information`InformationValueForm[
            DownValues, 
             PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
             PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                Pattern[ResourceObjectTest`expr, 
                 Blank[]]] :> Head[
                Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
          False], {}, TestID -> "EnsureHeld-0003"]]|>]],
   Selectable->False], "[", 
  RowBox[{"p", "+", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.8963646519340196`*^9, 3.896364656156728*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"8ed85fb1-400f-4585-938b-c1147fc54f20"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"p", "+", "q"}], "]"}]], "Output",
 CellChangeTimes->{3.8963646570178466`*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"cfd97bb5-3cde-44fd-b5aa-4c40f9584966"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
            BoxBaselineShift->-0.25,
            BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
           FontColor->GrayLevel[0.45]],
          ShowStringCharacters->False,
          FontFamily->"Source Sans Pro Black",
          FontSize->0.65 Inherited,
          FontWeight->"Heavy",
          PrivateFontOptions->{"OperatorSubstitution"->False}], 
         StyleBox[
          RowBox[{
           StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
          ShowAutoStyles->False,
          ShowStringCharacters->False,
          FontSize->0.9 Inherited,
          FontColor->GrayLevel[0.1]]}
       },
       GridBoxSpacings->{"Columns" -> {{0.25}}}],
      Alignment->Left,
      BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
      BaselinePosition->Baseline,
      FrameMargins->{{3, 0}, {0, 0}}],
     Background->RGBColor[0.968627, 0.976471, 0.984314],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 1}},
     FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
     RoundingRadius->4],
    {"FunctionResourceBox", 
     GrayLevel[0.45], "\"EnsureHeld\""},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction[
    ResourceObject[<|
     "Name" -> "EnsureHeld", "UUID" -> "454e9185-e741-4b75-8ded-6c381c3187db",
       "ResourceType" -> "Function", "Description" -> 
      "Checks an expression and holds it if it is not already held", 
      "ResourceLocations" -> {
        CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
      "Keywords" -> {
       "Evaluation Control", "Symbolic Computation", "Hold Expression", 
        "Expression Manipulation"}, 
      "Categories" -> {
       "Core Language & Structure", "Higher Mathematical Computation", 
        "Programming Utilities", "Symbolic & Numeric Computation"}, 
      "Compatibility" -> <|
       "WolframLanguageVersionRequired" -> "13.0+", 
        "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {}, 
        "EvaluationEnvironment" -> {
         "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
          "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
      "ContributorInformation" -> <|
       "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
      "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
             RowBox[{
               StyleBox[
                RowBox[{
                  StyleBox["ResourceFunction", "ResourceFunctionSymbol"], "[", 
                  StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                "ResourceFunctionHandle"], "[", 
               StyleBox["input", "TI"], "]"}]], "Description" -> 
           TextData[{"checks whether the ", 
              Cell[
               BoxData[
                StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
               "Source Sans Pro"], 
              " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
      URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
      Automatic, "FunctionLocation" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-e741-\
4b75-8ded-6c381c3187db/download/DefinitionData"], "PageHeaderClickToCopy" -> 
      "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld\"]]", 
      "RelatedSymbols" -> {
       "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
      "SeeAlso" -> {
       "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
        "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
      "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
      "VerificationTests" -> HoldComplete[
        VerificationTest[
         Information["EnsureHeld", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
           "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
           Information`InformationValueForm[DownValues, 
             ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                Pattern[ResourceObjectTest`input, 
                 Blank[]]] :> 
              Module[{ResourceObjectTest`placeholder}, 
                ResourceObjectTest`placeholder = Unique[]; Which[
                  ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                  ResourceObjectTest`input, 
                  And[
                   Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                   MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                  And[
                   Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                   Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                  ReplaceAll[
                   ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                   ResourceObjectTest`placeholder -> Hold}], True, 
                  Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
        VerificationTest[
         Information["IsHeld", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "IsHeld[input] returns True if the input is a held expression, and \
False otherwise. A held expression is an expression that is held by Hold or \
HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
           "DownValues" -> 
           Information`InformationValueForm[
            DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                Pattern[ResourceObjectTest`input, 
                 Blank[]]] :> MatchQ[
                PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                ResourceObjectTest`input], 
                Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
        VerificationTest[
         Information["UnevaluatedHead", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
           "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
           "DownValues" -> 
           Information`InformationValueForm[
            DownValues, 
             PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
             PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                Pattern[ResourceObjectTest`expr, 
                 Blank[]]] :> Head[
                Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
          False], {}, TestID -> "EnsureHeld-0003"]]|>]],
   Selectable->False], "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896364678037712*^9, 3.896364681430402*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"888463d5-a3be-493b-ab68-76c8599a614b"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{"x", 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.896364681886403*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"af87d920-c5cc-4090-aae1-bc6c1b684a92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
            BoxBaselineShift->-0.25,
            BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
           FontColor->GrayLevel[0.45]],
          ShowStringCharacters->False,
          FontFamily->"Source Sans Pro Black",
          FontSize->0.65 Inherited,
          FontWeight->"Heavy",
          PrivateFontOptions->{"OperatorSubstitution"->False}], 
         StyleBox[
          RowBox[{
           StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
          ShowAutoStyles->False,
          ShowStringCharacters->False,
          FontSize->0.9 Inherited,
          FontColor->GrayLevel[0.1]]}
       },
       GridBoxSpacings->{"Columns" -> {{0.25}}}],
      Alignment->Left,
      BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
      BaselinePosition->Baseline,
      FrameMargins->{{3, 0}, {0, 0}}],
     Background->RGBColor[0.968627, 0.976471, 0.984314],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 1}},
     FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
     RoundingRadius->4],
    {"FunctionResourceBox", 
     GrayLevel[0.45], "\"EnsureHeld\""},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction[
    ResourceObject[<|
     "Name" -> "EnsureHeld", "UUID" -> "454e9185-e741-4b75-8ded-6c381c3187db",
       "ResourceType" -> "Function", "Description" -> 
      "Checks an expression and holds it if it is not already held", 
      "ResourceLocations" -> {
        CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
      "Keywords" -> {
       "Evaluation Control", "Symbolic Computation", "Hold Expression", 
        "Expression Manipulation"}, 
      "Categories" -> {
       "Core Language & Structure", "Higher Mathematical Computation", 
        "Programming Utilities", "Symbolic & Numeric Computation"}, 
      "Compatibility" -> <|
       "WolframLanguageVersionRequired" -> "13.0+", 
        "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {}, 
        "EvaluationEnvironment" -> {
         "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
          "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
      "ContributorInformation" -> <|
       "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
      "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
             RowBox[{
               StyleBox[
                RowBox[{
                  StyleBox["ResourceFunction", "ResourceFunctionSymbol"], "[", 
                  StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                "ResourceFunctionHandle"], "[", 
               StyleBox["input", "TI"], "]"}]], "Description" -> 
           TextData[{"checks whether the ", 
              Cell[
               BoxData[
                StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
               "Source Sans Pro"], 
              " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
      URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
      Automatic, "FunctionLocation" -> 
      CloudObject[
       "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-e741-\
4b75-8ded-6c381c3187db/download/DefinitionData"], "PageHeaderClickToCopy" -> 
      "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld\"]]", 
      "RelatedSymbols" -> {
       "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
      "SeeAlso" -> {
       "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
        "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
      "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
      "VerificationTests" -> HoldComplete[
        VerificationTest[
         Information["EnsureHeld", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
           "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
           Information`InformationValueForm[DownValues, 
             ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                Pattern[ResourceObjectTest`input, 
                 Blank[]]] :> 
              Module[{ResourceObjectTest`placeholder}, 
                ResourceObjectTest`placeholder = Unique[]; Which[
                  ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                  ResourceObjectTest`input, 
                  And[
                   Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                   MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                  And[
                   Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                   Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                  ReplaceAll[
                   ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                   ResourceObjectTest`placeholder -> Hold}], True, 
                  Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
        VerificationTest[
         Information["IsHeld", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "IsHeld[input] returns True if the input is a held expression, and \
False otherwise. A held expression is an expression that is held by Hold or \
HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
           "DownValues" -> 
           Information`InformationValueForm[
            DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                Pattern[ResourceObjectTest`input, 
                 Blank[]]] :> MatchQ[
                PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                ResourceObjectTest`input], 
                Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
        VerificationTest[
         Information["UnevaluatedHead", LongForm -> False], 
         InformationData[<|
          "ObjectType" -> "Symbol", "Usage" -> 
           "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
           "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
           "DownValues" -> 
           Information`InformationValueForm[
            DownValues, 
             PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
             PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                Pattern[ResourceObjectTest`expr, 
                 Blank[]]] :> Head[
                Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None, 
           "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None,
            "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
           "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
          False], {}, TestID -> "EnsureHeld-0003"]]|>]],
   Selectable->False], "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8963649126959953`*^9, 3.8963649530739117`*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"4b93d8fa-03e3-42b7-8d20-e9347a8572b0"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{"x", 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8963649157424307`*^9, 3.896364954460823*^9}},
 CellLabel->
  "Out[272]=",ExpressionUUID->"0c7e1e35-4056-479c-a092-3c41b8e44bd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inactivate", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], ",", 
   "Integrate"}], "]"}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896364987533766*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"f348debd-bfec-4b7a-acb5-1d649b0a49ce"],

Cell[BoxData[
 TemplateBox[{"x", "x", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.896364960193712*^9, 3.8963649877817364`*^9}},
 CellLabel->
  "Out[275]=",ExpressionUUID->"b9ebab5e-bd4d-4085-b1b7-f350ea354a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"Inactivate", "[", 
     RowBox[{"x", ",", "Integrate"}], "]"}], ",", 
    RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneBox[GridBox[{
         {
          StyleBox[
           StyleBox[
            AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
             BoxBaselineShift->-0.25,
             BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
            FontColor->GrayLevel[0.45]],
           ShowStringCharacters->False,
           FontFamily->"Source Sans Pro Black",
           FontSize->0.65 Inherited,
           FontWeight->"Heavy",
           PrivateFontOptions->{"OperatorSubstitution"->False}], 
          StyleBox[
           RowBox[{
            StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->Left,
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      Background->RGBColor[0.968627, 0.976471, 0.984314],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
      RoundingRadius->4],
     {"FunctionResourceBox", 
      GrayLevel[0.45], "\"EnsureHeld\""},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction[
     ResourceObject[<|
      "Name" -> "EnsureHeld", "UUID" -> 
       "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
       "Description" -> 
       "Checks an expression and holds it if it is not already held", 
       "ResourceLocations" -> {
         CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
       "Keywords" -> {
        "Evaluation Control", "Symbolic Computation", "Hold Expression", 
         "Expression Manipulation"}, 
       "Categories" -> {
        "Core Language & Structure", "Higher Mathematical Computation", 
         "Programming Utilities", "Symbolic & Numeric Computation"}, 
       "Compatibility" -> <|
        "WolframLanguageVersionRequired" -> "13.0+", 
         "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {},
          "EvaluationEnvironment" -> {
          "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
           "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
       "ContributorInformation" -> <|
        "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
       "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
              RowBox[{
                StyleBox[
                 RowBox[{
                   StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                   "[", 
                   StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                 "ResourceFunctionHandle"], "[", 
                StyleBox["input", "TI"], "]"}]], "Description" -> 
            TextData[{"checks whether the ", 
               Cell[
                BoxData[
                 StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                "Source Sans Pro"], 
               " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
       URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
       Automatic, "FunctionLocation" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
       "PageHeaderClickToCopy" -> 
       "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
       "RelatedSymbols" -> {
        "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
       "SeeAlso" -> {
        "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
         "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
       "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
       "VerificationTests" -> HoldComplete[
         VerificationTest[
          Information["EnsureHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
            "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
            Information`InformationValueForm[DownValues, 
              ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> 
               Module[{ResourceObjectTest`placeholder}, 
                 ResourceObjectTest`placeholder = Unique[]; Which[
                   ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                   ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                   ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                   Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
         VerificationTest[
          Information["IsHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
            None, "DownValues" -> 
            Information`InformationValueForm[
             DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> MatchQ[
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 ResourceObjectTest`input], 
                 Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
         VerificationTest[
          Information["UnevaluatedHead", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
            "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
            "DownValues" -> 
            Information`InformationValueForm[
             DownValues, 
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 Pattern[ResourceObjectTest`expr, 
                  Blank[]]] :> Head[
                 Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None,
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
           False], {}, TestID -> "EnsureHeld-0003"]]|>]],
    Selectable->False], "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896365017755808*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"e43e0fd3-e6c4-4c55-a7e0-bc6732ebcf57"],

Cell[BoxData[
 TemplateBox[{"x", "x", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.896365018042821*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"cf1f57d0-c146-48dd-a1b2-b8674ca2c6da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"Inactivate", "[", 
     RowBox[{"x", ",", "Integrate"}], "]"}], ",", 
    RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneBox[GridBox[{
         {
          StyleBox[
           StyleBox[
            AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
             BoxBaselineShift->-0.25,
             BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
            FontColor->GrayLevel[0.45]],
           ShowStringCharacters->False,
           FontFamily->"Source Sans Pro Black",
           FontSize->0.65 Inherited,
           FontWeight->"Heavy",
           PrivateFontOptions->{"OperatorSubstitution"->False}], 
          StyleBox[
           RowBox[{
            StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->Left,
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      Background->RGBColor[0.968627, 0.976471, 0.984314],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
      RoundingRadius->4],
     {"FunctionResourceBox", 
      GrayLevel[0.45], "\"EnsureHeld\""},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction[
     ResourceObject[<|
      "Name" -> "EnsureHeld", "UUID" -> 
       "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
       "Description" -> 
       "Checks an expression and holds it if it is not already held", 
       "ResourceLocations" -> {
         CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
       "Keywords" -> {
        "Evaluation Control", "Symbolic Computation", "Hold Expression", 
         "Expression Manipulation"}, 
       "Categories" -> {
        "Core Language & Structure", "Higher Mathematical Computation", 
         "Programming Utilities", "Symbolic & Numeric Computation"}, 
       "Compatibility" -> <|
        "WolframLanguageVersionRequired" -> "13.0+", 
         "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {},
          "EvaluationEnvironment" -> {
          "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
           "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
       "ContributorInformation" -> <|
        "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
       "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
              RowBox[{
                StyleBox[
                 RowBox[{
                   StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                   "[", 
                   StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                 "ResourceFunctionHandle"], "[", 
                StyleBox["input", "TI"], "]"}]], "Description" -> 
            TextData[{"checks whether the ", 
               Cell[
                BoxData[
                 StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                "Source Sans Pro"], 
               " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
       URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
       Automatic, "FunctionLocation" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
       "PageHeaderClickToCopy" -> 
       "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
       "RelatedSymbols" -> {
        "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
       "SeeAlso" -> {
        "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
         "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
       "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
       "VerificationTests" -> HoldComplete[
         VerificationTest[
          Information["EnsureHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
            "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
            Information`InformationValueForm[DownValues, 
              ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> 
               Module[{ResourceObjectTest`placeholder}, 
                 ResourceObjectTest`placeholder = Unique[]; Which[
                   ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                   ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                   ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                   Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
         VerificationTest[
          Information["IsHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
            None, "DownValues" -> 
            Information`InformationValueForm[
             DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> MatchQ[
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 ResourceObjectTest`input], 
                 Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
         VerificationTest[
          Information["UnevaluatedHead", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
            "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
            "DownValues" -> 
            Information`InformationValueForm[
             DownValues, 
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 Pattern[ResourceObjectTest`expr, 
                  Blank[]]] :> Head[
                 Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None,
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
           False], {}, TestID -> "EnsureHeld-0003"]]|>]],
    Selectable->False], "[", 
   RowBox[{"Hold", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896365017755808*^9}, {
  3.896365066153455*^9, 3.8963650705461097`*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"82df28e3-f7a4-48c5-95b0-fa712f1c81af"],

Cell[BoxData[
 TemplateBox[{"x", "x", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8963650708561373`*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"0650250c-8b34-47e4-a306-a6f214efc8d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HeldExpression", "=", 
  RowBox[{"Hold", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8963650743428907`*^9, 3.896365080442067*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"204a901c-e89c-421c-9561-937378d94de1"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{"x", 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.8963650812814693`*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"e565d432-6d32-4730-a529-0733e0ea7c59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotHeldExpression", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8963650743428907`*^9, 3.8963650897138405`*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"636c505c-1ab2-492c-83c3-597d97513a64"],

Cell[BoxData[
 TemplateBox[{
  "Integrate", "idiv", 
   "\"Integral of \\!\\(\\*RowBox[{\\\"x\\\"}]\\) does not converge on \\!\\(\
\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\
\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}]\\).\"", 2, 280, 58, 
   34144886615794510809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89636509030884*^9},
 CellLabel->
  "During evaluation of \
In[280]:=",ExpressionUUID->"2b2ed890-0a2b-409c-ac01-1e52e2d4211a"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{"x", 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.896365090685839*^9},
 CellLabel->
  "Out[280]=",ExpressionUUID->"474e0130-b4fb-4869-8b04-5c160dbf6c18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"Inactivate", "[", 
     RowBox[{"x", ",", "Integrate"}], "]"}], ",", 
    RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneBox[GridBox[{
         {
          StyleBox[
           StyleBox[
            AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
             BoxBaselineShift->-0.25,
             BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
            FontColor->GrayLevel[0.45]],
           ShowStringCharacters->False,
           FontFamily->"Source Sans Pro Black",
           FontSize->0.65 Inherited,
           FontWeight->"Heavy",
           PrivateFontOptions->{"OperatorSubstitution"->False}], 
          StyleBox[
           RowBox[{
            StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->Left,
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      Background->RGBColor[0.968627, 0.976471, 0.984314],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
      RoundingRadius->4],
     {"FunctionResourceBox", 
      GrayLevel[0.45], "\"EnsureHeld\""},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction[
     ResourceObject[<|
      "Name" -> "EnsureHeld", "UUID" -> 
       "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
       "Description" -> 
       "Checks an expression and holds it if it is not already held", 
       "ResourceLocations" -> {
         CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
       "Keywords" -> {
        "Evaluation Control", "Symbolic Computation", "Hold Expression", 
         "Expression Manipulation"}, 
       "Categories" -> {
        "Core Language & Structure", "Higher Mathematical Computation", 
         "Programming Utilities", "Symbolic & Numeric Computation"}, 
       "Compatibility" -> <|
        "WolframLanguageVersionRequired" -> "13.0+", 
         "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {},
          "EvaluationEnvironment" -> {
          "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
           "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
       "ContributorInformation" -> <|
        "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
       "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
              RowBox[{
                StyleBox[
                 RowBox[{
                   StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                   "[", 
                   StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                 "ResourceFunctionHandle"], "[", 
                StyleBox["input", "TI"], "]"}]], "Description" -> 
            TextData[{"checks whether the ", 
               Cell[
                BoxData[
                 StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                "Source Sans Pro"], 
               " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
       URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
       Automatic, "FunctionLocation" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
       "PageHeaderClickToCopy" -> 
       "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
       "RelatedSymbols" -> {
        "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
       "SeeAlso" -> {
        "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
         "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
       "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
       "VerificationTests" -> HoldComplete[
         VerificationTest[
          Information["EnsureHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
            "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
            Information`InformationValueForm[DownValues, 
              ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> 
               Module[{ResourceObjectTest`placeholder}, 
                 ResourceObjectTest`placeholder = Unique[]; Which[
                   ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                   ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                   ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                   Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
         VerificationTest[
          Information["IsHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
            None, "DownValues" -> 
            Information`InformationValueForm[
             DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> MatchQ[
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 ResourceObjectTest`input], 
                 Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
         VerificationTest[
          Information["UnevaluatedHead", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
            "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
            "DownValues" -> 
            Information`InformationValueForm[
             DownValues, 
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 Pattern[ResourceObjectTest`expr, 
                  Blank[]]] :> Head[
                 Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None,
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
           False], {}, TestID -> "EnsureHeld-0003"]]|>]],
    Selectable->False], "[", "HeldExpression", "]"}]}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896365017755808*^9}, {
  3.896365066153455*^9, 3.896365097434759*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"a041aaa0-22aa-4d3c-ad7f-349e489f501e"],

Cell[BoxData[
 TemplateBox[{"x", "x", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8963650989490356`*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"2e42fa79-a01d-4f14-a6f2-0f7cd21d8483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"Inactivate", "[", 
     RowBox[{"x", ",", "Integrate"}], "]"}], ",", 
    RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneBox[GridBox[{
         {
          StyleBox[
           StyleBox[
            AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
             BoxBaselineShift->-0.25,
             BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
            FontColor->GrayLevel[0.45]],
           ShowStringCharacters->False,
           FontFamily->"Source Sans Pro Black",
           FontSize->0.65 Inherited,
           FontWeight->"Heavy",
           PrivateFontOptions->{"OperatorSubstitution"->False}], 
          StyleBox[
           RowBox[{
            StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->Left,
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      Background->RGBColor[0.968627, 0.976471, 0.984314],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
      RoundingRadius->4],
     {"FunctionResourceBox", 
      GrayLevel[0.45], "\"EnsureHeld\""},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction[
     ResourceObject[<|
      "Name" -> "EnsureHeld", "UUID" -> 
       "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
       "Description" -> 
       "Checks an expression and holds it if it is not already held", 
       "ResourceLocations" -> {
         CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
       "Keywords" -> {
        "Evaluation Control", "Symbolic Computation", "Hold Expression", 
         "Expression Manipulation"}, 
       "Categories" -> {
        "Core Language & Structure", "Higher Mathematical Computation", 
         "Programming Utilities", "Symbolic & Numeric Computation"}, 
       "Compatibility" -> <|
        "WolframLanguageVersionRequired" -> "13.0+", 
         "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {},
          "EvaluationEnvironment" -> {
          "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
           "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
       "ContributorInformation" -> <|
        "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
       "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
              RowBox[{
                StyleBox[
                 RowBox[{
                   StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                   "[", 
                   StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                 "ResourceFunctionHandle"], "[", 
                StyleBox["input", "TI"], "]"}]], "Description" -> 
            TextData[{"checks whether the ", 
               Cell[
                BoxData[
                 StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                "Source Sans Pro"], 
               " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
       URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
       Automatic, "FunctionLocation" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
       "PageHeaderClickToCopy" -> 
       "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
       "RelatedSymbols" -> {
        "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
       "SeeAlso" -> {
        "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
         "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
       "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
       "VerificationTests" -> HoldComplete[
         VerificationTest[
          Information["EnsureHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
            "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
            Information`InformationValueForm[DownValues, 
              ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> 
               Module[{ResourceObjectTest`placeholder}, 
                 ResourceObjectTest`placeholder = Unique[]; Which[
                   ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                   ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                   ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                   Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
         VerificationTest[
          Information["IsHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
            None, "DownValues" -> 
            Information`InformationValueForm[
             DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> MatchQ[
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 ResourceObjectTest`input], 
                 Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
         VerificationTest[
          Information["UnevaluatedHead", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
            "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
            "DownValues" -> 
            Information`InformationValueForm[
             DownValues, 
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 Pattern[ResourceObjectTest`expr, 
                  Blank[]]] :> Head[
                 Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None,
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
           False], {}, TestID -> "EnsureHeld-0003"]]|>]],
    Selectable->False], "[", "NotHeldExpression", "]"}]}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896365017755808*^9}, {
  3.896365066153455*^9, 3.896365105223328*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"f50b6d62-2fa4-428b-ba1d-f47590c16987"],

Cell[BoxData[
 TemplateBox[{"x", "x", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8963651055323253`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"718c5fac-a261-40bf-8a5d-7a86d0fd0774"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"Inactivate", "[", 
     RowBox[{"x", ",", "Integrate"}], "]"}], ",", 
    RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneBox[GridBox[{
         {
          StyleBox[
           StyleBox[
            AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
             BoxBaselineShift->-0.25,
             BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
            FontColor->GrayLevel[0.45]],
           ShowStringCharacters->False,
           FontFamily->"Source Sans Pro Black",
           FontSize->0.65 Inherited,
           FontWeight->"Heavy",
           PrivateFontOptions->{"OperatorSubstitution"->False}], 
          StyleBox[
           RowBox[{
            StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->Left,
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      Background->RGBColor[0.968627, 0.976471, 0.984314],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
      RoundingRadius->4],
     {"FunctionResourceBox", 
      GrayLevel[0.45], "\"EnsureHeld\""},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction[
     ResourceObject[<|
      "Name" -> "EnsureHeld", "UUID" -> 
       "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
       "Description" -> 
       "Checks an expression and holds it if it is not already held", 
       "ResourceLocations" -> {
         CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
       "Keywords" -> {
        "Evaluation Control", "Symbolic Computation", "Hold Expression", 
         "Expression Manipulation"}, 
       "Categories" -> {
        "Core Language & Structure", "Higher Mathematical Computation", 
         "Programming Utilities", "Symbolic & Numeric Computation"}, 
       "Compatibility" -> <|
        "WolframLanguageVersionRequired" -> "13.0+", 
         "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {},
          "EvaluationEnvironment" -> {
          "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
           "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
       "ContributorInformation" -> <|
        "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
       "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
              RowBox[{
                StyleBox[
                 RowBox[{
                   StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                   "[", 
                   StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                 "ResourceFunctionHandle"], "[", 
                StyleBox["input", "TI"], "]"}]], "Description" -> 
            TextData[{"checks whether the ", 
               Cell[
                BoxData[
                 StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                "Source Sans Pro"], 
               " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
       URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
       Automatic, "FunctionLocation" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
       "PageHeaderClickToCopy" -> 
       "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
       "RelatedSymbols" -> {
        "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
       "SeeAlso" -> {
        "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
         "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
       "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
       "VerificationTests" -> HoldComplete[
         VerificationTest[
          Information["EnsureHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
            "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
            Information`InformationValueForm[DownValues, 
              ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> 
               Module[{ResourceObjectTest`placeholder}, 
                 ResourceObjectTest`placeholder = Unique[]; Which[
                   ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                   ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                   ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                   Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
         VerificationTest[
          Information["IsHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
            None, "DownValues" -> 
            Information`InformationValueForm[
             DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> MatchQ[
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 ResourceObjectTest`input], 
                 Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
         VerificationTest[
          Information["UnevaluatedHead", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
            "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
            "DownValues" -> 
            Information`InformationValueForm[
             DownValues, 
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 Pattern[ResourceObjectTest`expr, 
                  Blank[]]] :> Head[
                 Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None,
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
           False], {}, TestID -> "EnsureHeld-0003"]]|>]],
    Selectable->False], "[", 
   StyleBox[
    RowBox[{"Integrate", "[", 
     RowBox[{"x", ",", 
      RowBox[{"List", "[", 
       RowBox[{"x", ",", 
        RowBox[{"DirectedInfinity", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"DirectedInfinity", "[", "1", "]"}]}], "]"}]}], "]"}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True], "]"}]}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896365017755808*^9}, {
  3.896365066153455*^9, 3.896365105223328*^9}, {3.896365487054347*^9, 
  3.8963654949987183`*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"af50709a-0258-413b-936c-795e8f73393e"],

Cell[BoxData[
 TemplateBox[{"x", "x", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8963654956587768`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"445dafc1-dab5-4e3c-9576-c36fcdbd130a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", 
    RowBox[{"Inactivate", "[", 
     RowBox[{"x", ",", 
      RowBox[{
      "Sum", "|", "NSum", "|", "Integrate", "|", "NIntegrate", "|", "Product",
        "|", "NProduct"}]}], "]"}], ",", 
    RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneBox[GridBox[{
         {
          StyleBox[
           StyleBox[
            AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
             BoxBaselineShift->-0.25,
             BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
            FontColor->GrayLevel[0.45]],
           ShowStringCharacters->False,
           FontFamily->"Source Sans Pro Black",
           FontSize->0.65 Inherited,
           FontWeight->"Heavy",
           PrivateFontOptions->{"OperatorSubstitution"->False}], 
          StyleBox[
           RowBox[{
            StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->Left,
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      Background->RGBColor[0.968627, 0.976471, 0.984314],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
      RoundingRadius->4],
     {"FunctionResourceBox", 
      GrayLevel[0.45], "\"EnsureHeld\""},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction[
     ResourceObject[<|
      "Name" -> "EnsureHeld", "UUID" -> 
       "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
       "Description" -> 
       "Checks an expression and holds it if it is not already held", 
       "ResourceLocations" -> {
         CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
       "Keywords" -> {
        "Evaluation Control", "Symbolic Computation", "Hold Expression", 
         "Expression Manipulation"}, 
       "Categories" -> {
        "Core Language & Structure", "Higher Mathematical Computation", 
         "Programming Utilities", "Symbolic & Numeric Computation"}, 
       "Compatibility" -> <|
        "WolframLanguageVersionRequired" -> "13.0+", 
         "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {},
          "EvaluationEnvironment" -> {
          "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
           "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
       "ContributorInformation" -> <|
        "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
       "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
              RowBox[{
                StyleBox[
                 RowBox[{
                   StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                   "[", 
                   StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                 "ResourceFunctionHandle"], "[", 
                StyleBox["input", "TI"], "]"}]], "Description" -> 
            TextData[{"checks whether the ", 
               Cell[
                BoxData[
                 StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                "Source Sans Pro"], 
               " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
       URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
       Automatic, "FunctionLocation" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
       "PageHeaderClickToCopy" -> 
       "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
       "RelatedSymbols" -> {
        "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
       "SeeAlso" -> {
        "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
         "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
       "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
       "VerificationTests" -> HoldComplete[
         VerificationTest[
          Information["EnsureHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
            "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
            Information`InformationValueForm[DownValues, 
              ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> 
               Module[{ResourceObjectTest`placeholder}, 
                 ResourceObjectTest`placeholder = Unique[]; Which[
                   ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                   ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                   ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                   Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
         VerificationTest[
          Information["IsHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
            None, "DownValues" -> 
            Information`InformationValueForm[
             DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> MatchQ[
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 ResourceObjectTest`input], 
                 Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
         VerificationTest[
          Information["UnevaluatedHead", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            
            "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
            "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
            "DownValues" -> 
            Information`InformationValueForm[
             DownValues, 
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 Pattern[ResourceObjectTest`expr, 
                  Blank[]]] :> Head[
                 Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None,
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
           False], {}, TestID -> "EnsureHeld-0003"]]|>]],
    Selectable->False], "[", 
   StyleBox[
    RowBox[{
     RowBox[{"W65", "[", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], 
     "==", 
     RowBox[{
      RowBox[{
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}]}], ")"}], "^", "2"}], ",", 
           RowBox[{"q", " ", "a"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q", " ", "a"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], "/", 
            RowBox[{"(", 
             RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q"}], 
        "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "\\[Pi]", " ", 
         RowBox[{"QPhI", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"f", ",", 
             RowBox[{"q", "/", "f"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"f", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"q", " ", "a"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "b", " ", "c", " ", "d", " ", "z"}], ")"}], 
              "/", 
              RowBox[{"(", 
               RowBox[{"f", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"q", " ", "a"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"b", "^", "2"}], " ", 
                RowBox[{"c", "^", "2"}], " ", 
                RowBox[{"d", "^", "2"}], " ", 
                RowBox[{"z", "^", "2"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"q", " ", 
                RowBox[{"a", "^", "2"}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"q", " ", "a"}], ")"}], "/", "d"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], " ", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}]}], "}"}], ",", "q"}], "]"}]}],
         ")"}]}], " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "^", 
          RowBox[{"Binomial", "[", 
           RowBox[{"j", ",", "2"}], "]"}]}], " ", 
         RowBox[{
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Sqrt", "[", "q", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"q", " ", "a"}], "]"}], "/", "b"}], ",", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"q", " ", "a"}], "]"}], "/", "c"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c"}], ")"}]}], ",", "d"}], "}"}], ",", "q",
             ",", "j"}], "]"}], "/", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "/", "b"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", "a"}], ")"}], "/", "c"}], ",", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"q", " ", "a"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"q", " ", "a"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d"}], ")"}]}]}], "}"}], ",", "q",
             ",", "j"}], "]"}]}], " ", 
         RowBox[{
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], " ", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}], "/", 
          RowBox[{"QPh", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "2"}], ")"}]}], " ", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], "}"}], ",", "q", ",", 
            RowBox[{"2", " ", "j"}]}], "]"}]}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "q"}], " ", "a", " ", "f"}], ")"}], "/", "d"}], 
           ")"}], "^", "j"}], " ", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"QPhI", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"f", " ", 
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                  "]"}], " ", 
                 RowBox[{"\\[Rho]", "/", "g"}]}], ",", 
                RowBox[{
                 RowBox[{"q", "/", "f"}], " ", 
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                 RowBox[{"\\[Rho]", "/", "g"}]}], ",", 
                RowBox[{"f", " ", 
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                  "]"}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{"q", "/", "f"}], " ", 
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "j"}], "/", "2"}], "-", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                  "]"}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"j", "/", "2"}]}], "+", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"d", " ", "z", " ", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
            "/", 
            RowBox[{"QPhI", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], 
                  "]"}], " ", 
                 RowBox[{"\\[Rho]", "/", "g"}]}], ",", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
                 RowBox[{"\\[Rho]", "/", "g"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                    ")"}], "/", 
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}], ",", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
                 RowBox[{"g", "/", "\\[Rho]"}]}]}], "}"}], ",", "q"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\\[Zeta]", ",", 
             RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
           RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}],
    ShowSpecialCharacters->False,
    ShowStringCharacters->True,
    NumberMarks->True], "]"}]}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896365017755808*^9}, {
  3.896365066153455*^9, 3.896365105223328*^9}, {3.896365487054347*^9, 
  3.8963654949987183`*^9}, {3.896365535014324*^9, 3.896365583969862*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"0d519d51-b04e-46f9-b5b4-27d30ce18488"],

Cell[BoxData[
 RowBox[{
  RowBox[{"W65", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "q", ",", "z"}], "]"}], 
  "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QPhI", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q", ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["z", "2"]}], 
          RowBox[{
           SuperscriptBox["a", "2"], " ", 
           SuperscriptBox["q", "2"]}]], ",", 
         RowBox[{"a", " ", "q"}], ",", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"a", " ", "q"}], ")"}], 
           RowBox[{"3", "/", "2"}]], 
          RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q"}], "]"}], " ", 
     TemplateBox[{
       RowBox[{
         RowBox[{"(", 
           RowBox[{
             SuperscriptBox["q", 
              RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "1"}], "+", "j"}], ")"}], " ", "j"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{"-", 
                  FractionBox[
                   RowBox[{"a", " ", "f", " ", "q"}], "d"]}], ")"}], "j"], 
             " ", 
             RowBox[{"QPh", "[", 
               RowBox[{
                 RowBox[{"{", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", 
                    SuperscriptBox["q", 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
                 RowBox[{"2", " ", "j"}]}], "]"}], " ", 
             RowBox[{"QPh", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", 
                    SqrtBox["q"]}], 
                    RowBox[{"b", " ", "c"}]], ",", 
                    FractionBox[
                    SqrtBox[
                    RowBox[{"a", " ", "q"}]], "b"], ",", 
                    FractionBox[
                    SqrtBox[
                    RowBox[{"a", " ", "q"}]], "c"], ",", 
                    FractionBox[
                    RowBox[{"a", " ", "q"}], 
                    RowBox[{"b", " ", "c"}]], ",", "d"}], "}"}], ",", "q", 
                 ",", "j"}], "]"}], " ", 
             RowBox[{
               
               TemplateBox[{"NIntegrate"}, "InactiveHead", BaseStyle -> 
                "Inactive", SyntaxForm -> "Symbol", Tooltip -> 
                "Inactive[NIntegrate]"], "[", 
               RowBox[{
                 FractionBox[
                  RowBox[{"QPhI", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"f", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                    "\[Rho]"}], "g"], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
                    RowBox[{"f", " ", "g"}]], ",", 
                    FractionBox[
                    RowBox[{"f", " ", "g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]]}], 
                    "\[Rho]"], ",", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "-", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]]}], 
                    RowBox[{"f", " ", "\[Rho]"}]], ",", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SqrtBox["a"], " ", "b", " ", "c", " ", "z"}], "d"]]}], 
                    "\[Rho]"], ",", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "4"], "+", 
                    FractionBox[
                    RowBox[{"3", " ", "j"}], "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "d", " ", "z"}], 
                    RowBox[{"b", " ", "c"}]]]}], "\[Rho]"]}], "}"}], ",", 
                    "q"}], "]"}], 
                  RowBox[{"QPhI", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                    "\[Rho]"}], "g"], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["3", "4"]}], "-", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
                    FractionBox[
                    RowBox[{"g", " ", 
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["3", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                    RowBox[{"b", " ", "c", " ", "d"}]]]}], "\[Rho]"]}], "}"}],
                     ",", "q"}], "]"}]], ",", 
                 RowBox[{"{", 
                   RowBox[{"\[Zeta]", ",", 
                    RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
                 RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]}], 
           ")"}], "/", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"QPh", "[", 
               RowBox[{
                 RowBox[{"{", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", 
                    SqrtBox["q"]}], 
                    RowBox[{"b", " ", "c"}]], "}"}], ",", "q", ",", 
                 RowBox[{"2", " ", "j"}]}], "]"}], " ", 
             RowBox[{"QPh", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"q", ",", 
                    FractionBox[
                    RowBox[{"a", " ", "q"}], "b"], ",", 
                    FractionBox[
                    RowBox[{"a", " ", "q"}], "c"], ",", 
                    SqrtBox[
                    RowBox[{"a", " ", "q"}]], ",", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"a", " ", "q"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], 
                    RowBox[{"b", " ", "c", " ", "d"}]]}], "}"}], ",", "q", 
                 ",", "j"}], "]"}]}], ")"}]}], "j", "0", "\[Infinity]"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", "\[Pi]", " ", 
     RowBox[{"QPhI", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", ",", 
         FractionBox["q", "f"], ",", 
         FractionBox[
          RowBox[{"f", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"a", " ", "q"}], ")"}], 
            RowBox[{"3", "/", "2"}]]}], 
          RowBox[{"b", " ", "c", " ", "d", " ", "z"}]], ",", 
         FractionBox[
          RowBox[{"b", " ", "c", " ", "d", " ", "q", " ", "z"}], 
          RowBox[{"f", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"a", " ", "q"}], ")"}], 
            RowBox[{"3", "/", "2"}]]}]], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["c", "2"], " ", 
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["z", "2"]}], 
          RowBox[{
           SuperscriptBox["a", "2"], " ", "q"}]], ",", 
         FractionBox[
          RowBox[{"a", " ", "q"}], "d"], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["a", 
            RowBox[{"3", "/", "2"}]], " ", 
           SuperscriptBox["q", 
            RowBox[{"3", "/", "2"}]]}], 
          RowBox[{"b", " ", "c"}]]}], "}"}], ",", "q"}], "]"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8963655540011234`*^9, 3.8963655845508304`*^9}},
 CellLabel->
  "Out[292]=",ExpressionUUID->"583b672e-26ae-4cc8-8c66-934f189ed47b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"Inactivate", "[", 
      RowBox[{"x", ",", "Integrate"}], "]"}], ",", 
     RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       PaneBox[GridBox[{
          {
           StyleBox[
            StyleBox[
             AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
              BoxBaselineShift->-0.25,
              BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
             FontColor->GrayLevel[0.45]],
            ShowStringCharacters->False,
            FontFamily->"Source Sans Pro Black",
            FontSize->0.65 Inherited,
            FontWeight->"Heavy",
            PrivateFontOptions->{"OperatorSubstitution"->False}], 
           StyleBox[
            RowBox[{
             StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
            ShowAutoStyles->False,
            ShowStringCharacters->False,
            FontSize->0.9 Inherited,
            FontColor->GrayLevel[0.1]]}
         },
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        Alignment->Left,
        BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
        BaselinePosition->Baseline,
        FrameMargins->{{3, 0}, {0, 0}}],
       Background->RGBColor[0.968627, 0.976471, 0.984314],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 1}},
       FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
       RoundingRadius->4],
      {"FunctionResourceBox", 
       GrayLevel[0.45], "\"EnsureHeld\""},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "EnsureHeld", "UUID" -> 
        "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
        "Description" -> 
        "Checks an expression and holds it if it is not already held", 
        "ResourceLocations" -> {
          CloudObject[
          "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
        "Keywords" -> {
         "Evaluation Control", "Symbolic Computation", "Hold Expression", 
          "Expression Manipulation"}, 
        "Categories" -> {
         "Core Language & Structure", "Higher Mathematical Computation", 
          "Programming Utilities", "Symbolic & Numeric Computation"}, 
        "Compatibility" -> <|
         "WolframLanguageVersionRequired" -> "13.0+", 
          "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
          "Features" -> {}, 
          "EvaluationEnvironment" -> {
           "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
            "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
        "ContributorInformation" -> <|
         "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
        "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
               RowBox[{
                 StyleBox[
                  RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                   "ResourceFunctionHandle"], "[", 
                 StyleBox["input", "TI"], "]"}]], "Description" -> 
             TextData[{"checks whether the ", 
                Cell[
                 BoxData[
                  StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                 "Source Sans Pro"], 
                " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
        Automatic, "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
        "PageHeaderClickToCopy" -> 
        "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
        "RelatedSymbols" -> {
         "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
        "SeeAlso" -> {
         "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
          "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
        "SymbolName" -> 
        "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
        "VerificationTests" -> HoldComplete[
          VerificationTest[
           Information["EnsureHeld", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
             "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
             Information`InformationValueForm[DownValues, 
               ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                  Pattern[ResourceObjectTest`input, 
                   Blank[]]] :> 
                Module[{ResourceObjectTest`placeholder}, 
                  ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
          VerificationTest[
           Information["IsHeld", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
             None, "DownValues" -> 
             Information`InformationValueForm[
              DownValues, ResourceObjectTest`IsHeld, {
               ResourceObjectTest`IsHeld[
                  Pattern[ResourceObjectTest`input, 
                   Blank[]]] :> MatchQ[
                  PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                  ResourceObjectTest`input], 
                  Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
          VerificationTest[
           Information["UnevaluatedHead", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
             "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
              "DownValues" -> 
             Information`InformationValueForm[
              DownValues, 
               PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
               PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                  Pattern[ResourceObjectTest`expr, 
                   Blank[]]] :> Head[
                  Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
             None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
            False], {}, TestID -> "EnsureHeld-0003"]]|>]],
     Selectable->False], "[", "NotHeldExpression", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896365148423825*^9, 3.896365150096416*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"1020bbf2-e63d-4948-a1ea-8bdba13a4600"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
    RowBox[{"x", ",", 
     RowBox[{"List", "[", 
      RowBox[{"x", ",", 
       RowBox[{"DirectedInfinity", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"DirectedInfinity", "[", "1", "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.896365150606493*^9},
 CellLabel->
  "Out[286]//FullForm=",ExpressionUUID->"03003b36-eaeb-44f8-9e31-\
ef5737dd4372"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inactivate", "[", 
  RowBox[{"NotHeldExpression", ",", "Integrate"}], "]"}]], "Input",
 CellChangeTimes->{{3.8963649572472873`*^9, 3.896365017755808*^9}, {
  3.896365066153455*^9, 3.8963651236897173`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"38919c88-a843-448e-aa75-ade8a1316fd1"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{"x", 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{{3.896365117217247*^9, 3.8963651239596834`*^9}},
 CellLabel->
  "Out[284]=",ExpressionUUID->"36d1cb29-80b9-4b29-ba69-f7a41d57a1cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Inactivate", "[", 
   RowBox[{"NotHeldExpression", ",", "Integrate"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8963651262210093`*^9, 3.8963651302014*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"c00eba71-b5c9-47d1-af35-e0f4c6635a1e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Integrate", "[", 
    RowBox[{"x", ",", 
     RowBox[{"List", "[", 
      RowBox[{"x", ",", 
       RowBox[{"DirectedInfinity", "[", 
        RowBox[{"-", "1"}], "]"}], ",", 
       RowBox[{"DirectedInfinity", "[", "1", "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.8963651305014343`*^9},
 CellLabel->
  "Out[285]//FullForm=",ExpressionUUID->"9d31b8fe-424e-4d8c-92bc-\
1c0358cf2188"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inactivate", "[", "NotHeldExpression", "]"}]], "Input",
 CellChangeTimes->{{3.8963651909425807`*^9, 3.89636519112958*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"661d7ad3-66ce-40ca-92f9-9998f47e369f"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{"x", 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.896365191569582*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"da0627d1-ee60-4154-abc2-4d90e5806c2f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "RemoveNumericalFunctionOptions", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveNumericalFunctionOptions", "::", "usage"}], "=", 
   "\"\<RemoveNumericalFunctionOptions[input] takes an expression as input \
and removes any options specified within instances of NIntegrate, NSum, or \
NProduct, returning a new expression with these functions stripped of their \
options.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RemoveNumericalFunctionOptions", "[", "input_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{"f_", ",", 
         RowBox[{"{", 
          RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}], ",", "___"}], 
        "]"}], ":>", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NSum", "[", 
        RowBox[{"f_", ",", 
         RowBox[{"{", 
          RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}], ",", "___"}], 
        "]"}], ":>", 
       RowBox[{"NSum", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NProduct", "[", 
        RowBox[{"f_", ",", 
         RowBox[{"{", 
          RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}], ",", "___"}], 
        "]"}], ":>", 
       RowBox[{"NProduct", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}]}]}], "}"}], 
    "]"}], "[", "input", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8963656282435293`*^9, 3.8963656997846594`*^9}, {
  3.89636575050951*^9, 3.8963657817165623`*^9}, {3.8963658301985836`*^9, 
  3.896365849945614*^9}, {3.896366643334182*^9, 3.896366679996547*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"1b26f2f6-475f-43e4-a148-09cbe4368895"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RemoveNumericalFunctionOptions", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneBox[GridBox[{
         {
          StyleBox[
           StyleBox[
            AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
             BoxBaselineShift->-0.25,
             BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
            FontColor->GrayLevel[0.45]],
           ShowStringCharacters->False,
           FontFamily->"Source Sans Pro Black",
           FontSize->0.65 Inherited,
           FontWeight->"Heavy",
           PrivateFontOptions->{"OperatorSubstitution"->False}], 
          StyleBox[
           RowBox[{
            StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
           ShowAutoStyles->False,
           ShowStringCharacters->False,
           FontSize->0.9 Inherited,
           FontColor->GrayLevel[0.1]]}
        },
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       Alignment->Left,
       BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
       BaselinePosition->Baseline,
       FrameMargins->{{3, 0}, {0, 0}}],
      Background->RGBColor[0.968627, 0.976471, 0.984314],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
      RoundingRadius->4],
     {"FunctionResourceBox", 
      GrayLevel[0.45], "\"EnsureHeld\""},
     TagBoxNote->"FunctionResourceBox"],
    ResourceFunction[
     ResourceObject[<|
      "Name" -> "EnsureHeld", "UUID" -> 
       "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
       "Description" -> 
       "Checks an expression and holds it if it is not already held", 
       "ResourceLocations" -> {
         CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
       "Keywords" -> {
        "Evaluation Control", "Symbolic Computation", "Hold Expression", 
         "Expression Manipulation"}, 
       "Categories" -> {
        "Core Language & Structure", "Higher Mathematical Computation", 
         "Programming Utilities", "Symbolic & Numeric Computation"}, 
       "Compatibility" -> <|
        "WolframLanguageVersionRequired" -> "13.0+", 
         "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, "Features" -> {},
          "EvaluationEnvironment" -> {
          "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
           "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
       "ContributorInformation" -> <|
        "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
       "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
              RowBox[{
                StyleBox[
                 RowBox[{
                   StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                   "[", 
                   StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}], 
                 "ResourceFunctionHandle"], "[", 
                StyleBox["input", "TI"], "]"}]], "Description" -> 
            TextData[{"checks whether the ", 
               Cell[
                BoxData[
                 StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                "Source Sans Pro"], 
               " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
       URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Function/\
EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
       Automatic, "FunctionLocation" -> 
       CloudObject[
        "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
       "PageHeaderClickToCopy" -> 
       "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
       "RelatedSymbols" -> {
        "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
       "SeeAlso" -> {
        "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
         "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", "SymbolName" -> 
       "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
       "VerificationTests" -> HoldComplete[
         VerificationTest[
          Information["EnsureHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
            "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
            Information`InformationValueForm[DownValues, 
              ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> 
               Module[{ResourceObjectTest`placeholder}, 
                 ResourceObjectTest`placeholder = Unique[]; Which[
                   ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                   ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                   And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                   ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                   Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
         VerificationTest[
          Information["IsHeld", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
            None, "DownValues" -> 
            Information`InformationValueForm[
             DownValues, ResourceObjectTest`IsHeld, {ResourceObjectTest`IsHeld[
                 Pattern[ResourceObjectTest`input, 
                  Blank[]]] :> MatchQ[
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 ResourceObjectTest`input], 
                 Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
            "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
         VerificationTest[
          Information["UnevaluatedHead", LongForm -> False], 
          
          InformationData[<|
           "ObjectType" -> "Symbol", "Usage" -> 
            "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
            "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
            "DownValues" -> 
            Information`InformationValueForm[
             DownValues, 
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
              PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                 Pattern[ResourceObjectTest`expr, 
                  Blank[]]] :> Head[
                 Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> None,
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
            None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
            "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
           False], {}, TestID -> "EnsureHeld-0003"]]|>]],
    Selectable->False], "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f", " ", 
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"j", "/", "2"}], "+", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
            " ", 
            RowBox[{"\[Rho]", "/", "g"}]}], ",", 
           RowBox[{
            RowBox[{"q", "/", "f"}], " ", 
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "j"}], "/", "2"}], "-", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
            RowBox[{"\[Rho]", "/", "g"}]}], ",", 
           RowBox[{"f", " ", 
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"j", "/", "2"}], "+", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
            " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{"q", "/", "f"}], " ", 
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "j"}], "/", "2"}], "-", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"j", "/", "2"}], "+", 
               RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "z", " ", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
             "]"}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"j", "/", "2"}], "-", 
               RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                RowBox[{"j", "/", "2"}]}], "+", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d", " ", "z", " ", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], "/", 
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"j", "/", "2"}], "+", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
            " ", 
            RowBox[{"\[Rho]", "/", "g"}]}], ",", 
           RowBox[{
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"j", "/", "2"}], ")"}]}], "-", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
            RowBox[{"\[Rho]", "/", "g"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
             "/", 
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "-", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
             "/", 
             RowBox[{"(", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}],
                "/", 
               RowBox[{"(", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}],
                "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}], ",", 
           RowBox[{
            RowBox[{"q", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"j", "/", "2"}], "+", 
               RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
            RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Zeta]", ",", 
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}], "*", 
    RowBox[{"NSum", "[", 
     RowBox[{
      FractionBox["1", "k"], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
      RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}], 
    RowBox[{"NProduct", "[", 
     RowBox[{"2.3", ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
      RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896365703889291*^9, 3.8963657325475245`*^9}, {
   3.8963657888910074`*^9, 3.8963658196027775`*^9}, {3.8963658579589043`*^9, 
   3.8963658696613307`*^9}, 3.8963667122797422`*^9},
 CellLabel->
  "In[353]:=",ExpressionUUID->"2063c56e-397d-4637-b65d-ce53d8350b22"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"f", " ", 
            SuperscriptBox["q", 
             RowBox[{
              FractionBox["j", "2"], "+", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              SuperscriptBox["a", 
               RowBox[{"3", "/", "2"}]], 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "\[Rho]"}], 
           "g"], ",", 
          FractionBox[
           RowBox[{"q", " ", 
            SuperscriptBox["q", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["j", "2"]}], "-", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
              SuperscriptBox["a", 
               RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
           RowBox[{"f", " ", "g"}]], ",", 
          FractionBox[
           RowBox[{"f", " ", 
            SuperscriptBox["q", 
             RowBox[{
              FractionBox["j", "2"], "+", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              SuperscriptBox["a", 
               RowBox[{"3", "/", "2"}]], 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}], 
           "\[Rho]"], ",", 
          FractionBox[
           RowBox[{"q", " ", 
            SuperscriptBox["q", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["j", "2"]}], "-", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
              SuperscriptBox["a", 
               RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
           RowBox[{"f", " ", "\[Rho]"}]], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{
              FractionBox["j", "2"], "+", 
              FractionBox["1", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"b", " ", "c", " ", "z", " ", 
               SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{
              FractionBox["j", "2"], "-", 
              FractionBox["1", "4"]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", "g"}], 
           RowBox[{
            SuperscriptBox["a", 
             RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", "j"}], "2"], "+", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"d", " ", "z", " ", 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]}], 
              RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}], ",", 
        "q"}], "]"}], 
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{
              FractionBox["j", "2"], "+", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              SuperscriptBox["a", 
               RowBox[{"3", "/", "2"}]], 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "\[Rho]"}], 
           "g"], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["j", "2"]}], "-", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
              SuperscriptBox["a", 
               RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["q", 
               RowBox[{
                FractionBox["j", "2"], "+", 
                FractionBox["1", "4"]}]], " ", 
              SqrtBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
            "g"}], 
           RowBox[{
            SuperscriptBox["a", 
             RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["q", 
               RowBox[{
                FractionBox["j", "2"], "-", 
                FractionBox["1", "4"]}]], " ", 
              SqrtBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
            "g"}], 
           RowBox[{
            SuperscriptBox["a", 
             RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{
                 FractionBox["j", "2"], "-", 
                 FractionBox["1", "4"]}]], " ", 
               SqrtBox[
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
             "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{
                 FractionBox["1", "4"], "+", 
                 FractionBox["j", "2"]}]], " ", 
               SqrtBox[
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
             "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
          FractionBox[
           RowBox[{
            SuperscriptBox["q", 
             RowBox[{
              FractionBox["j", "2"], "+", 
              FractionBox["3", "4"]}]], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]], " ", "z"}], 
              RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], "\[Rho]"]}], 
         "}"}], ",", "q"}], "]"}]], ",", 
     RowBox[{"{", 
      RowBox[{"\[Zeta]", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}], " ", 
   RowBox[{"NSum", "[", 
    RowBox[{
     FractionBox["1", "k"], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}], " ", 
   RowBox[{"NProduct", "[", 
    RowBox[{"2.3`", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.896365733050146*^9, {3.896365783594942*^9, 3.8963658201452107`*^9}, {
   3.8963658522536793`*^9, 3.896365870040357*^9}, 3.896366712978713*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"95cf3b59-ed2f-44a8-bf3b-2df2c1bf09c8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "MakeFunctionsExact", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MakeFunctionsExact", "::", "usage"}], "=", 
    "\"\<MakeFunctionsExact[input] takes an expression as input and replaces \
all instances of numerical functions NIntegrate, NSum, and NProduct with \
their exact counterparts Integrate, Sum, and Product, respectively. It \
returns the transformed expression.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"MakeFunctionsExact", "[", "input_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{"f_", ",", 
         RowBox[{"{", 
          RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}]}], "]"}], ":>", 
       RowBox[{"Integrate", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NSum", "[", 
        RowBox[{"f_", ",", 
         RowBox[{"{", 
          RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}]}], "]"}], ":>", 
       RowBox[{"Sum", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"NProduct", "[", 
        RowBox[{"f_", ",", 
         RowBox[{"{", 
          RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}]}], "]"}], ":>", 
       RowBox[{"Product", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}]}]}], "}"}], 
    "]"}], "[", "input", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8963659915153847`*^9, 3.8963660450091777`*^9}, {
  3.8963668625372705`*^9, 3.896366876415922*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"9a3a6316-b3c4-46af-9739-fe75ae8c2534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeFunctionsExact", "[", 
  RowBox[{"RemoveWorkingPrecision", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       PaneBox[GridBox[{
          {
           StyleBox[
            StyleBox[
             AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
              BoxBaselineShift->-0.25,
              BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
             FontColor->GrayLevel[0.45]],
            ShowStringCharacters->False,
            FontFamily->"Source Sans Pro Black",
            FontSize->0.65 Inherited,
            FontWeight->"Heavy",
            PrivateFontOptions->{"OperatorSubstitution"->False}], 
           StyleBox[
            RowBox[{
             StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
            ShowAutoStyles->False,
            ShowStringCharacters->False,
            FontSize->0.9 Inherited,
            FontColor->GrayLevel[0.1]]}
         },
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        Alignment->Left,
        BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
        BaselinePosition->Baseline,
        FrameMargins->{{3, 0}, {0, 0}}],
       Background->RGBColor[0.968627, 0.976471, 0.984314],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 1}},
       FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
       RoundingRadius->4],
      {"FunctionResourceBox", 
       GrayLevel[0.45], "\"EnsureHeld\""},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "EnsureHeld", "UUID" -> 
        "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
        "Description" -> 
        "Checks an expression and holds it if it is not already held", 
        "ResourceLocations" -> {
          CloudObject[
          "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
        "Keywords" -> {
         "Evaluation Control", "Symbolic Computation", "Hold Expression", 
          "Expression Manipulation"}, 
        "Categories" -> {
         "Core Language & Structure", "Higher Mathematical Computation", 
          "Programming Utilities", "Symbolic & Numeric Computation"}, 
        "Compatibility" -> <|
         "WolframLanguageVersionRequired" -> "13.0+", 
          "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
          "Features" -> {}, 
          "EvaluationEnvironment" -> {
           "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
            "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
        "ContributorInformation" -> <|
         "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
        "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
               RowBox[{
                 StyleBox[
                  RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                   "ResourceFunctionHandle"], "[", 
                 StyleBox["input", "TI"], "]"}]], "Description" -> 
             TextData[{"checks whether the ", 
                Cell[
                 BoxData[
                  StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                 "Source Sans Pro"], 
                " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
        Automatic, "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
        "PageHeaderClickToCopy" -> 
        "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
        "RelatedSymbols" -> {
         "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
        "SeeAlso" -> {
         "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
          "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
        "SymbolName" -> 
        "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
        "VerificationTests" -> HoldComplete[
          VerificationTest[
           Information["EnsureHeld", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
             "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
             Information`InformationValueForm[DownValues, 
               ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                  Pattern[ResourceObjectTest`input, 
                   Blank[]]] :> 
                Module[{ResourceObjectTest`placeholder}, 
                  ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
          VerificationTest[
           Information["IsHeld", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
             None, "DownValues" -> 
             Information`InformationValueForm[
              DownValues, ResourceObjectTest`IsHeld, {
               ResourceObjectTest`IsHeld[
                  Pattern[ResourceObjectTest`input, 
                   Blank[]]] :> MatchQ[
                  PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                  ResourceObjectTest`input], 
                  Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
          VerificationTest[
           Information["UnevaluatedHead", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
             "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
              "DownValues" -> 
             Information`InformationValueForm[
              DownValues, 
               PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
               PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                  Pattern[ResourceObjectTest`expr, 
                   Blank[]]] :> Head[
                  Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
             None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
            False], {}, TestID -> "EnsureHeld-0003"]]|>]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"QPhI", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f", " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
             " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{
             RowBox[{"q", "/", "f"}], " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "j"}], "/", "2"}], "-", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{"f", " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
             " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "/", "f"}], " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "j"}], "/", "2"}], "-", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "z", " ", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
              "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "-", 
                RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 RowBox[{"j", "/", "2"}]}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", " ", "z", " ", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], "/", 
        RowBox[{"QPhI", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
             " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
              "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "-", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
              "/", 
              RowBox[{"(", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Zeta]", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}], "*", 
     RowBox[{"NSum", "[", 
      RowBox[{
       FractionBox["1", "k"], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}], 
     RowBox[{"NProduct", "[", 
      RowBox[{"2.3", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8963660657230883`*^9, 3.896366068017432*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"a9a5a28a-fd16-4ad6-a9b2-b81c647e9ce2"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Pi]"}], "\[Pi]"], 
     RowBox[{
      FractionBox[
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"f", " ", 
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "\[Rho]"}],
             "g"], ",", 
           FractionBox[
            RowBox[{"q", " ", 
             SuperscriptBox["q", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["j", "2"]}], "-", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
            RowBox[{"f", " ", "g"}]], ",", 
           FractionBox[
            RowBox[{"f", " ", 
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}], 
            "\[Rho]"], ",", 
           FractionBox[
            RowBox[{"q", " ", 
             SuperscriptBox["q", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["j", "2"]}], "-", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
            RowBox[{"f", " ", "\[Rho]"}]], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["1", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "z", " ", 
                SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "-", 
               FractionBox["1", "4"]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox[
                RowBox[{"3", " ", "j"}], "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"d", " ", "z", " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}], ",",
          "q"}], "]"}], 
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "\[Rho]"}],
             "g"], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["j", "2"]}], "-", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{
                 FractionBox["j", "2"], "+", 
                 FractionBox["1", "4"]}]], " ", 
               SqrtBox[
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
             "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{
                 FractionBox["j", "2"], "-", 
                 FractionBox["1", "4"]}]], " ", 
               SqrtBox[
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
             "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                  FractionBox["j", "2"], "-", 
                  FractionBox["1", "4"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
              "g"}], 
             RowBox[{
              SuperscriptBox["a", 
               RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                  FractionBox["1", "4"], "+", 
                  FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
              "g"}], 
             RowBox[{
              SuperscriptBox["a", 
               RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]], " ", "z"}], 
               RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], "\[Rho]"]}], 
          "}"}], ",", "q"}], "]"}]], 
      RowBox[{"\[DifferentialD]", "\[Zeta]"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "100"], 
     FractionBox["1", "k"]}], ")"}], " ", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"k", "=", "1"}], "100"], "2.3`"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8963660687903957`*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"3a255d7e-0ba4-4bb4-bdbb-7727841d85f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"InactivateIntegralProductSum", "[", "input_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"Inactivate", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Sum", "|", "Integrate", "|", "Product"}]}], "]"}], ",", 
     RowBox[{"{", "HoldAll", "}"}]}], "]"}], "@@", 
   RowBox[{"MakeFunctionsExact", "[", 
    RowBox[{"RemoveWorkingPrecision", "[", 
     RowBox[{
      InterpretationBox[
       TagBox[
        FrameBox[
         PaneBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                BoxBaselineShift->-0.25,
                BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
               FontColor->GrayLevel[0.45]],
              ShowStringCharacters->False,
              FontFamily->"Source Sans Pro Black",
              FontSize->0.65 Inherited,
              FontWeight->"Heavy",
              PrivateFontOptions->{"OperatorSubstitution"->False}], 
             StyleBox[
              RowBox[{
               StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
              ShowAutoStyles->False,
              ShowStringCharacters->False,
              FontSize->0.9 Inherited,
              FontColor->GrayLevel[0.1]]}
           },
           GridBoxSpacings->{"Columns" -> {{0.25}}}],
          Alignment->Left,
          BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
          BaselinePosition->Baseline,
          FrameMargins->{{3, 0}, {0, 0}}],
         Background->RGBColor[0.968627, 0.976471, 0.984314],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 1}},
         FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
         RoundingRadius->4],
        {"FunctionResourceBox", 
         GrayLevel[0.45], "\"EnsureHeld\""},
        TagBoxNote->"FunctionResourceBox"],
       ResourceFunction[
        ResourceObject[<|
         "Name" -> "EnsureHeld", "UUID" -> 
          "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
          "Function", "Description" -> 
          "Checks an expression and holds it if it is not already held", 
          "ResourceLocations" -> {
            CloudObject[
            "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
          "Keywords" -> {
           "Evaluation Control", "Symbolic Computation", "Hold Expression", 
            "Expression Manipulation"}, 
          "Categories" -> {
           "Core Language & Structure", "Higher Mathematical Computation", 
            "Programming Utilities", "Symbolic & Numeric Computation"}, 
          "Compatibility" -> <|
           "WolframLanguageVersionRequired" -> "13.0+", 
            "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
            "Features" -> {}, 
            "EvaluationEnvironment" -> {
             "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
              "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
          "ContributorInformation" -> <|
           "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
          "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                 RowBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                   StyleBox["input", "TI"], "]"}]], "Description" -> 
               TextData[{"checks whether the ", 
                  Cell[
                   BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                   "Source Sans Pro"], 
                  " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
          URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
          Automatic, "FunctionLocation" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
          "PageHeaderClickToCopy" -> 
          "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
          "RelatedSymbols" -> {
           "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
          "SeeAlso" -> {
           "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
            "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
          "SymbolName" -> 
          "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
          "VerificationTests" -> HoldComplete[
            VerificationTest[
             Information["EnsureHeld", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
               "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
               Information`InformationValueForm[DownValues, 
                 ResourceFunction["EnsureHeld"], {
                 ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                  Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
               "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
               None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
               "Global`EnsureHeld"|>, False], {}, TestID -> 
             "EnsureHeld-0001"], 
            VerificationTest[
             Information["IsHeld", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
               None, "DownValues" -> 
               Information`InformationValueForm[
                DownValues, ResourceObjectTest`IsHeld, {
                 ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
               "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
               None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
               "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
            VerificationTest[
             Information["UnevaluatedHead", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
               "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
               None, "DownValues" -> 
               Information`InformationValueForm[
                DownValues, 
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
               None, "DefaultValues" -> None, "NValues" -> None, 
               "FormatValues" -> None, "Options" -> None, 
               "Attributes" -> {HoldAll}, "FullName" -> 
               "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
              False], {}, TestID -> "EnsureHeld-0003"]]|>]],
       Selectable->False], "[", "input", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8963660789111767`*^9, 3.8963661469374847`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"155c9b3b-153d-4519-9722-5a90a6e62b0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeFunctionsExact", "@", 
  RowBox[{"RemoveWorkingPrecision", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       PaneBox[GridBox[{
          {
           StyleBox[
            StyleBox[
             AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
              BoxBaselineShift->-0.25,
              BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
             FontColor->GrayLevel[0.45]],
            ShowStringCharacters->False,
            FontFamily->"Source Sans Pro Black",
            FontSize->0.65 Inherited,
            FontWeight->"Heavy",
            PrivateFontOptions->{"OperatorSubstitution"->False}], 
           StyleBox[
            RowBox[{
             StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
            ShowAutoStyles->False,
            ShowStringCharacters->False,
            FontSize->0.9 Inherited,
            FontColor->GrayLevel[0.1]]}
         },
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        Alignment->Left,
        BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
        BaselinePosition->Baseline,
        FrameMargins->{{3, 0}, {0, 0}}],
       Background->RGBColor[0.968627, 0.976471, 0.984314],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 1}},
       FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
       RoundingRadius->4],
      {"FunctionResourceBox", 
       GrayLevel[0.45], "\"EnsureHeld\""},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "EnsureHeld", "UUID" -> 
        "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function", 
        "Description" -> 
        "Checks an expression and holds it if it is not already held", 
        "ResourceLocations" -> {
          CloudObject[
          "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
        "Keywords" -> {
         "Evaluation Control", "Symbolic Computation", "Hold Expression", 
          "Expression Manipulation"}, 
        "Categories" -> {
         "Core Language & Structure", "Higher Mathematical Computation", 
          "Programming Utilities", "Symbolic & Numeric Computation"}, 
        "Compatibility" -> <|
         "WolframLanguageVersionRequired" -> "13.0+", 
          "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
          "Features" -> {}, 
          "EvaluationEnvironment" -> {
           "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
            "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
        "ContributorInformation" -> <|
         "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
        "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
               RowBox[{
                 StyleBox[
                  RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                   "ResourceFunctionHandle"], "[", 
                 StyleBox["input", "TI"], "]"}]], "Description" -> 
             TextData[{"checks whether the ", 
                Cell[
                 BoxData[
                  StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                 "Source Sans Pro"], 
                " is an unheld expression. If it is, it holds the expression. \
If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
        URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
        Automatic, "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
        "PageHeaderClickToCopy" -> 
        "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
        "RelatedSymbols" -> {
         "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
        "SeeAlso" -> {
         "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
          "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
        "SymbolName" -> 
        "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
        "VerificationTests" -> HoldComplete[
          VerificationTest[
           Information["EnsureHeld", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
             "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
             Information`InformationValueForm[DownValues, 
               ResourceFunction["EnsureHeld"], {ResourceFunction["EnsureHeld"][
                  Pattern[ResourceObjectTest`input, 
                   Blank[]]] :> 
                Module[{ResourceObjectTest`placeholder}, 
                  ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
          VerificationTest[
           Information["IsHeld", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
             None, "DownValues" -> 
             Information`InformationValueForm[
              DownValues, ResourceObjectTest`IsHeld, {
               ResourceObjectTest`IsHeld[
                  Pattern[ResourceObjectTest`input, 
                   Blank[]]] :> MatchQ[
                  PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                  ResourceObjectTest`input], 
                  Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
             "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
          VerificationTest[
           Information["UnevaluatedHead", LongForm -> False], 
           
           InformationData[<|
            "ObjectType" -> "Symbol", "Usage" -> 
             "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
             "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None,
              "DownValues" -> 
             Information`InformationValueForm[
              DownValues, 
               PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
               PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                  Pattern[ResourceObjectTest`expr, 
                   Blank[]]] :> Head[
                  Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
             None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
             None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
             "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
            False], {}, TestID -> "EnsureHeld-0003"]]|>]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"QPhI", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f", " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
             " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{
             RowBox[{"q", "/", "f"}], " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "j"}], "/", "2"}], "-", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{"f", " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
             " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "/", "f"}], " ", 
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "j"}], "/", "2"}], "-", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "z", " ", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
              "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "-", 
                RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"3", "/", "2"}], ")"}]}], "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 RowBox[{"j", "/", "2"}]}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d", " ", "z", " ", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], "/", 
        RowBox[{"QPhI", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
             " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
             RowBox[{"\[Rho]", "/", "g"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "+", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
              "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "-", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
              "/", 
              RowBox[{"(", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}], ",", 
            RowBox[{
             RowBox[{"q", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"j", "/", "2"}], "+", 
                RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
             RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Zeta]", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}], "*", 
     RowBox[{"NSum", "[", 
      RowBox[{
       FractionBox["1", "k"], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}], 
     RowBox[{"NProduct", "[", 
      RowBox[{"2.3", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8963661482468953`*^9, 3.8963661962176466`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"58742482-ca57-48ce-8ab2-7524796d7f6d"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Pi]"}], "\[Pi]"], 
     RowBox[{
      FractionBox[
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"f", " ", 
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "\[Rho]"}],
             "g"], ",", 
           FractionBox[
            RowBox[{"q", " ", 
             SuperscriptBox["q", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["j", "2"]}], "-", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
            RowBox[{"f", " ", "g"}]], ",", 
           FractionBox[
            RowBox[{"f", " ", 
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}], 
            "\[Rho]"], ",", 
           FractionBox[
            RowBox[{"q", " ", 
             SuperscriptBox["q", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["j", "2"]}], "-", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
            RowBox[{"f", " ", "\[Rho]"}]], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["1", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "z", " ", 
                SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "-", 
               FractionBox["1", "4"]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox[
                RowBox[{"3", " ", "j"}], "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"d", " ", "z", " ", 
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]]}], 
               RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}], ",",
          "q"}], "]"}], 
       RowBox[{"QPhI", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]], 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "\[Rho]"}],
             "g"], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["j", "2"]}], "-", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
               SuperscriptBox["a", 
                RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{
                 FractionBox["j", "2"], "+", 
                 FractionBox["1", "4"]}]], " ", 
               SqrtBox[
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
             "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["q", 
                RowBox[{
                 FractionBox["j", "2"], "-", 
                 FractionBox["1", "4"]}]], " ", 
               SqrtBox[
                RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
             "g"}], 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                  FractionBox["j", "2"], "-", 
                  FractionBox["1", "4"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
              "g"}], 
             RowBox[{
              SuperscriptBox["a", 
               RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                  FractionBox["1", "4"], "+", 
                  FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], " ", 
              "g"}], 
             RowBox[{
              SuperscriptBox["a", 
               RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
           FractionBox[
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{
               FractionBox["j", "2"], "+", 
               FractionBox["3", "4"]}]], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"3", "/", "2"}]], " ", "z"}], 
               RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], "\[Rho]"]}], 
          "}"}], ",", "q"}], "]"}]], 
      RowBox[{"\[DifferentialD]", "\[Zeta]"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "100"], 
     FractionBox["1", "k"]}], ")"}], " ", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"k", "=", "1"}], "100"], "2.3`"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8963661581527557`*^9, 3.8963661966953917`*^9}, 
   3.8963669256016593`*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"011ae057-ae22-4d1e-8450-0a0195270dc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceAll", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Integrate", "->", 
      RowBox[{"Inactive", "[", "Integrate", "]"}]}], ",", 
     RowBox[{"Product", "->", 
      RowBox[{"Inactive", "[", "Product", "]"}]}], ",", 
     RowBox[{"Sum", "->", 
      RowBox[{"Inactive", "[", "Sum", "]"}]}]}], "}"}], "]"}], "[", 
  RowBox[{"MakeFunctionsExact", "@", 
   RowBox[{"RemoveWorkingPrecision", "[", 
    RowBox[{
     InterpretationBox[
      TagBox[
       FrameBox[
        PaneBox[GridBox[{
           {
            StyleBox[
             StyleBox[
              AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
               BoxBaselineShift->-0.25,
               BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
              FontColor->GrayLevel[0.45]],
             ShowStringCharacters->False,
             FontFamily->"Source Sans Pro Black",
             FontSize->0.65 Inherited,
             FontWeight->"Heavy",
             PrivateFontOptions->{"OperatorSubstitution"->False}], 
            StyleBox[
             RowBox[{
              StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
             ShowAutoStyles->False,
             ShowStringCharacters->False,
             FontSize->0.9 Inherited,
             FontColor->GrayLevel[0.1]]}
          },
          GridBoxSpacings->{"Columns" -> {{0.25}}}],
         Alignment->Left,
         BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
         BaselinePosition->Baseline,
         FrameMargins->{{3, 0}, {0, 0}}],
        Background->RGBColor[0.968627, 0.976471, 0.984314],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 1}},
        FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
        RoundingRadius->4],
       {"FunctionResourceBox", 
        GrayLevel[0.45], "\"EnsureHeld\""},
       TagBoxNote->"FunctionResourceBox"],
      ResourceFunction[
       ResourceObject[<|
        "Name" -> "EnsureHeld", "UUID" -> 
         "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> "Function",
          "Description" -> 
         "Checks an expression and holds it if it is not already held", 
         "ResourceLocations" -> {
           CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
         "Keywords" -> {
          "Evaluation Control", "Symbolic Computation", "Hold Expression", 
           "Expression Manipulation"}, 
         "Categories" -> {
          "Core Language & Structure", "Higher Mathematical Computation", 
           "Programming Utilities", "Symbolic & Numeric Computation"}, 
         "Compatibility" -> <|
          "WolframLanguageVersionRequired" -> "13.0+", 
           "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
           "Features" -> {}, 
           "EvaluationEnvironment" -> {
            "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
             "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
         "ContributorInformation" -> <|
          "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
         CloudObject[
          "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
         "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                    "ResourceFunctionHandle"], "[", 
                  StyleBox["input", "TI"], "]"}]], "Description" -> 
              TextData[{"checks whether the ", 
                 Cell[
                  BoxData[
                   StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                  "Source Sans Pro"], 
                 " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
         URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
         CloudObject[
          "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
         Automatic, "FunctionLocation" -> 
         CloudObject[
          "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
         "PageHeaderClickToCopy" -> 
         "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
         "RelatedSymbols" -> {
          "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
         "SeeAlso" -> {
          "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
           "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
         "SymbolName" -> 
         "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
         "VerificationTests" -> HoldComplete[
           VerificationTest[
            Information["EnsureHeld", LongForm -> False], 
            
            InformationData[<|
             "ObjectType" -> "Symbol", "Usage" -> 
              "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
              "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
              Information`InformationValueForm[DownValues, 
                ResourceFunction["EnsureHeld"], {
                ResourceFunction["EnsureHeld"][
                   Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                 Module[{ResourceObjectTest`placeholder}, 
                   ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
              "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
              None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
              "Global`EnsureHeld"|>, False], {}, TestID -> "EnsureHeld-0001"], 
           VerificationTest[
            Information["IsHeld", LongForm -> False], 
            
            InformationData[<|
             "ObjectType" -> "Symbol", "Usage" -> 
              "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
              None, "DownValues" -> 
              Information`InformationValueForm[
               DownValues, ResourceObjectTest`IsHeld, {
                ResourceObjectTest`IsHeld[
                   Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                   ResourceObjectTest`input], 
                   Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
              "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
              None, "Options" -> None, "Attributes" -> {HoldAll}, 
              "FullName" -> "Global`IsHeld"|>, False], {}, TestID -> 
            "EnsureHeld-0002"], 
           VerificationTest[
            Information["UnevaluatedHead", LongForm -> False], 
            
            InformationData[<|
             "ObjectType" -> "Symbol", "Usage" -> 
              "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
              "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
              None, "DownValues" -> 
              Information`InformationValueForm[
               DownValues, 
                PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
                PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                   Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                   Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
              None, "DefaultValues" -> None, "NValues" -> None, 
              "FormatValues" -> None, "Options" -> None, 
              "Attributes" -> {HoldAll}, "FullName" -> 
              "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
             False], {}, TestID -> "EnsureHeld-0003"]]|>]],
      Selectable->False], "[", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"QPhI", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f", " ", 
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "+", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
              " ", 
              RowBox[{"\[Rho]", "/", "g"}]}], ",", 
             RowBox[{
              RowBox[{"q", "/", "f"}], " ", 
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "j"}], "/", "2"}], "-", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
              RowBox[{"\[Rho]", "/", "g"}]}], ",", 
             RowBox[{"f", " ", 
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "+", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
              " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{"q", "/", "f"}], " ", 
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "j"}], "/", "2"}], "-", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "+", 
                 RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "z", " ", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
               "]"}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "-", 
                 RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  RowBox[{"j", "/", "2"}]}], "+", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"d", " ", "z", " ", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], "/", 
         RowBox[{"QPhI", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "+", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
              " ", 
              RowBox[{"\[Rho]", "/", "g"}]}], ",", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
              RowBox[{"\[Rho]", "/", "g"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}],
                "/", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"q", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}],
                "/", 
               RowBox[{"(", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}], ",", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "+", 
                 RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
              RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Zeta]", ",", 
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}], "*", 
      RowBox[{"NSum", "[", 
       RowBox[{
        FractionBox["1", "k"], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}], 
      RowBox[{"NProduct", "[", 
       RowBox[{"2.3", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.896366259972721*^9, 3.8963663148581376`*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"402a5685-06bc-4a3c-b286-8dbd989961ee"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   TemplateBox[{
     FractionBox[
      RowBox[{"QPhI", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              FractionBox[
               RowBox[{"f", " ", 
                 SuperscriptBox["q", 
                  RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                 "\[Rho]"}], "g"], ",", 
              FractionBox[
               RowBox[{"q", " ", 
                 SuperscriptBox["q", 
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                   SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
               RowBox[{"f", " ", "g"}]], ",", 
              FractionBox[
               RowBox[{"f", " ", 
                 SuperscriptBox["q", 
                  RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", "g"}], 
               "\[Rho]"], ",", 
              FractionBox[
               RowBox[{"q", " ", 
                 SuperscriptBox["q", 
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                   SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "g"}], 
               RowBox[{"f", " ", "\[Rho]"}]], ",", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["q", 
                  RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"b", " ", "c", " ", "z", " ", 
                    SqrtBox["a"]}], "d"]], " ", "g"}], "\[Rho]"], ",", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["q", 
                  RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                  RowBox[{"3", "/", "2"}]], " ", "g"}], 
               RowBox[{
                 SuperscriptBox["a", 
                  RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["q", 
                  RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "j"}], "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"d", " ", "z", " ", 
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]}], 
                   RowBox[{"b", " ", "c"}]]], " ", "g"}], "\[Rho]"]}], "}"}], 
          ",", "q"}], "]"}], 
      RowBox[{"QPhI", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              FractionBox[
               RowBox[{
                 SuperscriptBox["q", 
                  RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                 "\[Rho]"}], "g"], ",", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["q", 
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox["j", "2"]}], "-", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                   SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
              FractionBox[
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                 " ", "g"}], 
               RowBox[{
                 SuperscriptBox["a", 
                  RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
              FractionBox[
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                 " ", "g"}], 
               RowBox[{
                 SuperscriptBox["a", 
                  RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
              RowBox[{"-", 
                FractionBox[
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["j", "2"], "-", 
                    FractionBox["1", "4"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                 RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
              RowBox[{"-", 
                FractionBox[
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["q", 
                    RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                    SqrtBox[
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], ")"}], 
                   " ", "g"}], 
                 RowBox[{
                   SuperscriptBox["a", 
                    RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["q", 
                  RowBox[{
                    FractionBox["j", "2"], "+", 
                    FractionBox["3", "4"]}]], " ", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                   RowBox[{"b", " ", "c", " ", "d"}]]], " ", "g"}], 
               "\[Rho]"]}], "}"}], ",", "q"}], "]"}]], "\[Zeta]", 
     RowBox[{"-", "\[Pi]"}], "\[Pi]"},
    "InactiveIntegrate",
    DisplayFunction->(RowBox[{
       SubsuperscriptBox[
        StyleBox["\[Integral]", "Inactive"], #3, #4], 
       RowBox[{#, 
         RowBox[{
           StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], " ", 
   RowBox[{"(", 
    TemplateBox[{
      FractionBox["1", "k"], "k", "1", "100"},
     "InactiveSum",
     DisplayFunction->(RowBox[{
        UnderoverscriptBox[
         StyleBox["\[Sum]", "Inactive"], 
         RowBox[{#2, "=", #3}], #4], #}]& ),
     InterpretationFunction->(RowBox[{
        RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
        RowBox[{#, ",", 
          RowBox[{"{", 
            RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], ")"}], " ", 
   TemplateBox[{"2.3`", "k", "1", "100"},
    "InactiveProduct",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Product]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Product", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8963662749561014`*^9, 3.8963663154407835`*^9, 
  3.8963669296665773`*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"46f216cc-2fc8-4033-93b6-cea98b057910"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Integrate", "->", 
       RowBox[{"Inactive", "[", "Integrate", "]"}]}], ",", 
      RowBox[{"Product", "->", 
       RowBox[{"Inactive", "[", "Product", "]"}]}], ",", 
      RowBox[{"Sum", "->", 
       RowBox[{"Inactive", "[", "Sum", "]"}]}]}], "}"}], "]"}], "[", 
   RowBox[{"MakeFunctionsExact", "@", 
    RowBox[{"RemoveWorkingPrecision", "[", 
     RowBox[{
      InterpretationBox[
       TagBox[
        FrameBox[
         PaneBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                BoxBaselineShift->-0.25,
                BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
               FontColor->GrayLevel[0.45]],
              ShowStringCharacters->False,
              FontFamily->"Source Sans Pro Black",
              FontSize->0.65 Inherited,
              FontWeight->"Heavy",
              PrivateFontOptions->{"OperatorSubstitution"->False}], 
             StyleBox[
              RowBox[{
               StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
              ShowAutoStyles->False,
              ShowStringCharacters->False,
              FontSize->0.9 Inherited,
              FontColor->GrayLevel[0.1]]}
           },
           GridBoxSpacings->{"Columns" -> {{0.25}}}],
          Alignment->Left,
          BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
          BaselinePosition->Baseline,
          FrameMargins->{{3, 0}, {0, 0}}],
         Background->RGBColor[0.968627, 0.976471, 0.984314],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 1}},
         FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
         RoundingRadius->4],
        {"FunctionResourceBox", 
         GrayLevel[0.45], "\"EnsureHeld\""},
        TagBoxNote->"FunctionResourceBox"],
       ResourceFunction[
        ResourceObject[<|
         "Name" -> "EnsureHeld", "UUID" -> 
          "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
          "Function", "Description" -> 
          "Checks an expression and holds it if it is not already held", 
          "ResourceLocations" -> {
            CloudObject[
            "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
          "Keywords" -> {
           "Evaluation Control", "Symbolic Computation", "Hold Expression", 
            "Expression Manipulation"}, 
          "Categories" -> {
           "Core Language & Structure", "Higher Mathematical Computation", 
            "Programming Utilities", "Symbolic & Numeric Computation"}, 
          "Compatibility" -> <|
           "WolframLanguageVersionRequired" -> "13.0+", 
            "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
            "Features" -> {}, 
            "EvaluationEnvironment" -> {
             "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
              "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
          "ContributorInformation" -> <|
           "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
          "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                 RowBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                   StyleBox["input", "TI"], "]"}]], "Description" -> 
               TextData[{"checks whether the ", 
                  Cell[
                   BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                   "Source Sans Pro"], 
                  " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
          URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
          Automatic, "FunctionLocation" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
          "PageHeaderClickToCopy" -> 
          "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
          "RelatedSymbols" -> {
           "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
          "SeeAlso" -> {
           "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
            "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
          "SymbolName" -> 
          "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
          "VerificationTests" -> HoldComplete[
            VerificationTest[
             Information["EnsureHeld", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
               "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
               Information`InformationValueForm[DownValues, 
                 ResourceFunction["EnsureHeld"], {
                 ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                  Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
               "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
               None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
               "Global`EnsureHeld"|>, False], {}, TestID -> 
             "EnsureHeld-0001"], 
            VerificationTest[
             Information["IsHeld", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
               None, "DownValues" -> 
               Information`InformationValueForm[
                DownValues, ResourceObjectTest`IsHeld, {
                 ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
               "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
               None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
               "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
            VerificationTest[
             Information["UnevaluatedHead", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
               "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
               None, "DownValues" -> 
               Information`InformationValueForm[
                DownValues, 
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
               None, "DefaultValues" -> None, "NValues" -> None, 
               "FormatValues" -> None, "Options" -> None, 
               "Attributes" -> {HoldAll}, "FullName" -> 
               "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
              False], {}, TestID -> "EnsureHeld-0003"]]|>]],
       Selectable->False], "[", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "-", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   RowBox[{"j", "/", "2"}]}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"d", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
          "/", 
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Zeta]", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}], "*", 
       RowBox[{"NSum", "[", 
        RowBox[{
         FractionBox["1", "k"], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}], 
       RowBox[{"NProduct", "[", 
        RowBox[{"2.3", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], "]"}], "]"}]}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8963663176414003`*^9, 3.896366321725115*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"86976575-c956-49ad-81f3-8d62f1c892e1"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{
    FractionBox[
     RowBox[{"QPhI", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             FractionBox[
              RowBox[{"f", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
              RowBox[{"f", " ", "g"}]], ",", 
             FractionBox[
              RowBox[{"f", " ", "g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]]}], "\[Rho]"], 
             ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]]}], 
              RowBox[{"f", " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SqrtBox["a"], " ", "b", " ", "c", " ", "z"}], "d"]]}], 
              "\[Rho]"], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox[
                    RowBox[{"3", " ", "j"}], "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "d", " ", "z"}], 
                  RowBox[{"b", " ", "c"}]]]}], "\[Rho]"]}], "}"}], ",", "q"}],
        "]"}], 
     RowBox[{"QPhI", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["3", "4"]}], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             RowBox[{"-", 
               FractionBox[
                RowBox[{"g", " ", 
                  SuperscriptBox["q", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                    FractionBox["j", "2"]}]], " ", 
                  SqrtBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                RowBox[{
                  SuperscriptBox["a", 
                   RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
             RowBox[{"-", 
               FractionBox[
                RowBox[{"g", " ", 
                  SuperscriptBox["q", 
                   RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                  SqrtBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                RowBox[{
                  SuperscriptBox["a", 
                   RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                  RowBox[{"b", " ", "c", " ", "d"}]]]}], "\[Rho]"]}], "}"}], 
         ",", "q"}], "]"}]], "\[Zeta]", 
    RowBox[{"-", "\[Pi]"}], "\[Pi]"},
   "InactiveIntegrate",
   DisplayFunction->(RowBox[{
      SubsuperscriptBox[
       StyleBox["\[Integral]", "Inactive"], #3, #4], 
      RowBox[{#, 
        RowBox[{
          StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], " ", 
  RowBox[{"(", 
   TemplateBox[{"2.3`", "k", "1", "100"},
    "InactiveProduct",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Product]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Product", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], ")"}], " ", 
  TemplateBox[{
    FractionBox["1", "k"], "k", "1", "100"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{3.896366322256159*^9, 3.896366933236475*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"b35da88a-9b41-4cef-94d7-c564c5c88bb9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "InactivateIntegralProductSum", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"InactivateIntegralProductSum", ",", "HoldAll"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InactivateIntegralProductSum", "[", "input_", "]"}], ":=", 
  RowBox[{"ReleaseHold", "[", 
   RowBox[{
    RowBox[{"ReplaceAll", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Integrate", "->", 
        RowBox[{"Inactive", "[", "Integrate", "]"}]}], ",", 
       RowBox[{"Product", "->", 
        RowBox[{"Inactive", "[", "Product", "]"}]}], ",", 
       RowBox[{"Sum", "->", 
        RowBox[{"Inactive", "[", "Sum", "]"}]}]}], "}"}], "]"}], "[", 
    RowBox[{"MakeFunctionsExact", "@", 
     RowBox[{"RemoveNumericalFunctionOptions", "[", 
      RowBox[{
       InterpretationBox[
        TagBox[
         FrameBox[
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                FontColor->GrayLevel[0.45]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.65 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->0.9 Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}],
          Background->RGBColor[0.968627, 0.976471, 0.984314],
          BaselinePosition->Baseline,
          DefaultBaseStyle->{},
          FrameMargins->{{0, 0}, {1, 1}},
          FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
          RoundingRadius->4],
         {"FunctionResourceBox", 
          GrayLevel[0.45], "\"EnsureHeld\""},
         TagBoxNote->"FunctionResourceBox"],
        ResourceFunction[
         ResourceObject[<|
          "Name" -> "EnsureHeld", "UUID" -> 
           "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
           "Function", "Description" -> 
           "Checks an expression and holds it if it is not already held", 
           "ResourceLocations" -> {
             CloudObject[
             "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
           "Keywords" -> {
            "Evaluation Control", "Symbolic Computation", "Hold Expression", 
             "Expression Manipulation"}, 
           "Categories" -> {
            "Core Language & Structure", "Higher Mathematical Computation", 
             "Programming Utilities", "Symbolic & Numeric Computation"}, 
           "Compatibility" -> <|
            "WolframLanguageVersionRequired" -> "13.0+", 
             "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
             "Features" -> {}, 
             "EvaluationEnvironment" -> {
              "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
               "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
           "ContributorInformation" -> <|
            "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
           "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                  RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                    StyleBox["input", "TI"], "]"}]], "Description" -> 
                TextData[{"checks whether the ", 
                   Cell[
                    BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], 
                   " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
           URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
           Automatic, "FunctionLocation" -> 
           CloudObject[
            "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
           "PageHeaderClickToCopy" -> 
           "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
           "RelatedSymbols" -> {
            "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"},
            "SeeAlso" -> {
            "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
             "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
           "SymbolName" -> 
           "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
           "VerificationTests" -> HoldComplete[
             VerificationTest[
              Information["EnsureHeld", LongForm -> False], 
              
              InformationData[<|
               "ObjectType" -> "Symbol", "Usage" -> 
                "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
                "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
                Information`InformationValueForm[DownValues, 
                  ResourceFunction["EnsureHeld"], {
                  ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                   Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
                "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
                None, "Options" -> None, "Attributes" -> {HoldAll}, 
                "FullName" -> "Global`EnsureHeld"|>, False], {}, TestID -> 
              "EnsureHeld-0001"], 
             VerificationTest[
              Information["IsHeld", LongForm -> False], 
              
              InformationData[<|
               "ObjectType" -> "Symbol", "Usage" -> 
                "IsHeld[input] returns True if the input is a held \
expression, and False otherwise. A held expression is an expression that is \
held by Hold or HoldForm.", "Documentation" -> None, "OwnValues" -> None, 
                "UpValues" -> None, "DownValues" -> 
                Information`InformationValueForm[
                 DownValues, ResourceObjectTest`IsHeld, {
                  ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
                "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
                None, "Options" -> None, "Attributes" -> {HoldAll}, 
                "FullName" -> "Global`IsHeld"|>, False], {}, TestID -> 
              "EnsureHeld-0002"], 
             VerificationTest[
              Information["UnevaluatedHead", LongForm -> False], 
              
              InformationData[<|
               "ObjectType" -> "Symbol", "Usage" -> 
                "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
                "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
                None, "DownValues" -> 
                Information`InformationValueForm[
                 DownValues, 
                  PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
                  PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
                None, "DefaultValues" -> None, "NValues" -> None, 
                "FormatValues" -> None, "Options" -> None, 
                "Attributes" -> {HoldAll}, "FullName" -> 
                "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>,
                False], {}, TestID -> "EnsureHeld-0003"]]|>]],
        Selectable->False], "[", "input", "]"}], "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InactivateIntegralProductSum", "::", "usage"}], "=", 
   "\"\<InactivateIntegralProductSum[input] takes an expression as input, \
ensures it is held to prevent evaluation, removes any options from numerical \
functions, converts numerical functions to their exact counterparts, and then \
inactivates all instances of Integrate, Sum, and Product. It returns the \
transformed, inactive expression.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Inactivate", "[", 
    RowBox[{
     RowBox[{"MakeFunctionsExact", "@", 
      RowBox[{"RemoveWorkingPrecision", "[", 
       RowBox[{
        InterpretationBox[
         TagBox[
          FrameBox[
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 FontColor->GrayLevel[0.45]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.65 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], 
                 " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->0.9 Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}],
           Background->RGBColor[0.968627, 0.976471, 0.984314],
           BaselinePosition->Baseline,
           DefaultBaseStyle->{},
           FrameMargins->{{0, 0}, {1, 1}},
           FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
           RoundingRadius->4],
          {"FunctionResourceBox", 
           GrayLevel[0.45], "\"EnsureHeld\""},
          TagBoxNote->"FunctionResourceBox"],
         ResourceFunction[
          
          ResourceObject[<|
           "Name" -> "EnsureHeld", "UUID" -> 
            "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
            "Function", "Description" -> 
            "Checks an expression and holds it if it is not already held", 
            "ResourceLocations" -> {
              CloudObject[
              "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
            "Keywords" -> {
             "Evaluation Control", "Symbolic Computation", "Hold Expression", 
              "Expression Manipulation"}, 
            "Categories" -> {
             "Core Language & Structure", "Higher Mathematical Computation", 
              "Programming Utilities", "Symbolic & Numeric Computation"}, 
            "Compatibility" -> <|
             "WolframLanguageVersionRequired" -> "13.0+", 
              "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
              "Features" -> {}, 
              "EvaluationEnvironment" -> {
               "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
                "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
            "ContributorInformation" -> <|
             "ContributedBy" -> "Peter Cullen Burbery"|>, 
            "DefinitionNotebook" -> 
            CloudObject[
             "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
            "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                   RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                    StyleBox["input", "TI"], "]"}]], "Description" -> 
                 TextData[{"checks whether the ", 
                    Cell[
                    BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], 
                    " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
            URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
            CloudObject[
             "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
            Automatic, "FunctionLocation" -> 
            CloudObject[
             "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
            "PageHeaderClickToCopy" -> 
            "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
            "RelatedSymbols" -> {
             "Hold", "HoldForm", "HoldComplete", "HoldPattern", 
              "Unevaluated"}, 
            "SeeAlso" -> {
             "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
              "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
            "SymbolName" -> 
            "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld",
             "VerificationTests" -> HoldComplete[
              VerificationTest[
               Information["EnsureHeld", LongForm -> False], 
               
               InformationData[<|
                "ObjectType" -> "Symbol", "Usage" -> 
                 "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
                 "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
                 Information`InformationValueForm[DownValues, 
                   ResourceFunction["EnsureHeld"], {
                   ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                    Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
                 "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
                 None, "Options" -> None, "Attributes" -> {HoldAll}, 
                 "FullName" -> "Global`EnsureHeld"|>, False], {}, TestID -> 
               "EnsureHeld-0001"], 
              VerificationTest[
               Information["IsHeld", LongForm -> False], 
               
               InformationData[<|
                "ObjectType" -> "Symbol", "Usage" -> 
                 "IsHeld[input] returns True if the input is a held \
expression, and False otherwise. A held expression is an expression that is \
held by Hold or HoldForm.", "Documentation" -> None, "OwnValues" -> None, 
                 "UpValues" -> None, "DownValues" -> 
                 Information`InformationValueForm[
                  DownValues, ResourceObjectTest`IsHeld, {
                   ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
                 "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
                 None, "Options" -> None, "Attributes" -> {HoldAll}, 
                 "FullName" -> "Global`IsHeld"|>, False], {}, TestID -> 
               "EnsureHeld-0002"], 
              VerificationTest[
               Information["UnevaluatedHead", LongForm -> False], 
               
               InformationData[<|
                "ObjectType" -> "Symbol", "Usage" -> 
                 "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
                 "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
                 None, "DownValues" -> 
                 Information`InformationValueForm[
                  DownValues, 
                   PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, \
{PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
                 None, "DefaultValues" -> None, "NValues" -> None, 
                 "FormatValues" -> None, "Options" -> None, 
                 "Attributes" -> {HoldAll}, "FullName" -> 
                 "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>\
, False], {}, TestID -> "EnsureHeld-0003"]]|>]],
         Selectable->False], "[", "input", "]"}], "]"}]}], ",", 
     RowBox[{"Sum", "|", "Integrate", "|", "Product"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8963663977902927`*^9, 3.8963664101371603`*^9}, {
   3.896366441111163*^9, 3.8963665850204477`*^9}, 3.896366687734818*^9, 
   3.8963667329199343`*^9, {3.896366990830643*^9, 3.896367001259048*^9}, {
   3.8963671017430997`*^9, 3.896367102162212*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"0b43dfb0-6367-48f3-a45f-52fef8516095"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReleaseHold", "@", 
  RowBox[{
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Integrate", "->", 
       RowBox[{"Inactive", "[", "Integrate", "]"}]}], ",", 
      RowBox[{"Product", "->", 
       RowBox[{"Inactive", "[", "Product", "]"}]}], ",", 
      RowBox[{"Sum", "->", 
       RowBox[{"Inactive", "[", "Sum", "]"}]}]}], "}"}], "]"}], "@", 
   RowBox[{"MakeFunctionsExact", "@", 
    RowBox[{"RemoveNumericalFunctionOptions", "[", 
     RowBox[{
      InterpretationBox[
       TagBox[
        FrameBox[
         PaneBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                BoxBaselineShift->-0.25,
                BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
               FontColor->GrayLevel[0.45]],
              ShowStringCharacters->False,
              FontFamily->"Source Sans Pro Black",
              FontSize->0.65 Inherited,
              FontWeight->"Heavy",
              PrivateFontOptions->{"OperatorSubstitution"->False}], 
             StyleBox[
              RowBox[{
               StyleBox["\<\"EnsureHeld\"\>", "ResourceFunctionLabel"], " "}],
              ShowAutoStyles->False,
              ShowStringCharacters->False,
              FontSize->0.9 Inherited,
              FontColor->GrayLevel[0.1]]}
           },
           GridBoxSpacings->{"Columns" -> {{0.25}}}],
          Alignment->Left,
          BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
          BaselinePosition->Baseline,
          FrameMargins->{{3, 0}, {0, 0}}],
         Background->RGBColor[0.968627, 0.976471, 0.984314],
         BaselinePosition->Baseline,
         DefaultBaseStyle->{},
         FrameMargins->{{0, 0}, {1, 1}},
         FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
         RoundingRadius->4],
        {"FunctionResourceBox", 
         GrayLevel[0.45], "\"EnsureHeld\""},
        TagBoxNote->"FunctionResourceBox"],
       ResourceFunction[
        ResourceObject[<|
         "Name" -> "EnsureHeld", "UUID" -> 
          "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
          "Function", "Description" -> 
          "Checks an expression and holds it if it is not already held", 
          "ResourceLocations" -> {
            CloudObject[
            "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
          "Keywords" -> {
           "Evaluation Control", "Symbolic Computation", "Hold Expression", 
            "Expression Manipulation"}, 
          "Categories" -> {
           "Core Language & Structure", "Higher Mathematical Computation", 
            "Programming Utilities", "Symbolic & Numeric Computation"}, 
          "Compatibility" -> <|
           "WolframLanguageVersionRequired" -> "13.0+", 
            "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
            "Features" -> {}, 
            "EvaluationEnvironment" -> {
             "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
              "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
          "ContributorInformation" -> <|
           "ContributedBy" -> "Peter Cullen Burbery"|>, "DefinitionNotebook" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
          "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                 RowBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                   StyleBox["input", "TI"], "]"}]], "Description" -> 
               TextData[{"checks whether the ", 
                  Cell[
                   BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                   "Source Sans Pro"], 
                  " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
          URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld"], "ExampleNotebook" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
          Automatic, "FunctionLocation" -> 
          CloudObject[
           "https://www.wolframcloud.com/obj/burbery1/Resources/454/454e9185-\
e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
          "PageHeaderClickToCopy" -> 
          "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
          "RelatedSymbols" -> {
           "Hold", "HoldForm", "HoldComplete", "HoldPattern", "Unevaluated"}, 
          "SeeAlso" -> {
           "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
            "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
          "SymbolName" -> 
          "FunctionRepository`$454e9185e7414b758ded6c381c3187db`EnsureHeld", 
          "VerificationTests" -> HoldComplete[
            VerificationTest[
             Information["EnsureHeld", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
               "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
               Information`InformationValueForm[DownValues, 
                 ResourceFunction["EnsureHeld"], {
                 ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                  Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
               "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
               None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
               "Global`EnsureHeld"|>, False], {}, TestID -> 
             "EnsureHeld-0001"], 
            VerificationTest[
             Information["IsHeld", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "IsHeld[input] returns True if the input is a held expression, \
and False otherwise. A held expression is an expression that is held by Hold \
or HoldForm.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
               None, "DownValues" -> 
               Information`InformationValueForm[
                DownValues, ResourceObjectTest`IsHeld, {
                 ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
               "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
               None, "Options" -> None, "Attributes" -> {HoldAll}, "FullName" -> 
               "Global`IsHeld"|>, False], {}, TestID -> "EnsureHeld-0002"], 
            VerificationTest[
             Information["UnevaluatedHead", LongForm -> False], 
             
             InformationData[<|
              "ObjectType" -> "Symbol", "Usage" -> 
               "UnevaluatedHead[input] gives the head of the input without \
evaluating the input. This is useful when you need to inspect the structure \
of an expression without causing side effects due to evaluation.", 
               "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
               None, "DownValues" -> 
               Information`InformationValueForm[
                DownValues, 
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead, {
                 PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
               None, "DefaultValues" -> None, "NValues" -> None, 
               "FormatValues" -> None, "Options" -> None, 
               "Attributes" -> {HoldAll}, "FullName" -> 
               "PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead"|>, 
              False], {}, TestID -> "EnsureHeld-0003"]]|>]],
       Selectable->False], "[", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{"f", " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "/", "f"}], " ", 
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "j"}], "/", "2"}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], 
                "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "-", 
                  RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   RowBox[{"j", "/", "2"}]}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"d", " ", "z", " ", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], 
          "/", 
          RowBox[{"QPhI", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}],
                " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"j", "/", "2"}], ")"}]}], "-", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
               RowBox[{"\[Rho]", "/", "g"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "+", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"a", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"q", "^", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"a", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "/", "2"}], "-", 
                    RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"q", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], "+", 
                    RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"a", "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}], ",", 
              RowBox[{
               RowBox[{"q", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"j", "/", "2"}], "+", 
                  RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", "^", 
                    RowBox[{"(", 
                    RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
               RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Zeta]", ",", 
           RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}], "*", 
       RowBox[{"NSum", "[", 
        RowBox[{
         FractionBox["1", "k"], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}], 
       RowBox[{"NProduct", "[", 
        RowBox[{"2.3", ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.896366741706809*^9, 3.896366758234898*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"83477624-ca0e-4836-a15c-dce96f3181c9"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{
    FractionBox[
     RowBox[{"QPhI", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             FractionBox[
              RowBox[{"f", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
              RowBox[{"f", " ", "g"}]], ",", 
             FractionBox[
              RowBox[{"f", " ", "g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]]}], "\[Rho]"], 
             ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]]}], 
              RowBox[{"f", " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SqrtBox["a"], " ", "b", " ", "c", " ", "z"}], "d"]]}], 
              "\[Rho]"], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox[
                    RowBox[{"3", " ", "j"}], "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "d", " ", "z"}], 
                  RowBox[{"b", " ", "c"}]]]}], "\[Rho]"]}], "}"}], ",", "q"}],
        "]"}], 
     RowBox[{"QPhI", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["3", "4"]}], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             RowBox[{"-", 
               FractionBox[
                RowBox[{"g", " ", 
                  SuperscriptBox["q", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                    FractionBox["j", "2"]}]], " ", 
                  SqrtBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                RowBox[{
                  SuperscriptBox["a", 
                   RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
             RowBox[{"-", 
               FractionBox[
                RowBox[{"g", " ", 
                  SuperscriptBox["q", 
                   RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                  SqrtBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                RowBox[{
                  SuperscriptBox["a", 
                   RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                  RowBox[{"b", " ", "c", " ", "d"}]]]}], "\[Rho]"]}], "}"}], 
         ",", "q"}], "]"}]], "\[Zeta]", 
    RowBox[{"-", "\[Pi]"}], "\[Pi]"},
   "InactiveIntegrate",
   DisplayFunction->(RowBox[{
      SubsuperscriptBox[
       StyleBox["\[Integral]", "Inactive"], #3, #4], 
      RowBox[{#, 
        RowBox[{
          StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], " ", 
  RowBox[{"(", 
   TemplateBox[{"2.3`", "k", "1", "100"},
    "InactiveProduct",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Product]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Product", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], ")"}], " ", 
  TemplateBox[{
    FractionBox["1", "k"], "k", "1", "100"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.8963667424808493`*^9, 3.8963667584919357`*^9}, 
   3.896366947659439*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"8f6e9c98-62ff-4d62-b2f8-7c9e96a80abb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InactivateIntegralProductSum", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"f", " ", 
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"j", "/", "2"}], "+", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
           " ", 
           RowBox[{"\[Rho]", "/", "g"}]}], ",", 
          RowBox[{
           RowBox[{"q", "/", "f"}], " ", 
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "j"}], "/", "2"}], "-", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
           RowBox[{"\[Rho]", "/", "g"}]}], ",", 
          RowBox[{"f", " ", 
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"j", "/", "2"}], "+", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
           " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{"q", "/", "f"}], " ", 
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "j"}], "/", "2"}], "-", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"j", "/", "2"}], "+", 
              RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "z", " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "/", "d"}], "]"}],
            " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"j", "/", "2"}], "-", 
              RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"3", "/", "2"}], ")"}]}], "/", 
            RowBox[{"a", "^", 
             RowBox[{"(", 
              RowBox[{"5", "/", "4"}], ")"}]}]}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", 
               RowBox[{"j", "/", "2"}]}], "+", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"d", " ", "z", " ", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c"}], ")"}]}], "]"}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}], "/", 
      RowBox[{"QPhI", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"j", "/", "2"}], "+", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}]}], "]"}], 
           " ", 
           RowBox[{"\[Rho]", "/", "g"}]}], ",", 
          RowBox[{
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"j", "/", "2"}], ")"}]}], "-", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], "/", 
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}], " ", 
           RowBox[{"\[Rho]", "/", "g"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "+", 
                 RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
            "/", 
            RowBox[{"a", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}]}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"q", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"j", "/", "2"}], "-", 
                 RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
            "/", 
            RowBox[{"(", 
             RowBox[{"a", "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"j", "/", "2"}], "-", 
                   RowBox[{"1", "/", "4"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
              "/", 
              RowBox[{"(", 
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"1", "/", "4"}], ")"}]}], ")"}]}], ")"}]}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"q", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "/", "4"}], "+", 
                   RowBox[{"j", "/", "2"}]}], ")"}]}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}], "]"}]}], ")"}], 
              "/", 
              RowBox[{"a", "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}], ",", 
          RowBox[{
           RowBox[{"q", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"j", "/", "2"}], "+", 
              RowBox[{"3", "/", "4"}]}], ")"}]}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a", "^", 
                RowBox[{"(", 
                 RowBox[{"3", "/", "2"}], ")"}]}], " ", "z"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"b", " ", "c", " ", "d"}], ")"}]}], "]"}], " ", 
           RowBox[{"g", "/", "\[Rho]"}]}]}], "}"}], ",", "q"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Zeta]", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "->", "20"}]}], "]"}], "*", 
   RowBox[{"NSum", "[", 
    RowBox[{
     FractionBox["1", "k"], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}], 
   RowBox[{"NProduct", "[", 
    RowBox[{"2.3", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "100"}], "}"}], ",", 
     RowBox[{"WorkingPrecision", "->", "100"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8963664114937973`*^9, 3.8963664189443293`*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"8f6f7e55-78d1-4b2c-8aa2-512ea7ee39cc"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{
    FractionBox[
     RowBox[{"QPhI", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             FractionBox[
              RowBox[{"f", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], 
              RowBox[{"f", " ", "g"}]], ",", 
             FractionBox[
              RowBox[{"f", " ", "g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]]}], "\[Rho]"], 
             ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]]}], 
              RowBox[{"f", " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SqrtBox["a"], " ", "b", " ", "c", " ", "z"}], "d"]]}], 
              "\[Rho]"], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}], ")"}], 
                 RowBox[{"3", "/", "2"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"5", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox[
                    RowBox[{"3", " ", "j"}], "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "d", " ", "z"}], 
                  RowBox[{"b", " ", "c"}]]]}], "\[Rho]"]}], "}"}], ",", "q"}],
        "]"}], 
     RowBox[{"QPhI", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]], 
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]], " ", 
                "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["3", "4"]}], "-", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"b", " ", "c", " ", "d", " ", "z"}], 
                  SuperscriptBox["a", 
                   RowBox[{"3", "/", "2"}]]]], " ", "\[Rho]"}], "g"], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["1", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
              RowBox[{
                SuperscriptBox["a", 
                 RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]], ",", 
             RowBox[{"-", 
               FractionBox[
                RowBox[{"g", " ", 
                  SuperscriptBox["q", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", 
                    FractionBox["j", "2"]}]], " ", 
                  SqrtBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                RowBox[{
                  SuperscriptBox["a", 
                   RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
             RowBox[{"-", 
               FractionBox[
                RowBox[{"g", " ", 
                  SuperscriptBox["q", 
                   RowBox[{
                    FractionBox["1", "4"], "+", 
                    FractionBox["j", "2"]}]], " ", 
                  SqrtBox[
                   RowBox[{"b", " ", "c", " ", "d", " ", "z"}]]}], 
                RowBox[{
                  SuperscriptBox["a", 
                   RowBox[{"1", "/", "4"}]], " ", "\[Rho]"}]]}], ",", 
             FractionBox[
              RowBox[{"g", " ", 
                SuperscriptBox["q", 
                 RowBox[{
                   FractionBox["3", "4"], "+", 
                   FractionBox["j", "2"]}]], " ", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                    SuperscriptBox["a", 
                    RowBox[{"3", "/", "2"}]], " ", "z"}], 
                  RowBox[{"b", " ", "c", " ", "d"}]]]}], "\[Rho]"]}], "}"}], 
         ",", "q"}], "]"}]], "\[Zeta]", 
    RowBox[{"-", "\[Pi]"}], "\[Pi]"},
   "InactiveIntegrate",
   DisplayFunction->(RowBox[{
      SubsuperscriptBox[
       StyleBox["\[Integral]", "Inactive"], #3, #4], 
      RowBox[{#, 
        RowBox[{
          StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], " ", 
  RowBox[{"(", 
   TemplateBox[{"2.3`", "k", "1", "100"},
    "InactiveProduct",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Product]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Product", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], ")"}], " ", 
  TemplateBox[{
    FractionBox["1", "k"], "k", "1", "100"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.896366421841133*^9, 3.8963664788457513`*^9}, {
   3.8963665323867135`*^9, 3.8963665555347233`*^9}, 3.8963665869464846`*^9, 
   3.8963666927238483`*^9, 3.8963667699604397`*^9, 3.896366888119705*^9, 
   3.8963669547473674`*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"6ea26c0e-ab7b-49c5-b16d-483182ca048c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MakeFunctionsExact"}]], "Input",
 CellChangeTimes->{{3.896366904413981*^9, 3.8963669113666325`*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"f2f46029-816d-4524-bb59-3beaba923887"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MakeFunctionsExact[input] takes an expression as \
input and replaces all instances of numerical functions NIntegrate, NSum, and \
NProduct with their exact counterparts Integrate, Sum, and Product, \
respectively. It returns the transformed expression.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"MakeFunctionsExact", "[", "input_", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{"f_", ",", 
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}]}], 
                    "]"}], "\[RuleDelayed]", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "xmin", "xmax"], 
                    RowBox[{"f", 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], ",", 
                    RowBox[{
                    RowBox[{"NSum", "[", 
                    RowBox[{"f_", ",", 
                    RowBox[{"{", 
                    RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}]}], 
                    "]"}], "\[RuleDelayed]", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"i", "=", "imin"}], "imax"], "f"}]}], ",", 
                    RowBox[{
                    RowBox[{"NProduct", "[", 
                    RowBox[{"f_", ",", 
                    RowBox[{"{", 
                    RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}]}], 
                    "]"}], "\[RuleDelayed]", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    RowBox[{"i", "=", "imin"}], "imax"], "f"}]}]}], "}"}], 
                    "]"}], "[", "input", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`MakeFunctionsExact\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MakeFunctionsExact[input] takes an expression as \
input and replaces all instances of numerical functions NIntegrate, NSum, and \
NProduct with their exact counterparts Integrate, Sum, and Product, \
respectively. It returns the transformed expression.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "MakeFunctionsExact[input] takes an expression as input and replaces all \
instances of numerical functions NIntegrate, NSum, and NProduct with their \
exact counterparts Integrate, Sum, and Product, respectively. It returns the \
transformed expression.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`MakeFunctionsExact, \
{$CellContext`MakeFunctionsExact[
         Pattern[$CellContext`input, 
          Blank[]]] :> ReplaceAll[{NIntegrate[
            Pattern[$CellContext`f, 
             Blank[]], {
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`xmin, 
              Blank[]], 
             Pattern[$CellContext`xmax, 
              Blank[]]}] :> 
          Integrate[$CellContext`f, {$CellContext`x, $CellContext`xmin, \
$CellContext`xmax}], NSum[
            Pattern[$CellContext`f, 
             Blank[]], {
             Pattern[$CellContext`i, 
              Blank[]], 
             Pattern[$CellContext`imin, 
              Blank[]], 
             Pattern[$CellContext`imax, 
              Blank[]]}] :> 
          Sum[$CellContext`f, {$CellContext`i, $CellContext`imin, \
$CellContext`imax}], NProduct[
            Pattern[$CellContext`f, 
             Blank[]], {
             Pattern[$CellContext`i, 
              Blank[]], 
             Pattern[$CellContext`imin, 
              Blank[]], 
             Pattern[$CellContext`imax, 
              Blank[]]}] :> 
          Product[$CellContext`f, {$CellContext`i, $CellContext`imin, \
$CellContext`imax}]}][$CellContext`input]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`MakeFunctionsExact"|>, False]]], "Output",
 CellChangeTimes->{3.8963669118986*^9},
 CellLabel->
  "Out[362]=",ExpressionUUID->"c7e3fb48-78c7-4a80-9193-67c77bef0753"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "MakeFunctionsExact", "]"}]], "Input",
 CellChangeTimes->{{3.896367688471611*^9, 3.8963676975490594`*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"03790b3b-eb67-4019-b8a6-fb52e140e9ad"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"MakeFunctionsExact", "[", "input_", "]"}], ":=", 
         RowBox[{
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"NIntegrate", "[", 
               RowBox[{"f_", ",", 
                RowBox[{"{", 
                 RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}]}], "]"}], 
              "\[RuleDelayed]", 
              RowBox[{
               SubsuperscriptBox["\[Integral]", "xmin", "xmax"], 
               RowBox[{"f", 
                RowBox[{"\[DifferentialD]", "x"}]}]}]}], ",", 
             RowBox[{
              RowBox[{"NSum", "[", 
               RowBox[{"f_", ",", 
                RowBox[{"{", 
                 RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}]}], "]"}], 
              "\[RuleDelayed]", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"i", "=", "imin"}], "imax"], "f"}]}], ",", 
             RowBox[{
              RowBox[{"NProduct", "[", 
               RowBox[{"f_", ",", 
                RowBox[{"{", 
                 RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}]}], "]"}], 
              "\[RuleDelayed]", 
              RowBox[{
               UnderoverscriptBox["\[Product]", 
                RowBox[{"i", "=", "imin"}], "imax"], "f"}]}]}], "}"}], "]"}], 
          "[", "input", "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "Rows" -> {{1.}}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  Definition[$CellContext`MakeFunctionsExact],
  Editable->False]], "Output",
 CellChangeTimes->{3.896367698065179*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"8298a85b-716b-44fc-b0b6-ffab19431a33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RemoveNumericalFunctionOptions"}]], "Input",
 CellChangeTimes->{{3.8963669615311155`*^9, 3.8963669647635713`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"10b6fa08-e2eb-4c25-9bdf-57f21bde0c4d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"RemoveNumericalFunctionOptions[input] takes an \
expression as input and removes any options specified within instances of \
NIntegrate, NSum, or NProduct, returning a new expression with these \
functions stripped of their options.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "RemoveNumericalFunctionOptions", "[", "input_", "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{"f_", ",", 
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}], ",", 
                    "___"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{"f", ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}]}], "]"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"NSum", "[", 
                    RowBox[{"f_", ",", 
                    RowBox[{"{", 
                    RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}], ",", 
                    "___"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"NSum", "[", 
                    RowBox[{"f", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], "]"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"NProduct", "[", 
                    RowBox[{"f_", ",", 
                    RowBox[{"{", 
                    RowBox[{"i_", ",", "imin_", ",", "imax_"}], "}"}], ",", 
                    "___"}], "]"}], "\[RuleDelayed]", 
                    RowBox[{"NProduct", "[", 
                    RowBox[{"f", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "imin", ",", "imax"}], "}"}]}], 
                    "]"}]}]}], "}"}], "]"}], "[", "input", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`RemoveNumericalFunctionOptions\
\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"RemoveNumericalFunctionOptions[input] takes an \
expression as input and removes any options specified within instances of \
NIntegrate, NSum, or NProduct, returning a new expression with these \
functions stripped of their options.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "RemoveNumericalFunctionOptions[input] takes an expression as input and \
removes any options specified within instances of NIntegrate, NSum, or \
NProduct, returning a new expression with these functions stripped of their \
options.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`RemoveNumericalFunctionOptions, \
{$CellContext`RemoveNumericalFunctionOptions[
         Pattern[$CellContext`input, 
          Blank[]]] :> ReplaceAll[{NIntegrate[
            Pattern[$CellContext`f, 
             Blank[]], {
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`xmin, 
              Blank[]], 
             Pattern[$CellContext`xmax, 
              Blank[]]}, 
            BlankNullSequence[]] :> 
          NIntegrate[$CellContext`f, {$CellContext`x, $CellContext`xmin, \
$CellContext`xmax}], NSum[
            Pattern[$CellContext`f, 
             Blank[]], {
             Pattern[$CellContext`i, 
              Blank[]], 
             Pattern[$CellContext`imin, 
              Blank[]], 
             Pattern[$CellContext`imax, 
              Blank[]]}, 
            BlankNullSequence[]] :> 
          NSum[$CellContext`f, {$CellContext`i, $CellContext`imin, \
$CellContext`imax}], NProduct[
            Pattern[$CellContext`f, 
             Blank[]], {
             Pattern[$CellContext`i, 
              Blank[]], 
             Pattern[$CellContext`imin, 
              Blank[]], 
             Pattern[$CellContext`imax, 
              Blank[]]}, 
            BlankNullSequence[]] :> 
          NProduct[$CellContext`f, {$CellContext`i, $CellContext`imin, \
$CellContext`imax}]}][$CellContext`input]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`RemoveNumericalFunctionOptions"|>, False]]], "Output",
 CellChangeTimes->{3.8963669654093184`*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"2da8dc2c-8141-44e1-95de-a02a8c7d3cb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InactivateIntegralProductSum"}]], "Input",
 CellChangeTimes->{{3.8963669615311155`*^9, 3.8963669671335382`*^9}, {
  3.8963671092444124`*^9, 3.896367112811617*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"dadba224-2e9d-44f5-a892-92a8b0b8c088"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InactivateIntegralProductSum[input] takes an \
expression as input, ensures it is held to prevent evaluation, removes any \
options from numerical functions, converts numerical functions to their exact \
counterparts, and then inactivates all instances of Integrate, Sum, and \
Product. It returns the transformed, inactive expression.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "InactivateIntegralProductSum", "[", "input_", "]"}], 
                    ":=", 
                    RowBox[{"ReleaseHold", "[", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Integrate", "\[Rule]", 
                    RowBox[{"Inactive", "[", "Integrate", "]"}]}], ",", 
                    RowBox[{"Product", "\[Rule]", 
                    RowBox[{"Inactive", "[", "Product", "]"}]}], ",", 
                    RowBox[{"Sum", "\[Rule]", 
                    RowBox[{"Inactive", "[", "Sum", "]"}]}]}], "}"}], "]"}], 
                    "[", 
                    RowBox[{"MakeFunctionsExact", "[", 
                    RowBox[{"RemoveNumericalFunctionOptions", "[", 
                    RowBox[{
                    InterpretationBox[
                    TagBox[
                    FrameBox[
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    AdjustmentBox[
                    "\"[\[FilledSmallSquare]]\"", BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                     FontColor -> GrayLevel[0.45]], ShowStringCharacters -> 
                    False, FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.65 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionLabel"], 
                    " "}], ShowAutoStyles -> False, ShowStringCharacters -> 
                    False, FontSize -> 0.9 Inherited, FontColor -> 
                    GrayLevel[0.1]]}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], Background -> 
                    RGBColor[0.968627, 0.976471, 0.984314], BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, 
                    FrameMargins -> {{0, 0}, {1, 1}}, FrameStyle -> 
                    RGBColor[0.831373, 0.847059, 0.85098], RoundingRadius -> 
                    4], {"FunctionResourceBox", 
                    GrayLevel[0.45], "\"EnsureHeld\""}, TagBoxNote -> 
                    "FunctionResourceBox"], 
                    ResourceFunction[
                    
                    ResourceObject[<|
                    "Name" -> "EnsureHeld", "UUID" -> 
                    "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Checks an expression and holds it if it is not already \
held", "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
                    "Keywords" -> {"Evaluation Control", 
                    "Symbolic Computation", "Hold Expression", 
                    "Expression Manipulation"}, 
                    "Categories" -> {
                    "Core Language & Structure", 
                    "Higher Mathematical Computation", 
                    "Programming Utilities", 
                    "Symbolic & Numeric Computation"}, 
                    "Compatibility" -> <|
                    "WolframLanguageVersionRequired" -> "13.0+", 
                    "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
                    "Features" -> {}, 
                    "EvaluationEnvironment" -> {
                    "Session", "WebEvaluation", "BatchJob", "Script", 
                    "WebAPI", "Subkernel", "Scheduled"}, "CloudSupport" -> 
                    True|>, "ContributorInformation" -> <|
                    "ContributedBy" -> "Peter Cullen Burbery"|>, 
                    "DefinitionNotebook" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
                    "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                    StyleBox["input", "TI"], "]"}]], "Description" -> 
                    TextData[{"checks whether the ", 
                    Cell[
                    BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], 
                    " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
                    URL["https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld"], "ExampleNotebook" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], 
                    "ExampleNotebookData" -> Automatic, "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
                    "PageHeaderClickToCopy" -> 
                    "ResourceObject[CloudObject[\"https://www.wolframcloud.\
com/obj/burbery1/DeployedResources/Function/EnsureHeld\"]]", 
                    "RelatedSymbols" -> {
                    "Hold", "HoldForm", "HoldComplete", "HoldPattern", 
                    "Unevaluated"}, 
                    "SeeAlso" -> {"HoldArguments", "MapAtEvaluate", 
                    "ReplaceAllUnheld", "UnevaluatedAssociation"}, 
                    "ShortName" -> "EnsureHeld", "SymbolName" -> 
                    "FunctionRepository`$454e9185e7414b758ded6c381c3187db`\
EnsureHeld", "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    Information["EnsureHeld", LongForm -> False], 
                    
                    InformationData[<|"ObjectType" -> "Symbol", "Usage" -> 
                    "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
                    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[DownValues, 
                    ResourceFunction["EnsureHeld"], {
                    ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                    Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`EnsureHeld"|>, False], {}, TestID -> 
                    "EnsureHeld-0001"], 
                    VerificationTest[
                    Information["IsHeld", LongForm -> False], 
                    
                    InformationData[<|"ObjectType" -> "Symbol", "Usage" -> 
                    "IsHeld[input] returns True if the input is a held \
expression, and False otherwise. A held expression is an expression that is \
held by Hold or HoldForm.", "Documentation" -> None, "OwnValues" -> None, 
                    "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[
                    DownValues, ResourceObjectTest`IsHeld, {
                    ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`IsHeld"|>, False], {}, TestID -> 
                    "EnsureHeld-0002"], 
                    VerificationTest[
                    Information["UnevaluatedHead", LongForm -> False], 
                    
                    InformationData[<|"ObjectType" -> "Symbol", "Usage" -> 
                    "UnevaluatedHead[input] gives the head of the input \
without evaluating the input. This is useful when you need to inspect the \
structure of an expression without causing side effects due to evaluation.", 
                    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
                    None, "DownValues" -> Information`InformationValueForm[
                    DownValues, 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead,\
 {PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
                    None, "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "PeterBurbery`BasicHypergeometricFunctions`\
UnevaluatedHead"|>, False], {}, TestID -> "EnsureHeld-0003"]]|>]], Selectable -> 
                    False], "[", "input", "]"}], "]"}], "]"}], "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldAll", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`InactivateIntegralProductSum\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InactivateIntegralProductSum[input] takes an \
expression as input, ensures it is held to prevent evaluation, removes any \
options from numerical functions, converts numerical functions to their exact \
counterparts, and then inactivates all instances of Integrate, Sum, and \
Product. It returns the transformed, inactive expression.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "InactivateIntegralProductSum[input] takes an expression as input, \
ensures it is held to prevent evaluation, removes any options from numerical \
functions, converts numerical functions to their exact counterparts, and then \
inactivates all instances of Integrate, Sum, and Product. It returns the \
transformed, inactive expression.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`InactivateIntegralProductSum, \
{$CellContext`InactivateIntegralProductSum[
         Pattern[$CellContext`input, 
          Blank[]]] :> ReleaseHold[
         ReplaceAll[{
          Integrate -> Inactive[Integrate], Product -> Inactive[Product], Sum -> 
           Inactive[Sum]}][
          $CellContext`MakeFunctionsExact[
           $CellContext`RemoveNumericalFunctionOptions[
            ResourceFunction[
             
             ResourceObject[<|
              "Name" -> "EnsureHeld", "UUID" -> 
               "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
               "Function", "Description" -> 
               "Checks an expression and holds it if it is not already held", 
               "ResourceLocations" -> {
                 CloudObject[
                 "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
               "Keywords" -> {
                "Evaluation Control", "Symbolic Computation", 
                 "Hold Expression", "Expression Manipulation"}, 
               "Categories" -> {
                "Core Language & Structure", 
                 "Higher Mathematical Computation", "Programming Utilities", 
                 "Symbolic & Numeric Computation"}, 
               "Compatibility" -> <|
                "WolframLanguageVersionRequired" -> "13.0+", 
                 "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
                 "Features" -> {}, 
                 "EvaluationEnvironment" -> {
                  "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
                   "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
               "ContributorInformation" -> <|
                "ContributedBy" -> "Peter Cullen Burbery"|>, 
               "DefinitionNotebook" -> 
               CloudObject[
                "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
               "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                    StyleBox["input", "TI"], "]"}]], "Description" -> 
                    TextData[{"checks whether the ", 
                    Cell[
                    BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], 
                    " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
               URL["https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld"], "ExampleNotebook" -> 
               CloudObject[
                "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
               Automatic, "FunctionLocation" -> 
               CloudObject[
                "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
               "PageHeaderClickToCopy" -> 
               "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
               "RelatedSymbols" -> {
                "Hold", "HoldForm", "HoldComplete", "HoldPattern", 
                 "Unevaluated"}, 
               "SeeAlso" -> {
                "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
                 "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
               "SymbolName" -> 
               "FunctionRepository`$454e9185e7414b758ded6c381c3187db`\
EnsureHeld", "VerificationTests" -> HoldComplete[
                 VerificationTest[
                  Information["EnsureHeld", LongForm -> False], 
                  
                  InformationData[<|
                   "ObjectType" -> "Symbol", "Usage" -> 
                    "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
                    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[DownValues, 
                    ResourceFunction["EnsureHeld"], {
                    ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                    Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`EnsureHeld"|>, False], {}, TestID -> 
                  "EnsureHeld-0001"], 
                 VerificationTest[
                  Information["IsHeld", LongForm -> False], 
                  
                  InformationData[<|
                   "ObjectType" -> "Symbol", "Usage" -> 
                    "IsHeld[input] returns True if the input is a held \
expression, and False otherwise. A held expression is an expression that is \
held by Hold or HoldForm.", "Documentation" -> None, "OwnValues" -> None, 
                    "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[
                    DownValues, ResourceObjectTest`IsHeld, {
                    ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`IsHeld"|>, False], {}, TestID -> 
                  "EnsureHeld-0002"], 
                 VerificationTest[
                  Information["UnevaluatedHead", LongForm -> False], 
                  
                  InformationData[<|
                   "ObjectType" -> "Symbol", "Usage" -> 
                    "UnevaluatedHead[input] gives the head of the input \
without evaluating the input. This is useful when you need to inspect the \
structure of an expression without causing side effects due to evaluation.", 
                    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
                    None, "DownValues" -> 
                    Information`InformationValueForm[
                    DownValues, 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead,\
 {PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
                    None, "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "PeterBurbery`BasicHypergeometricFunctions`\
UnevaluatedHead"|>, False], {}, TestID -> 
                  "EnsureHeld-0003"]]|>]][$CellContext`input]]]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {HoldAll}, 
    "FullName" -> "Global`InactivateIntegralProductSum"|>, False]]], "Output",
 CellChangeTimes->{3.896367113257978*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"b1f9040e-3e17-4517-a261-40a2aa1861aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Get", "/@", 
       RowBox[{"FileNames", "[", 
        RowBox[{
        "\"\<*.wl\>\"", ",", 
         "\"\<C:\\\\Users\\\\Peter\\\\OneDrive - Marshall \
University\\\\GitHub\\\\basic-hypergeometric-functions-paclet\\\\basic-\
hypergeometric-functions\\\\Kernel\>\""}], "]"}]}], ";"}], ",", 
     RowBox[{"Get", "::", "noopen"}]}], "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.896368470096614*^9, 3.8963684700986137`*^9}},
 CellLabel->
  "In[470]:=",ExpressionUUID->"269bf142-5aee-4b7e-9667-653735f65a03"],

Cell[BoxData[
 RowBox[{"Remove", "[", "Global`EnsureHeld", "]"}]], "Input",
 CellChangeTimes->{{3.8963684937577047`*^9, 3.8963684982594767`*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"b2475e5a-f0e2-4cba-a733-1369cb716652"],

Cell[BoxData[
 RowBox[{"Remove", "[", "Global`IsHeld", "]"}]], "Input",
 CellChangeTimes->{{3.8963684937577047`*^9, 3.8963685026184626`*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"92518287-7231-4ecc-a5bd-7cf9a7e069fa"],

Cell[BoxData[
 RowBox[{"Remove", "[", "Global`MakeFunctionsExact", "]"}]], "Input",
 CellChangeTimes->{{3.8963684937577047`*^9, 3.8963685058591185`*^9}},
 CellLabel->
  "In[468]:=",ExpressionUUID->"f0e777f7-f4b5-49a8-8a44-fda0108258f2"],

Cell[BoxData[
 RowBox[{"Remove", "[", "Global`RemoveWorkingPrecision", "]"}]], "Input",
 CellChangeTimes->{{3.8963684937577047`*^9, 3.8963685106944866`*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"d3b600a3-a912-4109-bde0-d999f88fbd7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InactivateIntegralProductSum"}]], "Input",
 CellChangeTimes->{{3.896368575388379*^9, 3.896368578476411*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"6fe9c0e8-4069-4d2d-aa9e-88fa005b5c77"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InactivateIntegralProductSum[input] takes an \
expression as input, ensures it is held to prevent evaluation, removes any \
options from numerical functions, converts numerical functions to their exact \
counterparts, and then inactivates all instances of Integrate, Sum, and \
Product. It returns the transformed, inactive expression.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "InactivateIntegralProductSum", "[", "input_", "]"}], 
                    ":=", 
                    RowBox[{"ReleaseHold", "[", 
                    RowBox[{
                    RowBox[{"ReplaceAll", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Integrate", "\[Rule]", 
                    RowBox[{"Inactive", "[", "Integrate", "]"}]}], ",", 
                    RowBox[{"Product", "\[Rule]", 
                    RowBox[{"Inactive", "[", "Product", "]"}]}], ",", 
                    RowBox[{"Sum", "\[Rule]", 
                    RowBox[{"Inactive", "[", "Sum", "]"}]}]}], "}"}], "]"}], 
                    "[", 
                    RowBox[{
                    TagBox[
                    RowBox[{"Removed", "[", "\"MakeFunctionsExact\"", "]"}], 
                    False, Editable -> False], "[", 
                    RowBox[{"RemoveNumericalFunctionOptions", "[", 
                    RowBox[{
                    InterpretationBox[
                    TagBox[
                    FrameBox[
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    AdjustmentBox[
                    "\"[\[FilledSmallSquare]]\"", BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                     FontColor -> GrayLevel[0.45]], ShowStringCharacters -> 
                    False, FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.65 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionLabel"], 
                    " "}], ShowAutoStyles -> False, ShowStringCharacters -> 
                    False, FontSize -> 0.9 Inherited, FontColor -> 
                    GrayLevel[0.1]]}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], Background -> 
                    RGBColor[0.968627, 0.976471, 0.984314], BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, 
                    FrameMargins -> {{0, 0}, {1, 1}}, FrameStyle -> 
                    RGBColor[0.831373, 0.847059, 0.85098], RoundingRadius -> 
                    4], {"FunctionResourceBox", 
                    GrayLevel[0.45], "\"EnsureHeld\""}, TagBoxNote -> 
                    "FunctionResourceBox"], 
                    ResourceFunction[
                    
                    ResourceObject[<|
                    "Name" -> "EnsureHeld", "UUID" -> 
                    "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
                    "Function", "Description" -> 
                    "Checks an expression and holds it if it is not already \
held", "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
                    "Keywords" -> {"Evaluation Control", 
                    "Symbolic Computation", "Hold Expression", 
                    "Expression Manipulation"}, 
                    "Categories" -> {
                    "Core Language & Structure", 
                    "Higher Mathematical Computation", 
                    "Programming Utilities", 
                    "Symbolic & Numeric Computation"}, 
                    "Compatibility" -> <|
                    "WolframLanguageVersionRequired" -> "13.0+", 
                    "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
                    "Features" -> {}, 
                    "EvaluationEnvironment" -> {
                    "Session", "WebEvaluation", "BatchJob", "Script", 
                    "WebAPI", "Subkernel", "Scheduled"}, "CloudSupport" -> 
                    True|>, "ContributorInformation" -> <|
                    "ContributedBy" -> "Peter Cullen Burbery"|>, 
                    "DefinitionNotebook" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
                    "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                    StyleBox["input", "TI"], "]"}]], "Description" -> 
                    TextData[{"checks whether the ", 
                    Cell[
                    BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], 
                    " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
                    URL["https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld"], "ExampleNotebook" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], 
                    "ExampleNotebookData" -> Automatic, "FunctionLocation" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
                    "PageHeaderClickToCopy" -> 
                    "ResourceObject[CloudObject[\"https://www.wolframcloud.\
com/obj/burbery1/DeployedResources/Function/EnsureHeld\"]]", 
                    "RelatedSymbols" -> {
                    "Hold", "HoldForm", "HoldComplete", "HoldPattern", 
                    "Unevaluated"}, 
                    "SeeAlso" -> {"HoldArguments", "MapAtEvaluate", 
                    "ReplaceAllUnheld", "UnevaluatedAssociation"}, 
                    "ShortName" -> "EnsureHeld", "SymbolName" -> 
                    "FunctionRepository`$454e9185e7414b758ded6c381c3187db`\
EnsureHeld", "VerificationTests" -> HoldComplete[
                    VerificationTest[
                    Information["EnsureHeld", LongForm -> False], 
                    
                    InformationData[<|"ObjectType" -> "Symbol", "Usage" -> 
                    "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
                    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[DownValues, 
                    ResourceFunction["EnsureHeld"], {
                    ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                    Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`EnsureHeld"|>, False], {}, TestID -> 
                    "EnsureHeld-0001"], 
                    VerificationTest[
                    Information["IsHeld", LongForm -> False], 
                    
                    InformationData[<|"ObjectType" -> "Symbol", "Usage" -> 
                    "IsHeld[input] returns True if the input is a held \
expression, and False otherwise. A held expression is an expression that is \
held by Hold or HoldForm.", "Documentation" -> None, "OwnValues" -> None, 
                    "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[
                    DownValues, ResourceObjectTest`IsHeld, {
                    ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`IsHeld"|>, False], {}, TestID -> 
                    "EnsureHeld-0002"], 
                    VerificationTest[
                    Information["UnevaluatedHead", LongForm -> False], 
                    
                    InformationData[<|"ObjectType" -> "Symbol", "Usage" -> 
                    "UnevaluatedHead[input] gives the head of the input \
without evaluating the input. This is useful when you need to inspect the \
structure of an expression without causing side effects due to evaluation.", 
                    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
                    None, "DownValues" -> Information`InformationValueForm[
                    DownValues, 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead,\
 {PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
                    None, "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "PeterBurbery`BasicHypergeometricFunctions`\
UnevaluatedHead"|>, False], {}, TestID -> "EnsureHeld-0003"]]|>]], Selectable -> 
                    False], "[", "input", "]"}], "]"}], "]"}], "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "HoldAll", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`InactivateIntegralProductSum\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InactivateIntegralProductSum[input] takes an \
expression as input, ensures it is held to prevent evaluation, removes any \
options from numerical functions, converts numerical functions to their exact \
counterparts, and then inactivates all instances of Integrate, Sum, and \
Product. It returns the transformed, inactive expression.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "InactivateIntegralProductSum[input] takes an expression as input, \
ensures it is held to prevent evaluation, removes any options from numerical \
functions, converts numerical functions to their exact counterparts, and then \
inactivates all instances of Integrate, Sum, and Product. It returns the \
transformed, inactive expression.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`InactivateIntegralProductSum, \
{$CellContext`InactivateIntegralProductSum[
         Pattern[$CellContext`input, 
          Blank[]]] :> ReleaseHold[
         ReplaceAll[{
          Integrate -> Inactive[Integrate], Product -> Inactive[Product], Sum -> 
           Inactive[Sum]}][
          Removed["MakeFunctionsExact"][
           $CellContext`RemoveNumericalFunctionOptions[
            ResourceFunction[
             
             ResourceObject[<|
              "Name" -> "EnsureHeld", "UUID" -> 
               "454e9185-e741-4b75-8ded-6c381c3187db", "ResourceType" -> 
               "Function", "Description" -> 
               "Checks an expression and holds it if it is not already held", 
               "ResourceLocations" -> {
                 CloudObject[
                 "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db"]}, "Version" -> None, 
               "Keywords" -> {
                "Evaluation Control", "Symbolic Computation", 
                 "Hold Expression", "Expression Manipulation"}, 
               "Categories" -> {
                "Core Language & Structure", 
                 "Higher Mathematical Computation", "Programming Utilities", 
                 "Symbolic & Numeric Computation"}, 
               "Compatibility" -> <|
                "WolframLanguageVersionRequired" -> "13.0+", 
                 "OperatingSystem" -> {"Windows", "MacOSX", "Unix"}, 
                 "Features" -> {}, 
                 "EvaluationEnvironment" -> {
                  "Session", "WebEvaluation", "BatchJob", "Script", "WebAPI", 
                   "Subkernel", "Scheduled"}, "CloudSupport" -> True|>, 
               "ContributorInformation" -> <|
                "ContributedBy" -> "Peter Cullen Burbery"|>, 
               "DefinitionNotebook" -> 
               CloudObject[
                "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-DefinitionNotebook.nb"], 
               "Documentation" -> <|"Usage" -> {<|"Usage" -> BoxData[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    StyleBox["ResourceFunction", "ResourceFunctionSymbol"], 
                    "[", 
                    StyleBox["\"EnsureHeld\"", "ResourceFunctionName"], "]"}],
                     "ResourceFunctionHandle"], "[", 
                    StyleBox["input", "TI"], "]"}]], "Description" -> 
                    TextData[{"checks whether the ", 
                    Cell[
                    BoxData[
                    StyleBox["input", "TI"]], "InlineFormula", FontFamily -> 
                    "Source Sans Pro"], 
                    " is an unheld expression. If it is, it holds the \
expression. If the input is already a held expression, it returns the input \
unchanged."}]|>}|>, "DocumentationLink" -> 
               URL["https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Function/EnsureHeld"], "ExampleNotebook" -> 
               CloudObject[
                "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Function/EnsureHeld/EnsureHeld-ExampleNotebook.nb"], "ExampleNotebookData" -> 
               Automatic, "FunctionLocation" -> 
               CloudObject[
                "https://www.wolframcloud.com/obj/burbery1/Resources/454/\
454e9185-e741-4b75-8ded-6c381c3187db/download/DefinitionData"], 
               "PageHeaderClickToCopy" -> 
               "ResourceObject[CloudObject[\"https://www.wolframcloud.com/obj/\
burbery1/DeployedResources/Function/EnsureHeld\"]]", 
               "RelatedSymbols" -> {
                "Hold", "HoldForm", "HoldComplete", "HoldPattern", 
                 "Unevaluated"}, 
               "SeeAlso" -> {
                "HoldArguments", "MapAtEvaluate", "ReplaceAllUnheld", 
                 "UnevaluatedAssociation"}, "ShortName" -> "EnsureHeld", 
               "SymbolName" -> 
               "FunctionRepository`$454e9185e7414b758ded6c381c3187db`\
EnsureHeld", "VerificationTests" -> HoldComplete[
                 VerificationTest[
                  Information["EnsureHeld", LongForm -> False], 
                  
                  InformationData[<|
                   "ObjectType" -> "Symbol", "Usage" -> 
                    "EnsureHeld[input] checks whether the input is an unheld \
expression. If it is, it holds the expression. If the input is already a held \
expression, it returns the input unchanged.", "Documentation" -> None, 
                    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[DownValues, 
                    ResourceFunction["EnsureHeld"], {
                    ResourceFunction["EnsureHeld"][
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> 
                    Module[{ResourceObjectTest`placeholder}, 
                    ResourceObjectTest`placeholder = Unique[]; Which[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input], 
                    ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]], ResourceObjectTest`input, 
                    And[
                    Not[
                    ResourceObjectTest`IsHeld[ResourceObjectTest`input]], 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input] === Symbol, 
                    Not[
                    MatchQ[
                    Head[ResourceObjectTest`input], 
                    Alternatives[Hold, HoldForm]]]], 
                    ReplaceAll[
                    ResourceObjectTest`placeholder[
                    Evaluate[ResourceObjectTest`input]], {
                    ResourceObjectTest`placeholder -> Hold}], True, 
                    Hold[ResourceObjectTest`input]]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`EnsureHeld"|>, False], {}, TestID -> 
                  "EnsureHeld-0001"], 
                 VerificationTest[
                  Information["IsHeld", LongForm -> False], 
                  
                  InformationData[<|
                   "ObjectType" -> "Symbol", "Usage" -> 
                    "IsHeld[input] returns True if the input is a held \
expression, and False otherwise. A held expression is an expression that is \
held by Hold or HoldForm.", "Documentation" -> None, "OwnValues" -> None, 
                    "UpValues" -> None, "DownValues" -> 
                    Information`InformationValueForm[
                    DownValues, ResourceObjectTest`IsHeld, {
                    ResourceObjectTest`IsHeld[
                    Pattern[ResourceObjectTest`input, 
                    Blank[]]] :> MatchQ[
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    ResourceObjectTest`input], 
                    Alternatives[HoldForm, Hold]]}], "SubValues" -> None, 
                    "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "Global`IsHeld"|>, False], {}, TestID -> 
                  "EnsureHeld-0002"], 
                 VerificationTest[
                  Information["UnevaluatedHead", LongForm -> False], 
                  
                  InformationData[<|
                   "ObjectType" -> "Symbol", "Usage" -> 
                    "UnevaluatedHead[input] gives the head of the input \
without evaluating the input. This is useful when you need to inspect the \
structure of an expression without causing side effects due to evaluation.", 
                    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
                    None, "DownValues" -> 
                    Information`InformationValueForm[
                    DownValues, 
                    PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead,\
 {PeterBurbery`BasicHypergeometricFunctions`UnevaluatedHead[
                    Pattern[ResourceObjectTest`expr, 
                    Blank[]]] :> Head[
                    Unevaluated[ResourceObjectTest`expr]]}], "SubValues" -> 
                    None, "DefaultValues" -> None, "NValues" -> None, 
                    "FormatValues" -> None, "Options" -> None, 
                    "Attributes" -> {HoldAll}, "FullName" -> 
                    "PeterBurbery`BasicHypergeometricFunctions`\
UnevaluatedHead"|>, False], {}, TestID -> 
                  "EnsureHeld-0003"]]|>]][$CellContext`input]]]]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {HoldAll}, 
    "FullName" -> "Global`InactivateIntegralProductSum"|>, False]]], "Output",
 CellChangeTimes->{3.896368578889577*^9},
 CellLabel->
  "Out[471]=",ExpressionUUID->"b488ee0f-05e4-4ed4-bddb-2da9aab69f7e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PacletDataRebuild", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8963686631825523`*^9, 3.8963686660353346`*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"669699a9-fbbb-4055-b94b-b39379932b1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletDirectoryLoad", "[", 
  "\"\<C:\\\\Users\\\\Peter\\\\OneDrive - Marshall \
University\\\\basic-hypergeometric-functions-paclet\\\\basic-hypergeometric-\
functions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8963686783054085`*^9, 3.896368707759104*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"153ec4a9-cc37-4f76-aaf1-1af5fe47e23a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall \
University\\\\GitHub\\\\basic-hypergeometric-functions-paclet\\\\basic-\
hypergeometric-functions\\\\\"\>", 
   ",", "\<\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall \
University\\\\basic-hypergeometric-functions-paclet\\\\basic-hypergeometric-\
functions\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.89636870906607*^9},
 CellLabel->
  "Out[560]=",ExpressionUUID->"333672c6-fa5e-44e8-839a-0d75cebc9aaf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PacletDataRebuild", "[", "]"}]], "Input",
 CellLabel->
  "In[561]:=",ExpressionUUID->"ca725915-8c15-4255-9204-5a7dc10f4899"]
},
WindowSize->{576, 585.6},
WindowMargins->{{-5.3999999999999995`, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7fe4d443-9f13-4ccb-8e7f-41d9ef483fd7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 272, 6, 35, "Text",ExpressionUUID->"61925f8d-2cc6-4d1f-9806-f7b23625d44c"],
Cell[833, 28, 164, 3, 35, "Text",ExpressionUUID->"7269cde9-aa58-4991-ace2-3f3d90d735ee"],
Cell[CellGroupData[{
Cell[1022, 35, 16370, 424, 314, "Input",ExpressionUUID->"e4c5f9ae-0a36-4999-8ddb-39118be0370a"],
Cell[17395, 461, 13024, 339, 445, "Output",ExpressionUUID->"a342ee5c-9cc0-4920-9213-61404df15978"]
}, Open  ]],
Cell[30434, 803, 175, 3, 35, "Text",ExpressionUUID->"b9675c38-5cf0-4dbf-b8bd-8f6082d94229"],
Cell[30612, 808, 412, 9, 48, "Input",ExpressionUUID->"c86dfdcd-94f5-4900-b0ff-2ba5d72d480e"],
Cell[CellGroupData[{
Cell[31049, 821, 15928, 422, 276, "Input",ExpressionUUID->"eac96d1d-9553-4e34-98f1-100180489987"],
Cell[46980, 1245, 12996, 339, 445, "Output",ExpressionUUID->"7a439b67-676b-4058-a7c7-e8978b169b0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60013, 1589, 15980, 423, 276, "Input",ExpressionUUID->"e3d57432-f834-4475-9141-e85fb491e2d4"],
Cell[75996, 2014, 156, 3, 32, "Output",ExpressionUUID->"1b73bce0-3175-4d93-87d2-d861402dad09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76189, 2022, 16347, 423, 314, "Input",ExpressionUUID->"d33dc299-ea8e-4021-97cc-5206b5d0b033"],
Cell[92539, 2447, 13277, 340, 445, "Output",ExpressionUUID->"d60cb441-b9e8-46ad-8314-457b5481a047"]
}, Open  ]],
Cell[105831, 2790, 1623, 44, 67, "Input",ExpressionUUID->"4940d82f-fdc5-4f53-891a-7b68e13df651"],
Cell[107457, 2836, 1707, 46, 86, "Input",ExpressionUUID->"3383fce6-9dac-4238-9b70-222e0fc06213"],
Cell[CellGroupData[{
Cell[109189, 2886, 228, 4, 28, "Input",ExpressionUUID->"8591a493-08be-4897-8d19-2ec01f81357c"],
Cell[109420, 2892, 196, 4, 32, "Output",ExpressionUUID->"63e1ae49-3f83-4aa9-a7bf-58d79b0c2407"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109653, 2901, 233, 4, 28, "Input",ExpressionUUID->"7a434db6-e34b-4019-94cd-a0f8bb35c69c"],
Cell[109889, 2907, 157, 3, 32, "Output",ExpressionUUID->"44800860-782b-4f92-9ef3-1ca16f2a95d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110083, 2915, 228, 4, 28, "Input",ExpressionUUID->"e8c28e50-7210-409e-a276-cc2088962c70"],
Cell[110314, 2921, 181, 3, 32, "Output",ExpressionUUID->"afd3b073-bb07-43ed-a15b-dce0597b0185"]
}, Open  ]],
Cell[110510, 2927, 153, 3, 35, "Text",ExpressionUUID->"a7142581-9ea4-4d21-a95e-03a55ad34a8d"],
Cell[110666, 2932, 2054, 47, 126, "Input",ExpressionUUID->"8ffb65a5-15ea-42e9-a5e9-03b4ffc62b38"],
Cell[CellGroupData[{
Cell[112745, 2983, 15974, 423, 276, "Input",ExpressionUUID->"7531225d-c362-4e21-9f5f-3a4b0f2cd2d3"],
Cell[128722, 3408, 13071, 340, 445, "Output",ExpressionUUID->"163fa509-1af2-484c-915f-a4d6ca22ffb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141830, 3753, 16441, 424, 314, "Input",ExpressionUUID->"992364e1-c98b-499f-ad3d-32194b415ad2"],
Cell[158274, 4179, 13095, 340, 445, "Output",ExpressionUUID->"e44a12e9-640c-4d3a-b322-dd109a35f2b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171406, 4524, 329, 6, 28, "Input",ExpressionUUID->"5b122021-65bf-4f03-9cb7-cf8ca76061fd"],
Cell[171738, 4532, 1579, 45, 77, "Output",ExpressionUUID->"2c325012-def6-42cf-b672-92a15ea1bb60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173354, 4582, 374, 7, 28, "Input",ExpressionUUID->"4887916b-4870-4661-aa61-199b4b2fa8b7"],
Cell[173731, 4591, 1475, 43, 77, "Output",ExpressionUUID->"ad02445d-08dc-4374-976e-522c8bd2d472"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175243, 4639, 9189, 183, 35, "Input",ExpressionUUID->"8ed85fb1-400f-4585-938b-c1147fc54f20"],
Cell[184435, 4824, 208, 5, 32, "Output",ExpressionUUID->"cfd97bb5-3cde-44fd-b5aa-4c40f9584966"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184680, 4834, 9324, 188, 35, "Input",ExpressionUUID->"888463d5-a3be-493b-ab68-76c8599a614b"],
Cell[194007, 5024, 338, 9, 48, "Output",ExpressionUUID->"af87d920-c5cc-4090-aae1-bc6c1b684a92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194382, 5038, 9328, 188, 35, "Input",ExpressionUUID->"4b93d8fa-03e3-42b7-8d20-e9347a8572b0"],
Cell[203713, 5228, 364, 9, 48, "Output",ExpressionUUID->"0c7e1e35-4056-479c-a092-3c41b8e44bd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204114, 5242, 411, 11, 28, "Input",ExpressionUUID->"f348debd-bfec-4b7a-acb5-1d649b0a49ce"],
Cell[204528, 5255, 671, 17, 48, "Output",ExpressionUUID->"b9ebab5e-bd4d-4085-b1b7-f350ea354a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205236, 5277, 9777, 201, 35, "Input",ExpressionUUID->"e43e0fd3-e6c4-4c55-a7e0-bc6732ebcf57"],
Cell[215016, 5480, 645, 17, 48, "Output",ExpressionUUID->"cf1f57d0-c146-48dd-a1b2-b8674ca2c6da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215698, 5502, 9865, 203, 35, "Input",ExpressionUUID->"82df28e3-f7a4-48c5-95b0-fa712f1c81af"],
Cell[225566, 5707, 647, 17, 48, "Output",ExpressionUUID->"0650250c-8b34-47e4-a306-a6f214efc8d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226250, 5729, 410, 11, 28, "Input",ExpressionUUID->"204a901c-e89c-421c-9561-937378d94de1"],
Cell[226663, 5742, 340, 9, 48, "Output",ExpressionUUID->"e565d432-6d32-4730-a529-0733e0ea7c59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227040, 5756, 375, 9, 28, "Input",ExpressionUUID->"636c505c-1ab2-492c-83c3-597d97513a64"],
Cell[227418, 5767, 495, 11, 28, "Message",ExpressionUUID->"2b2ed890-0a2b-409c-ac01-1e52e2d4211a"],
Cell[227916, 5780, 303, 8, 48, "Output",ExpressionUUID->"474e0130-b4fb-4869-8b04-5c160dbf6c18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228256, 5793, 9673, 196, 35, "Input",ExpressionUUID->"a041aaa0-22aa-4d3c-ad7f-349e489f501e"],
Cell[237932, 5991, 647, 17, 48, "Output",ExpressionUUID->"2e42fa79-a01d-4f14-a6f2-0f7cd21d8483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238616, 6013, 9676, 196, 35, "Input",ExpressionUUID->"f50b6d62-2fa4-428b-ba1d-f47590c16987"],
Cell[248295, 6211, 647, 17, 48, "Output",ExpressionUUID->"718c5fac-a261-40bf-8a5d-7a86d0fd0774"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248979, 6233, 10074, 208, 35, "Input",ExpressionUUID->"af50709a-0258-413b-936c-795e8f73393e"],
Cell[259056, 6443, 647, 17, 48, "Output",ExpressionUUID->"445dafc1-dab5-4e3c-9576-c36fcdbd130a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259740, 6465, 26466, 623, 340, "Input",ExpressionUUID->"0d519d51-b04e-46f9-b5b4-27d30ce18488"],
Cell[286209, 7090, 13865, 347, 1193, "Output",ExpressionUUID->"583b672e-26ae-4cc8-8c66-934f189ed47b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300111, 7442, 9855, 199, 37, "Input",ExpressionUUID->"1020bbf2-e63d-4948-a1ea-8bdba13a4600"],
Cell[309969, 7643, 576, 18, 46, "Output",ExpressionUUID->"03003b36-eaeb-44f8-9e31-ef5737dd4372"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310582, 7666, 312, 6, 28, "Input",ExpressionUUID->"38919c88-a843-448e-aa75-ade8a1316fd1"],
Cell[310897, 7674, 329, 8, 48, "Output",ExpressionUUID->"36d1cb29-80b9-4b29-ba69-f7a41d57a1cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311263, 7687, 295, 6, 28, "Input",ExpressionUUID->"c00eba71-b5c9-47d1-af35-e0f4c6635a1e"],
Cell[311561, 7695, 541, 17, 46, "Output",ExpressionUUID->"9d31b8fe-424e-4d8c-92bc-1c0358cf2188"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312139, 7717, 229, 4, 28, "Input",ExpressionUUID->"661d7ad3-66ce-40ca-92f9-9998f47e369f"],
Cell[312371, 7723, 303, 8, 48, "Output",ExpressionUUID->"da0627d1-ee60-4154-abc2-4d90e5806c2f"]
}, Open  ]],
Cell[312689, 7734, 2027, 51, 276, "Input",ExpressionUUID->"1b26f2f6-475f-43e4-a148-09cbe4368895"],
Cell[CellGroupData[{
Cell[314741, 7789, 18988, 446, 434, "Input",ExpressionUUID->"2063c56e-397d-4637-b65d-ce53d8350b22"],
Cell[333732, 8237, 7380, 212, 387, "Output",ExpressionUUID->"95cf3b59-ed2f-44a8-bf3b-2df2c1bf09c8"]
}, Open  ]],
Cell[341127, 8452, 1889, 48, 295, "Input",ExpressionUUID->"9a3a6316-b3c4-46af-9739-fe75ae8c2534"],
Cell[CellGroupData[{
Cell[343041, 8504, 19342, 449, 461, "Input",ExpressionUUID->"a9a5a28a-fd16-4ad6-a9b2-b81c647e9ce2"],
Cell[362386, 8955, 7425, 210, 416, "Output",ExpressionUUID->"3a255d7e-0ba4-4bb4-bdbb-7727841d85f4"]
}, Open  ]],
Cell[369826, 9168, 10378, 206, 94, "Input",ExpressionUUID->"155c9b3b-153d-4519-9722-5a90a6e62b0d"],
Cell[CellGroupData[{
Cell[380229, 9378, 19340, 449, 452, "Input",ExpressionUUID->"58742482-ca57-48ce-8ab2-7524796d7f6d"],
Cell[399572, 9829, 7479, 211, 416, "Output",ExpressionUUID->"011ae057-ae22-4d1e-8450-0a0195270dc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407088, 10045, 20133, 462, 499, "Input",ExpressionUUID->"402a5685-06bc-4a3c-b286-8dbd989961ee"],
Cell[427224, 10509, 9165, 236, 440, "Output",ExpressionUUID->"46f216cc-2fc8-4033-93b6-cea98b057910"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436426, 10750, 20580, 464, 527, "Input",ExpressionUUID->"86976575-c956-49ad-81f3-8d62f1c892e1"],
Cell[457009, 11216, 8540, 223, 431, "Output",ExpressionUUID->"b35da88a-9b41-4cef-94d7-c564c5c88bb9"]
}, Open  ]],
Cell[465564, 11442, 21880, 431, 430, "Input",ExpressionUUID->"0b43dfb0-6367-48f3-a45f-52fef8516095"],
Cell[CellGroupData[{
Cell[487469, 11877, 20578, 464, 491, "Input",ExpressionUUID->"83477624-ca0e-4836-a15c-dce96f3181c9"],
Cell[508050, 12343, 8572, 224, 431, "Output",ExpressionUUID->"8f6e9c98-62ff-4d62-b2f8-7c9e96a80abb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516659, 12572, 9386, 258, 406, "Input",ExpressionUUID->"8f6f7e55-78d1-4b2c-8aa2-512ea7ee39cc"],
Cell[526048, 12832, 8724, 226, 431, "Output",ExpressionUUID->"6ea26c0e-ab7b-49c5-b16d-483182ca048c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534809, 13063, 212, 4, 28, "Input",ExpressionUUID->"f2f46029-816d-4524-bb59-3beaba923887"],
Cell[535024, 13069, 13036, 320, 363, "Output",ExpressionUUID->"c7e3fb48-78c7-4a80-9193-67c77bef0753"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548097, 13394, 231, 4, 28, "Input",ExpressionUUID->"03790b3b-eb67-4019-b8a6-fb52e140e9ad"],
Cell[548331, 13400, 2001, 51, 96, "Output",ExpressionUUID->"8298a85b-716b-44fc-b0b6-ffab19431a33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550369, 13456, 226, 4, 28, "Input",ExpressionUUID->"10b6fa08-e2eb-4c25-9bdf-57f21bde0c4d"],
Cell[550598, 13462, 13265, 327, 169, "Output",ExpressionUUID->"2da8dc2c-8141-44e1-95de-a02a8c7d3cb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563900, 13794, 275, 5, 28, "Input",ExpressionUUID->"dadba224-2e9d-44f5-a892-92a8b0b8c088"],
Cell[564178, 13801, 31506, 638, 193, "Output",ExpressionUUID->"b1f9040e-3e17-4517-a261-40a2aa1861aa"]
}, Open  ]],
Cell[595699, 14442, 632, 16, 143, "Input",ExpressionUUID->"269bf142-5aee-4b7e-9667-653735f65a03"],
Cell[596334, 14460, 228, 4, 28, "Input",ExpressionUUID->"b2475e5a-f0e2-4cba-a733-1369cb716652"],
Cell[596565, 14466, 224, 4, 28, "Input",ExpressionUUID->"92518287-7231-4ecc-a5bd-7cf9a7e069fa"],
Cell[596792, 14472, 236, 4, 28, "Input",ExpressionUUID->"f0e777f7-f4b5-49a8-8a44-fda0108258f2"],
Cell[597031, 14478, 240, 4, 28, "Input",ExpressionUUID->"d3b600a3-a912-4109-bde0-d999f88fbd7c"],
Cell[CellGroupData[{
Cell[597296, 14486, 220, 4, 28, "Input",ExpressionUUID->"6fe9c0e8-4069-4d2d-aa9e-88fa005b5c77"],
Cell[597519, 14492, 31636, 641, 193, "Output",ExpressionUUID->"b488ee0f-05e4-4ed4-bddb-2da9aab69f7e"]
}, Open  ]],
Cell[629170, 15136, 218, 4, 28, "Input",ExpressionUUID->"669699a9-fbbb-4055-b94b-b39379932b1e"],
Cell[CellGroupData[{
Cell[629413, 15144, 366, 7, 86, "Input",ExpressionUUID->"153ec4a9-cc37-4f76-aaf1-1af5fe47e23a"],
Cell[629782, 15153, 495, 10, 128, "Output",ExpressionUUID->"333672c6-fa5e-44e8-839a-0d75cebc9aaf"]
}, Open  ]],
Cell[630292, 15166, 148, 3, 58, "Input",ExpressionUUID->"ca725915-8c15-4255-9204-5a7dc10f4899"]
}
]
*)

